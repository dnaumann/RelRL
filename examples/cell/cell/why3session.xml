<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.3.3" timelimit="30" steplimit="0" memlimit="5000"/>
<prover id="2" name="CVC4" version="1.7" timelimit="30" steplimit="0" memlimit="5000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="30" steplimit="0" memlimit="5000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="cell.mlw"/>
<theory name="State" proved="true">
 <goal name="state&#39;vc" expl="VC for state" proved="true">
 <proof prover="1" timelimit="20"><result status="valid" time="0.02" steps="151"/></proof>
 </goal>
</theory>
<theory name="ACell" proved="true">
 <goal name="init_Cell&#39;vc" expl="VC for init_Cell" proved="true">
 <proof prover="1" timelimit="20"><result status="valid" time="3.22" steps="21995"/></proof>
 <transf name="split_vc" >
  <goal name="init_Cell&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.1" expl="type invariant">
  </goal>
  <goal name="init_Cell&#39;vc.2" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="88"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="38"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.4" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.5" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="107"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.6" expl="write frame value" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="107"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="2666"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="87"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="599"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cset&#39;vc" expl="VC for cset" proved="true">
 <proof prover="1" timelimit="20"><result status="valid" time="0.25" steps="2257"/></proof>
 </goal>
 <goal name="cget&#39;vc" expl="VC for cget" proved="true">
 <proof prover="1" timelimit="20"><result status="valid" time="0.02" steps="69"/></proof>
 </goal>
</theory>
<theory name="BCell" proved="true">
 <goal name="init_Cell&#39;vc" expl="VC for init_Cell" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="init_Cell&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="757"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.2" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.08" steps="90"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.4" expl="wr frame alloc" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="25241"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.5" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.08" steps="109"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.6" expl="write frame value" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.08" steps="109"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.49" steps="2801"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="89"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.11" steps="704"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="755"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.09" steps="90"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.14" expl="wr frame alloc" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="25272"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.15" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.07" steps="109"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.16" expl="write frame value" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.07" steps="109"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.66" steps="4245"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="89"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.08" steps="703"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cset&#39;vc" expl="VC for cset" proved="true">
 <proof prover="1" timelimit="20"><result status="valid" time="0.86" steps="5371"/></proof>
 </goal>
 <goal name="cget&#39;vc" expl="VC for cget" proved="true">
 <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="69"/></proof>
 </goal>
</theory>
<theory name="CELL_REL" proved="true">
 <goal name="init_Cell&#39;vc" expl="VC for init_Cell" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="init_Cell&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="68"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.2" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="1541"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.3" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.14" steps="210"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.04" steps="92"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="1730"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.6" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.15" steps="224"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.7" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="98"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.8" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.15" steps="243"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.9" expl="write frame value" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.15" steps="243"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.10" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="98"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.11" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.15" steps="243"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.12" expl="write frame value" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.14" steps="243"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="33295"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.06" steps="227"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="1.04" steps="5441"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.16" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="init_Cell&#39;vc.16.0" expl="postcondition" proved="true">
   <proof prover="1" timelimit="20"><result status="valid" time="0.70" steps="3145"/></proof>
   </goal>
   <goal name="init_Cell&#39;vc.16.1" expl="postcondition" proved="true">
   <proof prover="1" timelimit="20"><result status="valid" time="0.80" steps="3692"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="init_Cell&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="1233"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="112"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.19" expl="assertion" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="68"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.21" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="1537"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.14" steps="210"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.23" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="92"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.24" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="1726"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.25" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.14" steps="224"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.26" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="98"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.27" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.14" steps="243"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.28" expl="write frame value" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.15" steps="243"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.29" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="98"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.30" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.14" steps="243"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.31" expl="write frame value" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.15" steps="243"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.30" steps="33378"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.06" steps="227"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="1.01" steps="5424"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.35" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="init_Cell&#39;vc.35.0" expl="postcondition" proved="true">
   <proof prover="1" timelimit="20"><result status="valid" time="0.74" steps="3386"/></proof>
   </goal>
   <goal name="init_Cell&#39;vc.35.1" expl="postcondition" proved="true">
   <proof prover="1" timelimit="20"><result status="valid" time="0.70" steps="3140"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="init_Cell&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="1231"/></proof>
  </goal>
  <goal name="init_Cell&#39;vc.37" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="112"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cset&#39;vc" expl="VC for cset" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cset&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.14" steps="466"/></proof>
  </goal>
  <goal name="cset&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="64"/></proof>
  </goal>
  <goal name="cset&#39;vc.2" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="567"/></proof>
  </goal>
  <goal name="cset&#39;vc.3" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.07" steps="70"/></proof>
  </goal>
  <goal name="cset&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="70"/></proof>
  </goal>
  <goal name="cset&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="620"/></proof>
  </goal>
  <goal name="cset&#39;vc.6" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.06" steps="76"/></proof>
  </goal>
  <goal name="cset&#39;vc.7" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="76"/></proof>
  </goal>
  <goal name="cset&#39;vc.8" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.02" steps="80"/></proof>
  </goal>
  <goal name="cset&#39;vc.9" expl="write frame value" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.11" steps="181"/></proof>
  </goal>
  <goal name="cset&#39;vc.10" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="76"/></proof>
  </goal>
  <goal name="cset&#39;vc.11" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.02" steps="80"/></proof>
  </goal>
  <goal name="cset&#39;vc.12" expl="write frame value" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.11" steps="181"/></proof>
  </goal>
  <goal name="cset&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="533"/></proof>
  </goal>
  <goal name="cset&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.29" steps="2084"/></proof>
  </goal>
  <goal name="cset&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.40" steps="1817"/></proof>
  </goal>
  <goal name="cset&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.02" steps="84"/></proof>
  </goal>
  <goal name="cset&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.11" steps="773"/></proof>
  </goal>
  <goal name="cset&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.02" steps="87"/></proof>
  </goal>
  <goal name="cset&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="64"/></proof>
  </goal>
  <goal name="cset&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="563"/></proof>
  </goal>
  <goal name="cset&#39;vc.21" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.06" steps="70"/></proof>
  </goal>
  <goal name="cset&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="70"/></proof>
  </goal>
  <goal name="cset&#39;vc.23" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="616"/></proof>
  </goal>
  <goal name="cset&#39;vc.24" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.07" steps="76"/></proof>
  </goal>
  <goal name="cset&#39;vc.25" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="76"/></proof>
  </goal>
  <goal name="cset&#39;vc.26" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.02" steps="80"/></proof>
  </goal>
  <goal name="cset&#39;vc.27" expl="write frame value" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.10" steps="181"/></proof>
  </goal>
  <goal name="cset&#39;vc.28" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="76"/></proof>
  </goal>
  <goal name="cset&#39;vc.29" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.02" steps="80"/></proof>
  </goal>
  <goal name="cset&#39;vc.30" expl="write frame value" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.09" steps="181"/></proof>
  </goal>
  <goal name="cset&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="531"/></proof>
  </goal>
  <goal name="cset&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.40" steps="2082"/></proof>
  </goal>
  <goal name="cset&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.38" steps="1815"/></proof>
  </goal>
  <goal name="cset&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.02" steps="84"/></proof>
  </goal>
  <goal name="cset&#39;vc.35" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.11" steps="771"/></proof>
  </goal>
  <goal name="cset&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.02" steps="87"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cget&#39;vc" expl="VC for cget" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cget&#39;vc.0" expl="result := self.value" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.03" steps="96"/></proof>
  </goal>
  <goal name="cget&#39;vc.1" expl="value := self.value" proved="true">
  <proof prover="1" timelimit="20"><result status="valid" time="0.02" steps="101"/></proof>
  </goal>
  <goal name="cget&#39;vc.2" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="56"/></proof>
  </goal>
  <goal name="cget&#39;vc.3" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="60"/></proof>
  </goal>
  <goal name="cget&#39;vc.4" expl="write frame value" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="60"/></proof>
  </goal>
  <goal name="cget&#39;vc.5" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="56"/></proof>
  </goal>
  <goal name="cget&#39;vc.6" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="60"/></proof>
  </goal>
  <goal name="cget&#39;vc.7" expl="write frame value" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="60"/></proof>
  </goal>
  <goal name="cget&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="54"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="23094"/></proof>
  </goal>
  <goal name="cget&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="54"/></proof>
  </goal>
  <goal name="cget&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="139"/></proof>
  </goal>
  <goal name="cget&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="58"/></proof>
  </goal>
  <goal name="cget&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="58"/></proof>
  </goal>
  <goal name="cget&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="58"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Client" proved="true">
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="main&#39;vc.0" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="main&#39;vc.1" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="main&#39;vc.2" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="30"/></proof>
  </goal>
  <goal name="main&#39;vc.3" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="main&#39;vc.4" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="141"/></proof>
  </goal>
  <goal name="main&#39;vc.5" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="main&#39;vc.6" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="main&#39;vc.7" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="44"/></proof>
  </goal>
  <goal name="main&#39;vc.8" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="44"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="9858"/></proof>
  </goal>
  <goal name="main&#39;vc.9" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="44"/></proof>
  </goal>
  <goal name="main&#39;vc.10" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="44"/></proof>
  </goal>
  <goal name="main&#39;vc.11" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="44"/></proof>
  </goal>
  <goal name="main&#39;vc.12" expl="result := cget(c)" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="52"/></proof>
  </goal>
  <goal name="main&#39;vc.13" expl="result := cget(c)" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="52"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="10173"/></proof>
  </goal>
  <goal name="main&#39;vc.14" expl="result := cget(c)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="52"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="87477"/></proof>
  </goal>
  <goal name="main&#39;vc.15" expl="result := cget(c)" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="53"/></proof>
  </goal>
  <goal name="main&#39;vc.16" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="180"/></proof>
  </goal>
  <goal name="main&#39;vc.17" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="370"/></proof>
  </goal>
  <goal name="main&#39;vc.18" expl="write frame value" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="362"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="CLIENT_REL" proved="true">
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="main&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="63"/></proof>
  </goal>
  <goal name="main&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="63"/></proof>
  </goal>
  <goal name="main&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="150"/></proof>
  </goal>
  <goal name="main&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="154"/></proof>
  </goal>
  <goal name="main&#39;vc.4" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="81"/></proof>
  </goal>
  <goal name="main&#39;vc.5" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="82"/></proof>
  </goal>
  <goal name="main&#39;vc.6" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="85"/></proof>
  </goal>
  <goal name="main&#39;vc.7" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="85"/></proof>
  </goal>
  <goal name="main&#39;vc.8" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="85"/></proof>
  </goal>
  <goal name="main&#39;vc.9" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="85"/></proof>
  </goal>
  <goal name="main&#39;vc.10" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.96" steps="4204"/></proof>
  </goal>
  <goal name="main&#39;vc.11" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="87"/></proof>
  </goal>
  <goal name="main&#39;vc.12" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="88"/></proof>
  </goal>
  <goal name="main&#39;vc.13" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="88"/></proof>
  </goal>
  <goal name="main&#39;vc.14" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="90"/></proof>
  </goal>
  <goal name="main&#39;vc.15" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="92"/></proof>
  </goal>
  <goal name="main&#39;vc.16" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="1215"/></proof>
  </goal>
  <goal name="main&#39;vc.17" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="1304"/></proof>
  </goal>
  <goal name="main&#39;vc.18" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="100"/></proof>
  </goal>
  <goal name="main&#39;vc.19" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="166"/></proof>
  </goal>
  <goal name="main&#39;vc.20" expl="Cell(c,0)" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="577"/></proof>
  </goal>
  <goal name="main&#39;vc.21" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="114"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="28070"/></proof>
  </goal>
  <goal name="main&#39;vc.22" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="123"/></proof>
  <proof prover="2"><result status="valid" time="0.22" steps="33494"/></proof>
  </goal>
  <goal name="main&#39;vc.23" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="123"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="25647"/></proof>
  </goal>
  <goal name="main&#39;vc.24" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="125"/></proof>
  <proof prover="2"><result status="valid" time="0.22" steps="33552"/></proof>
  </goal>
  <goal name="main&#39;vc.25" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="125"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="25661"/></proof>
  </goal>
  <goal name="main&#39;vc.26" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="125"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="25666"/></proof>
  </goal>
  <goal name="main&#39;vc.27" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="125"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="27439"/></proof>
  </goal>
  <goal name="main&#39;vc.28" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="127"/></proof>
  <proof prover="2"><result status="valid" time="0.09" steps="25870"/></proof>
  </goal>
  <goal name="main&#39;vc.29" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="310"/></proof>
  <proof prover="2"><result status="valid" time="0.36" steps="46461"/></proof>
  </goal>
  <goal name="main&#39;vc.30" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="2713"/></proof>
  </goal>
  <goal name="main&#39;vc.31" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="132"/></proof>
  <proof prover="2"><result status="valid" time="0.09" steps="25804"/></proof>
  </goal>
  <goal name="main&#39;vc.32" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="132"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="25815"/></proof>
  </goal>
  <goal name="main&#39;vc.33" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="132"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="28569"/></proof>
  </goal>
  <goal name="main&#39;vc.34" expl="cset(c,x)" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="132"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="25830"/></proof>
  </goal>
  <goal name="main&#39;vc.35" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="153"/></proof>
  <proof prover="2"><result status="valid" time="0.26" steps="36289"/></proof>
  </goal>
  <goal name="main&#39;vc.36" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="153"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="26762"/></proof>
  </goal>
  <goal name="main&#39;vc.37" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="155"/></proof>
  <proof prover="2"><result status="valid" time="0.22" steps="36351"/></proof>
  </goal>
  <goal name="main&#39;vc.38" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="155"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="26776"/></proof>
  </goal>
  <goal name="main&#39;vc.39" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="155"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="26781"/></proof>
  </goal>
  <goal name="main&#39;vc.40" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="387"/></proof>
  <proof prover="2"><result status="valid" time="0.47" steps="51346"/></proof>
  </goal>
  <goal name="main&#39;vc.41" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="157"/></proof>
  <proof prover="2"><result status="valid" time="0.11" steps="27530"/></proof>
  </goal>
  <goal name="main&#39;vc.42" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="157"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="26844"/></proof>
  </goal>
  <goal name="main&#39;vc.43" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="157"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="26855"/></proof>
  </goal>
  <goal name="main&#39;vc.44" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="157"/></proof>
  <proof prover="2"><result status="valid" time="0.17" steps="31728"/></proof>
  </goal>
  <goal name="main&#39;vc.45" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="159"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="26898"/></proof>
  </goal>
  <goal name="main&#39;vc.46" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="163"/></proof>
  </goal>
  <goal name="main&#39;vc.47" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="737"/></proof>
  </goal>
  <goal name="main&#39;vc.48" expl="write frame value" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="736"/></proof>
  <proof prover="2"><result status="valid" time="0.23" steps="40482"/></proof>
  </goal>
  <goal name="main&#39;vc.49" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="163"/></proof>
  </goal>
  <goal name="main&#39;vc.50" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="737"/></proof>
  </goal>
  <goal name="main&#39;vc.51" expl="write frame value" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="736"/></proof>
  <proof prover="2"><result status="valid" time="0.26" steps="40918"/></proof>
  </goal>
  <goal name="main&#39;vc.52" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="160"/></proof>
  <proof prover="2"><result status="valid" time="0.11" steps="27565"/></proof>
  </goal>
  <goal name="main&#39;vc.53" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="160"/></proof>
  <proof prover="2"><result status="valid" time="0.11" steps="27793"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
