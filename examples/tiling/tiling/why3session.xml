<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.3.1" timelimit="80" steplimit="0" memlimit="4000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="80" steplimit="0" memlimit="6000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="tiling.mlw"/>
<theory name="State" proved="true">
 <goal name="state&#39;vc" expl="VC for state" proved="true">
 <proof prover="0"><result status="valid" time="0.05" steps="175"/></proof>
 </goal>
</theory>
<theory name="M0" proved="true">
 <goal name="prog&#39;vc" expl="VC for prog" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="prog&#39;vc.0" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="prog&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="22"/></proof>
  </goal>
  <goal name="prog&#39;vc.2" expl="wr {a1}`slots" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="24"/></proof>
  </goal>
  <goal name="prog&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
  </goal>
  <goal name="prog&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="29"/></proof>
  </goal>
  <goal name="prog&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="103"/></proof>
  </goal>
  <goal name="prog&#39;vc.6" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="97"/></proof>
  </goal>
  <goal name="prog&#39;vc.7" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="70"/></proof>
  </goal>
  <goal name="prog&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.37" steps="1446"/></proof>
  </goal>
  <goal name="prog&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.23" steps="832"/></proof>
  </goal>
  <goal name="prog&#39;vc.10" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="193"/></proof>
  </goal>
  <goal name="prog&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="140"/></proof>
  </goal>
  <goal name="prog&#39;vc.12" expl="wr {a1}`slots" proved="true">
  <proof prover="0"><result status="valid" time="0.45" steps="736"/></proof>
  </goal>
  <goal name="prog&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="88"/></proof>
  </goal>
  <goal name="prog&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.34" steps="612"/></proof>
  </goal>
  <goal name="prog&#39;vc.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="100"/></proof>
  </goal>
  <goal name="prog&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="213"/></proof>
  </goal>
  <goal name="prog&#39;vc.17" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="194"/></proof>
  </goal>
  <goal name="prog&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="120"/></proof>
  </goal>
  <goal name="prog&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="1.57" steps="3353"/></proof>
  </goal>
  <goal name="prog&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.80" steps="1555"/></proof>
  </goal>
  <goal name="prog&#39;vc.21" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="348"/></proof>
  </goal>
  <goal name="prog&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="217"/></proof>
  </goal>
  <goal name="prog&#39;vc.23" expl="wr {a1}`slots" proved="true">
  <proof prover="0"><result status="valid" time="1.23" steps="1429"/></proof>
  </goal>
  <goal name="prog&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="138"/></proof>
  </goal>
  <goal name="prog&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.85" steps="1078"/></proof>
  </goal>
  <goal name="prog&#39;vc.26" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="100"/></proof>
  </goal>
  <goal name="prog&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="100"/></proof>
  </goal>
  <goal name="prog&#39;vc.28" expl="wr {a1}`slots" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="100"/></proof>
  </goal>
  <goal name="prog&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="100"/></proof>
  </goal>
  <goal name="prog&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="107"/></proof>
  </goal>
  <goal name="prog&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="52"/></proof>
  </goal>
  <goal name="prog&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="prog&#39;vc.33" expl="wr ({a1} union {a2}`tDslots)`slots" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="119"/></proof>
  </goal>
  <goal name="prog&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="60"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M1" proved="true">
 <goal name="prog&#39;vc" expl="VC for prog" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="prog&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="prog&#39;vc.1" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="22"/></proof>
  </goal>
  <goal name="prog&#39;vc.2" expl="locals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="22"/></proof>
  </goal>
  <goal name="prog&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="24"/></proof>
  </goal>
  <goal name="prog&#39;vc.4" expl="wr {a2}`tDslots`slots" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="26"/></proof>
  </goal>
  <goal name="prog&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="28"/></proof>
  </goal>
  <goal name="prog&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="31"/></proof>
  </goal>
  <goal name="prog&#39;vc.7" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="121"/></proof>
  </goal>
  <goal name="prog&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="134"/></proof>
  </goal>
  <goal name="prog&#39;vc.9" expl="row_i := a2.{i} ( index is in bounds)" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="125"/></proof>
  </goal>
  <goal name="prog&#39;vc.10" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(s.alloct[row_i] = IntArray)">
   <goal name="prog&#39;vc.10.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.11" steps="158"/></proof>
   </goal>
   <goal name="prog&#39;vc.10.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.18" steps="606"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.11" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.22" steps="620"/></proof>
  </goal>
  <goal name="prog&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="85"/></proof>
  </goal>
  <goal name="prog&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="1.23" steps="2134"/></proof>
  </goal>
  <goal name="prog&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.63" steps="1010"/></proof>
  </goal>
  <goal name="prog&#39;vc.15" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="274"/></proof>
  </goal>
  <goal name="prog&#39;vc.16" expl="locals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.35" steps="1019"/></proof>
  </goal>
  <goal name="prog&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="162"/></proof>
  </goal>
  <goal name="prog&#39;vc.18" expl="wr {a2}`tDslots`slots" proved="true">
  <proof prover="0"><result status="valid" time="14.09" steps="14422"/></proof>
  </goal>
  <goal name="prog&#39;vc.19" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="104"/></proof>
  </goal>
  <goal name="prog&#39;vc.20" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="105"/></proof>
  </goal>
  <goal name="prog&#39;vc.21" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="4.35" steps="4382"/></proof>
  </goal>
  <goal name="prog&#39;vc.22" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="114"/></proof>
  </goal>
  <goal name="prog&#39;vc.23" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="123"/></proof>
  </goal>
  <goal name="prog&#39;vc.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.19" steps="270"/></proof>
  </goal>
  <goal name="prog&#39;vc.25" expl="row_i := a2.{i} ( index is in bounds)" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="227"/></proof>
  </goal>
  <goal name="prog&#39;vc.26" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.44" steps="1169"/></proof>
  </goal>
  <goal name="prog&#39;vc.27" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="1.04" steps="1543"/></proof>
  </goal>
  <goal name="prog&#39;vc.28" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="141"/></proof>
  </goal>
  <goal name="prog&#39;vc.29" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="2.61" steps="4750"/></proof>
  </goal>
  <goal name="prog&#39;vc.30" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="1.02" steps="1567"/></proof>
  </goal>
  <goal name="prog&#39;vc.31" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.24" steps="599"/></proof>
  </goal>
  <goal name="prog&#39;vc.32" expl="locals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="1.44" steps="1911"/></proof>
  </goal>
  <goal name="prog&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="242"/></proof>
  </goal>
  <goal name="prog&#39;vc.34" expl="wr {a2}`tDslots`slots" proved="true">
  <transf name="unfold" proved="true" arg1="wrs_to_slots_framed_by">
   <goal name="prog&#39;vc.34.0" expl="VC for prog" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="prog&#39;vc.34.0.0" expl="VC for prog" proved="true">
    <transf name="assert" proved="true" arg1="(p &lt;&gt; row_i)">
     <goal name="prog&#39;vc.34.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="2.48" steps="2751"/></proof>
     </goal>
     <goal name="prog&#39;vc.34.0.0.1" expl="VC for prog" proved="true">
     <transf name="assert" proved="true" arg1="(s1.heap.slots[p] = s.heap.slots[p])">
      <goal name="prog&#39;vc.34.0.0.1.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="0.60" steps="439"/></proof>
      </goal>
      <goal name="prog&#39;vc.34.0.0.1.1" expl="VC for prog" proved="true">
      <proof prover="0"><result status="valid" time="20.66" steps="19620"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="159"/></proof>
  </goal>
  <goal name="prog&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="160"/></proof>
  </goal>
  <goal name="prog&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="16.66" steps="16183"/></proof>
  </goal>
  <goal name="prog&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="2.47" steps="4167"/></proof>
  </goal>
  <goal name="prog&#39;vc.39" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="119"/></proof>
  </goal>
  <goal name="prog&#39;vc.40" expl="locals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="119"/></proof>
  </goal>
  <goal name="prog&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="119"/></proof>
  </goal>
  <goal name="prog&#39;vc.42" expl="wr {a2}`tDslots`slots" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="119"/></proof>
  </goal>
  <goal name="prog&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="119"/></proof>
  </goal>
  <goal name="prog&#39;vc.44" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.54" steps="1145"/></proof>
  </goal>
  <goal name="prog&#39;vc.45" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="60"/></proof>
  </goal>
  <goal name="prog&#39;vc.46" expl="locals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="60"/></proof>
  </goal>
  <goal name="prog&#39;vc.47" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="60"/></proof>
  </goal>
  <goal name="prog&#39;vc.48" expl="wr {a2}`tDslots`slots" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="60"/></proof>
  </goal>
  <goal name="prog&#39;vc.49" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="60"/></proof>
  </goal>
  <goal name="prog&#39;vc.50" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="62"/></proof>
  </goal>
  <goal name="prog&#39;vc.51" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="69"/></proof>
  </goal>
  <goal name="prog&#39;vc.52" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="65"/></proof>
  </goal>
  <goal name="prog&#39;vc.53" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.54" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.55" expl="row_i := a2.{i} ( index is in bounds)" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.56" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.57" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.58" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.59" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.60" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.61" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.62" expl="locals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.63" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.64" expl="wr {a2}`tDslots`slots" proved="true">
  <transf name="unfold" proved="true" arg1="wrs_to_slots_framed_by">
   <goal name="prog&#39;vc.64.0" expl="VC for prog" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="prog&#39;vc.64.0.0" expl="VC for prog" proved="true">
    <transf name="assert" proved="true" arg1="(p &lt;&gt; row_i)">
     <goal name="prog&#39;vc.64.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
     </goal>
     <goal name="prog&#39;vc.64.0.0.1" expl="VC for prog" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.65" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.66" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.67" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.68" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.69" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="96"/></proof>
  </goal>
  <goal name="prog&#39;vc.70" expl="locals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="96"/></proof>
  </goal>
  <goal name="prog&#39;vc.71" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="96"/></proof>
  </goal>
  <goal name="prog&#39;vc.72" expl="wr {a2}`tDslots`slots" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="96"/></proof>
  </goal>
  <goal name="prog&#39;vc.73" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="96"/></proof>
  </goal>
  <goal name="prog&#39;vc.74" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="104"/></proof>
  </goal>
  <goal name="prog&#39;vc.75" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="56"/></proof>
  </goal>
  <goal name="prog&#39;vc.76" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="56"/></proof>
  </goal>
  <goal name="prog&#39;vc.77" expl="wr ({a1} union {a2}`tDslots)`slots" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="124"/></proof>
  </goal>
  <goal name="prog&#39;vc.78" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="143"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="BM" proved="true">
 <goal name="prog&#39;vc" expl="VC for prog" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="prog&#39;vc.0" expl="globals type invariant left" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="50"/></proof>
  </goal>
  <goal name="prog&#39;vc.1" expl="globals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="50"/></proof>
  </goal>
  <goal name="prog&#39;vc.2" expl="locals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="52"/></proof>
  </goal>
  <goal name="prog&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="52"/></proof>
  </goal>
  <goal name="prog&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="54"/></proof>
  </goal>
  <goal name="prog&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="57"/></proof>
  </goal>
  <goal name="prog&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="58"/></proof>
  </goal>
  <goal name="prog&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="128"/></proof>
  </goal>
  <goal name="prog&#39;vc.8" expl="lockstep" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="65"/></proof>
  </goal>
  <goal name="prog&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="216"/></proof>
  </goal>
  <goal name="prog&#39;vc.10" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="200"/></proof>
  </goal>
  <goal name="prog&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="260"/></proof>
  </goal>
  <goal name="prog&#39;vc.12" expl="row_i := a2.{i} ( index is in bounds)" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="248"/></proof>
  </goal>
  <goal name="prog&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.60" steps="766"/></proof>
  </goal>
  <goal name="prog&#39;vc.14" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.66" steps="771"/></proof>
  </goal>
  <goal name="prog&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="157"/></proof>
  </goal>
  <goal name="prog&#39;vc.16" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="2.95" steps="5419"/></proof>
  </goal>
  <goal name="prog&#39;vc.17" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="1.06" steps="1859"/></proof>
  </goal>
  <goal name="prog&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="169"/></proof>
  </goal>
  <goal name="prog&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="5.04" steps="4171"/></proof>
  </goal>
  <goal name="prog&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="1.47" steps="1534"/></proof>
  </goal>
  <goal name="prog&#39;vc.21" expl="globals type invariant left" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="442"/></proof>
  </goal>
  <goal name="prog&#39;vc.22" expl="globals type invariant right" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prog&#39;vc.22.0" expl="globals type invariant right" proved="true">
   <proof prover="0"><result status="valid" time="0.15" steps="319"/></proof>
   </goal>
   <goal name="prog&#39;vc.22.1" expl="globals type invariant right" proved="true">
   <proof prover="0"><result status="valid" time="0.15" steps="319"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.23" expl="locals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.94" steps="1274"/></proof>
  </goal>
  <goal name="prog&#39;vc.24" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="7.15" steps="5083"/></proof>
  </goal>
  <goal name="prog&#39;vc.25" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="191"/></proof>
  </goal>
  <goal name="prog&#39;vc.26" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="193"/></proof>
  </goal>
  <goal name="prog&#39;vc.27" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="196"/></proof>
  </goal>
  <goal name="prog&#39;vc.28" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="318"/></proof>
  </goal>
  <goal name="prog&#39;vc.29" expl="lockstep" proved="true">
  <proof prover="0"><result status="valid" time="10.64" steps="5321"/></proof>
  </goal>
  <goal name="prog&#39;vc.30" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="218"/></proof>
  </goal>
  <goal name="prog&#39;vc.31" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.62" steps="459"/></proof>
  </goal>
  <goal name="prog&#39;vc.32" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.22" steps="427"/></proof>
  </goal>
  <goal name="prog&#39;vc.33" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.68" steps="530"/></proof>
  </goal>
  <goal name="prog&#39;vc.34" expl="row_i := a2.{i} ( index is in bounds)" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="390"/></proof>
  </goal>
  <goal name="prog&#39;vc.35" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="4.20" steps="2674"/></proof>
  </goal>
  <goal name="prog&#39;vc.36" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="3.34" steps="1965"/></proof>
  </goal>
  <goal name="prog&#39;vc.37" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prog&#39;vc.37.0" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.23" steps="224"/></proof>
   </goal>
   <goal name="prog&#39;vc.37.1" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.12" steps="184"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.38" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="14.84" steps="9235"/></proof>
  </goal>
  <goal name="prog&#39;vc.39" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="8.89" steps="3949"/></proof>
  </goal>
  <goal name="prog&#39;vc.40" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="272"/></proof>
  </goal>
  <goal name="prog&#39;vc.41" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="14.00" steps="8523"/></proof>
  </goal>
  <goal name="prog&#39;vc.42" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="5.26" steps="4505"/></proof>
  </goal>
  <goal name="prog&#39;vc.43" expl="globals type invariant left" proved="true">
  <proof prover="0"><result status="valid" time="0.85" steps="848"/></proof>
  </goal>
  <goal name="prog&#39;vc.44" expl="globals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.51" steps="840"/></proof>
  </goal>
  <goal name="prog&#39;vc.45" expl="locals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="6.22" steps="2648"/></proof>
  </goal>
  <goal name="prog&#39;vc.46" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="24.19" steps="9292"/></proof>
  </goal>
  <goal name="prog&#39;vc.47" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="294"/></proof>
  </goal>
  <goal name="prog&#39;vc.48" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="296"/></proof>
  </goal>
  <goal name="prog&#39;vc.49" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="299"/></proof>
  </goal>
  <goal name="prog&#39;vc.50" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.23" steps="469"/></proof>
  </goal>
  <goal name="prog&#39;vc.51" expl="lockstep" proved="true">
  <transf name="split_all_right" proved="true" >
   <goal name="prog&#39;vc.51.0" expl="VC for prog" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="prog&#39;vc.51.0.0" expl="VC for prog" proved="true">
    <proof prover="1"><result status="valid" time="5.65"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="prog&#39;vc.51.1" expl="VC for prog" proved="true">
   <proof prover="1"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="prog&#39;vc.51.2" expl="VC for prog" proved="true">
   <proof prover="0" memlimit="6000"><result status="valid" time="23.33" steps="6947"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.52" expl="globals type invariant left" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="220"/></proof>
  </goal>
  <goal name="prog&#39;vc.53" expl="globals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="220"/></proof>
  </goal>
  <goal name="prog&#39;vc.54" expl="locals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="220"/></proof>
  </goal>
  <goal name="prog&#39;vc.55" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="220"/></proof>
  </goal>
  <goal name="prog&#39;vc.56" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="220"/></proof>
  </goal>
  <goal name="prog&#39;vc.57" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="220"/></proof>
  </goal>
  <goal name="prog&#39;vc.58" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="224"/></proof>
  </goal>
  <goal name="prog&#39;vc.59" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="367"/></proof>
  </goal>
  <goal name="prog&#39;vc.60" expl="lockstep" proved="true">
  <proof prover="0"><result status="valid" time="4.43" steps="3111"/></proof>
  </goal>
  <goal name="prog&#39;vc.61" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.62" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.63" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.64" expl="globals type invariant left" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.65" expl="globals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.66" expl="locals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.67" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.68" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.69" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.70" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.71" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.72" expl="lockstep" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.73" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.74" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.75" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.76" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.77" expl="row_i := a2.{i} ( index is in bounds)" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.78" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.79" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.80" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.81" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.82" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.83" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.84" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.85" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.86" expl="globals type invariant left" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.87" expl="globals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.88" expl="locals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.89" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.90" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.91" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.92" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.93" expl="loop invariant preservation" proved="true">
  <transf name="unfold" proved="true" arg1="okRefperm">
   <goal name="prog&#39;vc.93.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="prog&#39;vc.93.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="0.08" steps="100"/></proof>
    </goal>
    <goal name="prog&#39;vc.93.0.1" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="0.08" steps="100"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.94" expl="lockstep" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.95" expl="globals type invariant left" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.96" expl="globals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.97" expl="locals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.98" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.99" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.100" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.101" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.102" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prog&#39;vc.102.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="100"/></proof>
   </goal>
   <goal name="prog&#39;vc.102.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="100"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.103" expl="lockstep" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.104" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="114"/></proof>
  </goal>
  <goal name="prog&#39;vc.105" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="198"/></proof>
  </goal>
  <goal name="prog&#39;vc.106" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="116"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
