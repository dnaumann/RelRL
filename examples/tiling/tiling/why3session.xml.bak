<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.3.1" timelimit="80" steplimit="0" memlimit="4000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="80" steplimit="0" memlimit="4000"/>
<prover id="2" name="Z3" version="4.8.6" timelimit="80" steplimit="0" memlimit="4000"/>
<prover id="3" name="CVC4" version="1.7" timelimit="80" steplimit="0" memlimit="4000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="tiling.mlw"/>
<theory name="State" proved="true">
 <goal name="state&#39;vc" expl="VC for state" proved="true">
 <proof prover="0" timelimit="30"><result status="valid" time="0.05" steps="175"/></proof>
 </goal>
</theory>
<theory name="M0" proved="true">
 <goal name="f&#39;vc" expl="VC for f" proved="true">
 <proof prover="0" timelimit="30"><result status="valid" time="0.03" steps="0"/></proof>
 </goal>
 <goal name="prog&#39;vc" expl="VC for prog" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="prog&#39;vc.0" expl="globals type invariant" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="prog&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.03" steps="22"/></proof>
  </goal>
  <goal name="prog&#39;vc.2" expl="wr {a1}`slots" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.03" steps="24"/></proof>
  </goal>
  <goal name="prog&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.03" steps="26"/></proof>
  </goal>
  <goal name="prog&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.03" steps="29"/></proof>
  </goal>
  <goal name="prog&#39;vc.5" expl="globals type invariant" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="prog&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.04" steps="103"/></proof>
  </goal>
  <goal name="prog&#39;vc.7" expl=" index is in bounds" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.04" steps="97"/></proof>
  </goal>
  <goal name="prog&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.04" steps="70"/></proof>
  </goal>
  <goal name="prog&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.37" steps="1447"/></proof>
  </goal>
  <goal name="prog&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.23" steps="893"/></proof>
  </goal>
  <goal name="prog&#39;vc.11" expl="globals type invariant" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.06" steps="194"/></proof>
  </goal>
  <goal name="prog&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.07" steps="141"/></proof>
  </goal>
  <goal name="prog&#39;vc.13" expl="wr {a1}`slots" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.33" steps="737"/></proof>
  </goal>
  <goal name="prog&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.06" steps="88"/></proof>
  </goal>
  <goal name="prog&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.33" steps="620"/></proof>
  </goal>
  <goal name="prog&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.07" steps="100"/></proof>
  </goal>
  <goal name="prog&#39;vc.17" expl="globals type invariant" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.06" steps="102"/></proof>
  </goal>
  <goal name="prog&#39;vc.18" expl="precondition" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.18" steps="213"/></proof>
  </goal>
  <goal name="prog&#39;vc.19" expl=" index is in bounds" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.06" steps="195"/></proof>
  </goal>
  <goal name="prog&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.09" steps="120"/></proof>
  </goal>
  <goal name="prog&#39;vc.21" expl="type invariant" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="1.59" steps="3372"/></proof>
  </goal>
  <goal name="prog&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.80" steps="1459"/></proof>
  </goal>
  <goal name="prog&#39;vc.23" expl="globals type invariant" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.15" steps="354"/></proof>
  </goal>
  <goal name="prog&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.06" steps="219"/></proof>
  </goal>
  <goal name="prog&#39;vc.25" expl="wr {a1}`slots" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="1.17" steps="1439"/></proof>
  </goal>
  <goal name="prog&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.08" steps="138"/></proof>
  </goal>
  <goal name="prog&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.75" steps="1097"/></proof>
  </goal>
  <goal name="prog&#39;vc.28" expl="globals type invariant" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.07" steps="100"/></proof>
  </goal>
  <goal name="prog&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.07" steps="100"/></proof>
  </goal>
  <goal name="prog&#39;vc.30" expl="wr {a1}`slots" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.04" steps="100"/></proof>
  </goal>
  <goal name="prog&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.04" steps="100"/></proof>
  </goal>
  <goal name="prog&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.06" steps="107"/></proof>
  </goal>
  <goal name="prog&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.06" steps="52"/></proof>
  </goal>
  <goal name="prog&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="0" timelimit="30"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="prog&#39;vc.35" expl="wr ({a1} union {a2}`tDslots)`slots" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.04" steps="119"/></proof>
  </goal>
  <goal name="prog&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.05" steps="60"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M1" proved="true">
 <goal name="f&#39;vc" expl="VC for f" proved="true">
 <proof prover="0" timelimit="60"><result status="valid" time="0.02" steps="0"/></proof>
 </goal>
 <goal name="prog&#39;vc" expl="VC for prog" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="prog&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="prog&#39;vc.1" expl="globals type invariant" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.03" steps="22"/></proof>
  </goal>
  <goal name="prog&#39;vc.2" expl="locals type invariant" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.03" steps="22"/></proof>
  </goal>
  <goal name="prog&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.05" steps="24"/></proof>
  </goal>
  <goal name="prog&#39;vc.4" expl="wr {a2}`tDslots`slots" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.05" steps="26"/></proof>
  </goal>
  <goal name="prog&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.05" steps="28"/></proof>
  </goal>
  <goal name="prog&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.03" steps="31"/></proof>
  </goal>
  <goal name="prog&#39;vc.7" expl="assertion" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.16" steps="124"/></proof>
  </goal>
  <goal name="prog&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.16" steps="137"/></proof>
  </goal>
  <goal name="prog&#39;vc.9" expl="row_i := a2.{i} ( index is in bounds)" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.08" steps="128"/></proof>
  </goal>
  <goal name="prog&#39;vc.10" expl="globals type invariant" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.06" steps="68"/></proof>
  </goal>
  <goal name="prog&#39;vc.11" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(s.alloct[row_i] = IntArray)">
   <goal name="prog&#39;vc.11.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.11" steps="161"/></proof>
   </goal>
   <goal name="prog&#39;vc.11.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.18" steps="614"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.12" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.22" steps="628"/></proof>
  </goal>
  <goal name="prog&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.06" steps="87"/></proof>
  </goal>
  <goal name="prog&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="1.71" steps="2596"/></proof>
  </goal>
  <goal name="prog&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.63" steps="1012"/></proof>
  </goal>
  <goal name="prog&#39;vc.16" expl="globals type invariant" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.15" steps="277"/></proof>
  </goal>
  <goal name="prog&#39;vc.17" expl="locals type invariant" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.50" steps="1022"/></proof>
  </goal>
  <goal name="prog&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.11" steps="165"/></proof>
  </goal>
  <goal name="prog&#39;vc.19" expl="wr {a2}`tDslots`slots" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="23.97" steps="21080"/></proof>
  </goal>
  <goal name="prog&#39;vc.20" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.04" steps="106"/></proof>
  </goal>
  <goal name="prog&#39;vc.21" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.07" steps="107"/></proof>
  </goal>
  <goal name="prog&#39;vc.22" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="3.94" steps="4258"/></proof>
  </goal>
  <goal name="prog&#39;vc.23" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.07" steps="116"/></proof>
  </goal>
  <goal name="prog&#39;vc.24" expl="assertion" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.06" steps="127"/></proof>
  </goal>
  <goal name="prog&#39;vc.25" expl="precondition" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.47" steps="276"/></proof>
  </goal>
  <goal name="prog&#39;vc.26" expl="row_i := a2.{i} ( index is in bounds)" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.16" steps="233"/></proof>
  </goal>
  <goal name="prog&#39;vc.27" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="125"/></proof>
  </goal>
  <goal name="prog&#39;vc.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.09" steps="1181"/></proof>
  </goal>
  <goal name="prog&#39;vc.29" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="1.71" steps="1591"/></proof>
  </goal>
  <goal name="prog&#39;vc.30" expl="type invariant" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.15" steps="145"/></proof>
  </goal>
  <goal name="prog&#39;vc.31" expl="type invariant" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="6.43" steps="5302"/></proof>
  </goal>
  <goal name="prog&#39;vc.32" expl="type invariant" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="2.46" steps="2977"/></proof>
  </goal>
  <goal name="prog&#39;vc.33" expl="globals type invariant" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.24" steps="608"/></proof>
  </goal>
  <goal name="prog&#39;vc.34" expl="locals type invariant" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="1.38" steps="1921"/></proof>
  </goal>
  <goal name="prog&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.19" steps="249"/></proof>
  </goal>
  <goal name="prog&#39;vc.36" expl="wr {a2}`tDslots`slots" proved="true">
  <transf name="unfold" proved="true" arg1="wrs_to_slots_framed_by">
   <goal name="prog&#39;vc.36.0" expl="VC for prog" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="prog&#39;vc.36.0.0" expl="VC for prog" proved="true">
    <transf name="assert" proved="true" arg1="(p &lt;&gt; row_i)">
     <goal name="prog&#39;vc.36.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="4.70" steps="2778"/></proof>
     </goal>
     <goal name="prog&#39;vc.36.0.0.1" expl="VC for prog" proved="true">
     <transf name="assert" proved="true" arg1="(s1.heap.slots[p] = s.heap.slots[p])">
      <goal name="prog&#39;vc.36.0.0.1.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="0.58" steps="447"/></proof>
      </goal>
      <goal name="prog&#39;vc.36.0.0.1.1" expl="VC for prog" proved="true">
      <proof prover="0"><result status="valid" time="22.45" steps="18144"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="163"/></proof>
  </goal>
  <goal name="prog&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="164"/></proof>
  </goal>
  <goal name="prog&#39;vc.39" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="17.65" steps="10258"/></proof>
  </goal>
  <goal name="prog&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="5.23" steps="4042"/></proof>
  </goal>
  <goal name="prog&#39;vc.41" expl="globals type invariant" proved="true">
  <proof prover="0" timelimit="60"><result status="valid" time="0.04" steps="121"/></proof>
  </goal>
  <goal name="prog&#39;vc.42" expl="locals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="121"/></proof>
  </goal>
  <goal name="prog&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="121"/></proof>
  </goal>
  <goal name="prog&#39;vc.44" expl="wr {a2}`tDslots`slots" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="121"/></proof>
  </goal>
  <goal name="prog&#39;vc.45" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="121"/></proof>
  </goal>
  <goal name="prog&#39;vc.46" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="1.40" steps="1153"/></proof>
  </goal>
  <goal name="prog&#39;vc.47" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="60"/></proof>
  </goal>
  <goal name="prog&#39;vc.48" expl="locals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="60"/></proof>
  </goal>
  <goal name="prog&#39;vc.49" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="60"/></proof>
  </goal>
  <goal name="prog&#39;vc.50" expl="wr {a2}`tDslots`slots" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="60"/></proof>
  </goal>
  <goal name="prog&#39;vc.51" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="60"/></proof>
  </goal>
  <goal name="prog&#39;vc.52" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="62"/></proof>
  </goal>
  <goal name="prog&#39;vc.53" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="69"/></proof>
  </goal>
  <goal name="prog&#39;vc.54" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="65"/></proof>
  </goal>
  <goal name="prog&#39;vc.55" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.56" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.57" expl="row_i := a2.{i} ( index is in bounds)" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.58" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.59" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.60" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.61" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.62" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.63" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.64" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.65" expl="locals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.66" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.67" expl="wr {a2}`tDslots`slots" proved="true">
  <transf name="unfold" proved="true" arg1="wrs_to_slots_framed_by">
   <goal name="prog&#39;vc.67.0" expl="VC for prog" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="prog&#39;vc.67.0.0" expl="VC for prog" proved="true">
    <transf name="assert" proved="true" arg1="(p &lt;&gt; row_i)">
     <goal name="prog&#39;vc.67.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
     </goal>
     <goal name="prog&#39;vc.67.0.0.1" expl="VC for prog" proved="true">
     <proof prover="0"><result status="valid" time="0.05" steps="93"/></proof>
     <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
     <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.68" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.69" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.70" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.71" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="prog&#39;vc.72" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="96"/></proof>
  </goal>
  <goal name="prog&#39;vc.73" expl="locals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="96"/></proof>
  </goal>
  <goal name="prog&#39;vc.74" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="96"/></proof>
  </goal>
  <goal name="prog&#39;vc.75" expl="wr {a2}`tDslots`slots" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="96"/></proof>
  </goal>
  <goal name="prog&#39;vc.76" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="96"/></proof>
  </goal>
  <goal name="prog&#39;vc.77" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="104"/></proof>
  </goal>
  <goal name="prog&#39;vc.78" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="56"/></proof>
  </goal>
  <goal name="prog&#39;vc.79" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="56"/></proof>
  </goal>
  <goal name="prog&#39;vc.80" expl="wr ({a1} union {a2}`tDslots)`slots" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="124"/></proof>
  </goal>
  <goal name="prog&#39;vc.81" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="144"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="BM" proved="true">
 <goal name="f&#39;vc" expl="VC for f" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="44"/></proof>
 </goal>
 <goal name="prog&#39;vc" expl="VC for prog" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="prog&#39;vc.0" expl="globals type invariant left" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="50"/></proof>
  </goal>
  <goal name="prog&#39;vc.1" expl="globals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="50"/></proof>
  </goal>
  <goal name="prog&#39;vc.2" expl="locals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="52"/></proof>
  </goal>
  <goal name="prog&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="prog&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="54"/></proof>
  </goal>
  <goal name="prog&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="57"/></proof>
  </goal>
  <goal name="prog&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="58"/></proof>
  </goal>
  <goal name="prog&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="128"/></proof>
  </goal>
  <goal name="prog&#39;vc.8" expl="lockstep" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="65"/></proof>
  </goal>
  <goal name="prog&#39;vc.9" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="116"/></proof>
  </goal>
  <goal name="prog&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="216"/></proof>
  </goal>
  <goal name="prog&#39;vc.11" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="200"/></proof>
  </goal>
  <goal name="prog&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.25" steps="263"/></proof>
  </goal>
  <goal name="prog&#39;vc.13" expl="row_i := a2.{i} ( index is in bounds)" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="255"/></proof>
  </goal>
  <goal name="prog&#39;vc.14" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="141"/></proof>
  </goal>
  <goal name="prog&#39;vc.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.39" steps="768"/></proof>
  </goal>
  <goal name="prog&#39;vc.16" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.47" steps="772"/></proof>
  </goal>
  <goal name="prog&#39;vc.17" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="159"/></proof>
  </goal>
  <goal name="prog&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="3.87" steps="3744"/></proof>
  </goal>
  <goal name="prog&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="1.95" steps="2468"/></proof>
  </goal>
  <goal name="prog&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="171"/></proof>
  </goal>
  <goal name="prog&#39;vc.21" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="2.54" steps="3788"/></proof>
  </goal>
  <goal name="prog&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="1.09" steps="1919"/></proof>
  </goal>
  <goal name="prog&#39;vc.23" expl="globals type invariant left" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="457"/></proof>
  </goal>
  <goal name="prog&#39;vc.24" expl="globals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.25" steps="452"/></proof>
  </goal>
  <goal name="prog&#39;vc.25" expl="locals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.83" steps="1283"/></proof>
  </goal>
  <goal name="prog&#39;vc.26" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="5.42" steps="4785"/></proof>
  </goal>
  <goal name="prog&#39;vc.27" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="193"/></proof>
  </goal>
  <goal name="prog&#39;vc.28" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="195"/></proof>
  </goal>
  <goal name="prog&#39;vc.29" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="198"/></proof>
  </goal>
  <goal name="prog&#39;vc.30" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.21" steps="324"/></proof>
  </goal>
  <goal name="prog&#39;vc.31" expl="lockstep" proved="true">
  <proof prover="0"><result status="valid" time="7.55" steps="4433"/></proof>
  <transf name="split_vc" >
   <goal name="prog&#39;vc.31.0" expl="lockstep" proved="true">
   <proof prover="0"><result status="valid" time="0.42" steps="386"/></proof>
   </goal>
   <goal name="prog&#39;vc.31.1" expl="lockstep">
   <proof prover="0" obsolete="true"><result status="timeout" time="80.00"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="80.00" steps="11466127"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="80.00" steps="8546212"/></proof>
   </goal>
   <goal name="prog&#39;vc.31.2" expl="lockstep" proved="true">
   <proof prover="0"><result status="valid" time="5.18" steps="5196"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="80.00" steps="11574137"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="80.00" steps="8331882"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.32" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="220"/></proof>
  </goal>
  <goal name="prog&#39;vc.33" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="224"/></proof>
  </goal>
  <goal name="prog&#39;vc.34" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.92" steps="455"/></proof>
  </goal>
  <goal name="prog&#39;vc.35" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.21" steps="437"/></proof>
  </goal>
  <goal name="prog&#39;vc.36" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.05" steps="549"/></proof>
  </goal>
  <goal name="prog&#39;vc.37" expl="row_i := a2.{i} ( index is in bounds)" proved="true">
  <proof prover="0"><result status="valid" time="0.19" steps="401"/></proof>
  </goal>
  <goal name="prog&#39;vc.38" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.17" steps="246"/></proof>
  </goal>
  <goal name="prog&#39;vc.39" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="6.40" steps="2808"/></proof>
  </goal>
  <goal name="prog&#39;vc.40" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="3.68" steps="2112"/></proof>
  </goal>
  <goal name="prog&#39;vc.41" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="264"/></proof>
  </goal>
  <goal name="prog&#39;vc.42" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="16.59" steps="8270"/></proof>
  </goal>
  <goal name="prog&#39;vc.43" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="4.44" steps="3718"/></proof>
  </goal>
  <goal name="prog&#39;vc.44" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.21" steps="276"/></proof>
  </goal>
  <goal name="prog&#39;vc.45" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="34.57" steps="16923"/></proof>
  </goal>
  <goal name="prog&#39;vc.46" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="6.09" steps="3790"/></proof>
  </goal>
  <goal name="prog&#39;vc.47" expl="globals type invariant left" proved="true">
  <proof prover="0"><result status="valid" time="0.53" steps="840"/></proof>
  </goal>
  <goal name="prog&#39;vc.48" expl="globals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.57" steps="891"/></proof>
  </goal>
  <goal name="prog&#39;vc.49" expl="locals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="3.60" steps="2890"/></proof>
  </goal>
  <goal name="prog&#39;vc.50" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="80.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="80.00" steps="13524778"/></proof>
  <transf name="unfold" proved="true" arg1="okRefperm">
   <goal name="prog&#39;vc.50.0" expl="VC for prog" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="prog&#39;vc.50.0.0" expl="VC for prog" proved="true">
    <proof prover="0"><result status="valid" time="1.84" steps="697"/></proof>
    </goal>
    <goal name="prog&#39;vc.50.0.1" expl="VC for prog" proved="true">
    <proof prover="0"><result status="valid" time="1.78" steps="687"/></proof>
    </goal>
    <goal name="prog&#39;vc.50.0.2" expl="VC for prog" proved="true">
    <proof prover="0"><result status="valid" time="1.98" steps="676"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.51" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="298"/></proof>
  </goal>
  <goal name="prog&#39;vc.52" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="300"/></proof>
  </goal>
  <goal name="prog&#39;vc.53" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="303"/></proof>
  </goal>
  <goal name="prog&#39;vc.54" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.24" steps="485"/></proof>
  </goal>
  <goal name="prog&#39;vc.55" expl="lockstep" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="80.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="prog&#39;vc.55.0" expl="lockstep" proved="true">
   <proof prover="0"><result status="valid" time="17.38" steps="4549"/></proof>
   </goal>
   <goal name="prog&#39;vc.55.1" expl="lockstep" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="80.00"/></proof>
   <proof prover="1"><result status="valid" time="0.17"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="80.00" steps="13489930"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="80.00" steps="7729884"/></proof>
   </goal>
   <goal name="prog&#39;vc.55.2" expl="lockstep" proved="true">
   <proof prover="0"><result status="valid" time="22.08" steps="6202"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.56" expl="globals type invariant left" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="222"/></proof>
  </goal>
  <goal name="prog&#39;vc.57" expl="globals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="222"/></proof>
  </goal>
  <goal name="prog&#39;vc.58" expl="locals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="222"/></proof>
  </goal>
  <goal name="prog&#39;vc.59" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="222"/></proof>
  </goal>
  <goal name="prog&#39;vc.60" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="222"/></proof>
  </goal>
  <goal name="prog&#39;vc.61" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="222"/></proof>
  </goal>
  <goal name="prog&#39;vc.62" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="226"/></proof>
  </goal>
  <goal name="prog&#39;vc.63" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="373"/></proof>
  </goal>
  <goal name="prog&#39;vc.64" expl="lockstep" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="80.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="80.00" steps="11718509"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="prog&#39;vc.64.0" expl="lockstep" proved="true">
   <proof prover="0"><result status="valid" time="0.08" steps="194"/></proof>
   </goal>
   <goal name="prog&#39;vc.64.1" expl="lockstep" proved="true">
   <proof prover="0"><result status="valid" time="5.26" steps="2805"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="80.00" steps="11731831"/></proof>
   <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prog&#39;vc.65" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.66" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.67" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.68" expl="globals type invariant left" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.69" expl="globals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.70" expl="locals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.71" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.72" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.73" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.74" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.75" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.76" expl="lockstep" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.77" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.78" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.79" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.80" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.81" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.82" expl="row_i := a2.{i} ( index is in bounds)" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.83" expl="globals type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.84" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.85" expl=" index is in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.86" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.87" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.88" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.89" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.90" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.91" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.92" expl="globals type invariant left" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.93" expl="globals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.94" expl="locals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.95" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.96" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.97" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.98" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.99" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.100" expl="lockstep" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.101" expl="globals type invariant left" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.102" expl="globals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.103" expl="locals type invariant right" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.104" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.105" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.106" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.107" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.108" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.109" expl="lockstep" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="132"/></proof>
  </goal>
  <goal name="prog&#39;vc.110" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="114"/></proof>
  </goal>
  <goal name="prog&#39;vc.111" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="114"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
