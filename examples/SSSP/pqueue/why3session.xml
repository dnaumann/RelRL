<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.6" timelimit="30" steplimit="0" memlimit="9000"/>
<prover id="1" name="Alt-Ergo" version="2.3.1" timelimit="45" steplimit="0" memlimit="10000"/>
<prover id="4" name="CVC4" version="1.7" timelimit="20" steplimit="0" memlimit="10000"/>
<prover id="5" name="CVC3" version="2.4.1" timelimit="20" steplimit="0" memlimit="9000"/>
<file format="whyml">
<path name=".."/><path name="pqueue.mlw"/>
<theory name="State" proved="true">
 <goal name="state&#39;vc" expl="VC for state" proved="true">
 <proof prover="1" timelimit="30"><result status="valid" time="0.04" steps="771"/></proof>
 </goal>
</theory>
<theory name="PqueueL" proved="true">
 <goal name="repClosed_DEF" proved="true">
 <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.29" steps="906"/></proof>
 </goal>
 <goal name="disjointNotIn" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="disjointNotIn.0" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="H6">
   <goal name="disjointNotIn.0.0" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="disjointNotIn.0.0.0" proved="true">
    <transf name="assert" proved="true" arg1="(strongDisjoint s r)">
     <goal name="disjointNotIn.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0" timelimit="20" memlimit="5000"><result status="valid" time="0.07" steps="356068"/></proof>
     <proof prover="1" timelimit="20" memlimit="5000"><result status="valid" time="0.02" steps="22"/></proof>
     </goal>
     <goal name="disjointNotIn.0.0.0.1" proved="true">
     <transf name="unfold" proved="true" arg1="strongDisjoint" arg2="in" arg3="h">
      <goal name="disjointNotIn.0.0.0.1.0" proved="true">
      <transf name="assert" proved="true" arg1="(inter prep qrep = singleton nullConst)">
       <goal name="disjointNotIn.0.0.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="0" timelimit="20" memlimit="5000"><result status="valid" time="0.08" steps="354988"/></proof>
       <proof prover="1" timelimit="20" memlimit="5000"><result status="valid" time="0.02" steps="22"/></proof>
       </goal>
       <goal name="disjointNotIn.0.0.0.1.0.1" proved="true">
       <proof prover="0" timelimit="20" memlimit="5000"><result status="valid" time="0.98" steps="1427397"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="init_Node&#39;vc" expl="VC for init_Node" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="init_Node&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.03" steps="114"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.16" steps="169"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.2" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.19" steps="349"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.3" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.15" steps="199"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.15" steps="162"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.20" steps="349"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.6" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.17" steps="169"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.7" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.46" steps="965"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.21" steps="362"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.37" steps="699"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.15" steps="120"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.13" steps="118"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.12" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.05" steps="120"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.13" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.20" steps="191"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.14" expl="write frame key" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.16" steps="191"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.14" steps="120"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.14" steps="122"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.04" steps="122"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.03" steps="123"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.05" steps="124"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="init_Pqueue&#39;vc" expl="VC for init_Pqueue" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="init_Pqueue&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.05" steps="80"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.08" steps="151"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.2" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.06" steps="366"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.3" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.09" steps="188"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.07" steps="144"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.14" steps="366"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.6" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.11" steps="151"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.7" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.11" steps="623"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.15" steps="366"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.58" steps="1921"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.07" steps="139"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.04" steps="84"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.12" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="86"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.13" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.14" expl="write frame eSlots" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.15" expl="write frame bSlots" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.16" expl="write frame dSlots" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.07" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.17" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.18" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.19" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.20" expl="write frame head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.21" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.22" expl="write frame bagEdges" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.06" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.23" expl="write frame adjList" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.07" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.24" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.07" steps="199"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.25" expl="write frame wght" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.07" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.26" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.27" expl="write frame strv" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.07" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.28" expl="write frame size" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.29" expl="write frame numVerts" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.30" expl="write frame length" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.31" expl="write frame key" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.32" expl="write frame endv" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.06" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.33" expl="write frame eLength" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.06" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.34" expl="write frame dLength" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.08" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.35" expl="write frame bagNode" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.36" expl="write frame bLength" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.07" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.37" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.04" steps="136"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.38" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.71" steps="2291"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.39" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.06" steps="141"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.40" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="init_Pqueue&#39;vc.40.0" expl="VC for init_Pqueue" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="init_Pqueue&#39;vc.40.0.0" expl="VC for init_Pqueue" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="3.41" steps="11170"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.40.0.1" expl="VC for init_Pqueue" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="0.19" steps="518"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.40.0.2" expl="VC for init_Pqueue" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="0.34" steps="1075"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.40.0.3" expl="VC for init_Pqueue" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="0.19" steps="592"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.40.0.4" expl="VC for init_Pqueue" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="0.18" steps="582"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.40.0.5" expl="VC for init_Pqueue" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="1.87" steps="6658"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.40.0.6" expl="VC for init_Pqueue" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="2.55" steps="9737"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="isEmpty&#39;vc" expl="VC for isEmpty" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="isEmpty&#39;vc.0" expl="sz := self.size" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.06" steps="32"/></proof>
  </goal>
  <goal name="isEmpty&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="isEmpty&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="isEmpty&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="findMin&#39;vc" expl="VC for findMin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="findMin&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="5000"><result status="valid" time="0.03" steps="74"/></proof>
  </goal>
  <goal name="findMin&#39;vc.1" expl="result := self.head" proved="true">
  <proof prover="1" timelimit="20" memlimit="5000"><result status="valid" time="0.04" steps="36"/></proof>
  </goal>
  <goal name="findMin&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="5000"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="findMin&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="0.04" steps="97"/></proof>
  </goal>
  <goal name="findMin&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="5000"><result status="valid" time="0.02" steps="27"/></proof>
  </goal>
  <goal name="findMin&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="5000"><result status="valid" time="0.03" steps="27"/></proof>
  </goal>
  <goal name="findMin&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="5000"><result status="valid" time="0.02" steps="27"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="link&#39;vc" expl="VC for link" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="link&#39;vc.0" expl="rep := self.rep" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="0.04" steps="54"/></proof>
  </goal>
  <goal name="link&#39;vc.1" expl="fkey := first.key" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="0.04" steps="59"/></proof>
  </goal>
  <goal name="link&#39;vc.2" expl="skey := second.key" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="0.03" steps="64"/></proof>
  </goal>
  <goal name="link&#39;vc.3" expl="tmp := first.prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="0.04" steps="71"/></proof>
  </goal>
  <goal name="link&#39;vc.4" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="6500"><result status="valid" time="0.12" steps="338"/></proof>
  </goal>
  <goal name="link&#39;vc.5" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="6500"><result status="valid" time="0.04" steps="146"/></proof>
  </goal>
  <goal name="link&#39;vc.6" expl="tmp := second.child" proved="true">
  <proof prover="1" timelimit="20" memlimit="6500"><result status="valid" time="0.17" steps="194"/></proof>
  </goal>
  <goal name="link&#39;vc.7" expl="tmp := first.sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="6500"><result status="valid" time="0.26" steps="262"/></proof>
  </goal>
  <goal name="link&#39;vc.8" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="6500"><result status="valid" time="0.59" steps="1052"/></proof>
  </goal>
  <goal name="link&#39;vc.9" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="6500"><result status="valid" time="0.35" steps="258"/></proof>
  </goal>
  <goal name="link&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="0.35" steps="260"/></proof>
  </goal>
  <goal name="link&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.34" steps="349"/></proof>
  </goal>
  <goal name="link&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="0.46" steps="862"/></proof>
  </goal>
  <goal name="link&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.38" steps="424"/></proof>
  </goal>
  <goal name="link&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.38" steps="342"/></proof>
  </goal>
  <goal name="link&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.48" steps="862"/></proof>
  </goal>
  <goal name="link&#39;vc.16" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.39" steps="349"/></proof>
  </goal>
  <goal name="link&#39;vc.17" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="6.50" steps="18392"/></proof>
  </goal>
  <goal name="link&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.50" steps="892"/></proof>
  </goal>
  <goal name="link&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.69" steps="1438"/></proof>
  </goal>
  <goal name="link&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.36" steps="266"/></proof>
  </goal>
  <goal name="link&#39;vc.21" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="repClosed_DEF">
   <goal name="link&#39;vc.21.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.21.0.0" expl="VC for link" proved="true">
    <proof prover="4" memlimit="6000"><result status="valid" time="6.11" steps="699361"/></proof>
    </goal>
    <goal name="link&#39;vc.21.0.1" expl="VC for link" proved="true">
    <proof prover="4" memlimit="6000"><result status="valid" time="0.73" steps="89877"/></proof>
    </goal>
    <goal name="link&#39;vc.21.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="1.20" steps="2840"/></proof>
    </goal>
    <goal name="link&#39;vc.21.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="4.29" steps="11449"/></proof>
    </goal>
    <goal name="link&#39;vc.21.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="1.32" steps="3207"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="0.53" steps="318"/></proof>
  </goal>
  <goal name="link&#39;vc.23" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.64" steps="558"/></proof>
  </goal>
  <goal name="link&#39;vc.24" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.74" steps="1263"/></proof>
  </goal>
  <goal name="link&#39;vc.25" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.64" steps="552"/></proof>
  </goal>
  <goal name="link&#39;vc.26" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.60" steps="442"/></proof>
  </goal>
  <goal name="link&#39;vc.27" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.82" steps="1263"/></proof>
  </goal>
  <goal name="link&#39;vc.28" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.65" steps="557"/></proof>
  </goal>
  <goal name="link&#39;vc.29" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="2.49" steps="6332"/></proof>
  </goal>
  <goal name="link&#39;vc.30" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.85" steps="1287"/></proof>
  </goal>
  <goal name="link&#39;vc.31" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.17" steps="2512"/></proof>
  </goal>
  <goal name="link&#39;vc.32" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.55" steps="324"/></proof>
  </goal>
  <goal name="link&#39;vc.33" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="repClosed_DEF">
   <goal name="link&#39;vc.33.0" expl="VC for link" proved="true">
   <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="2.70" steps="5925"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="0.49" steps="324"/></proof>
  </goal>
  <goal name="link&#39;vc.35" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="0.55" steps="451"/></proof>
  </goal>
  <goal name="link&#39;vc.36" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="0.74" steps="532"/></proof>
  </goal>
  <goal name="link&#39;vc.37" expl="write frame prev" proved="true">
  <transf name="remove" proved="true" arg1="Ensures2,Ensures1">
   <goal name="link&#39;vc.37.0" expl="write frame prev" proved="true">
   <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.76" steps="6119"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.38" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="0.81" steps="543"/></proof>
  </goal>
  <goal name="link&#39;vc.39" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="1.26" steps="2322"/></proof>
  </goal>
  <goal name="link&#39;vc.40" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="link&#39;vc.40.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.40.0.0" expl="VC for link" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="link&#39;vc.40.0.0.0" expl="VC for link" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="link&#39;vc.40.0.0.0.0" expl="VC for link" proved="true">
      <transf name="remove" proved="true" arg1="add_map_others_unchanged,add_map_lookup">
       <goal name="link&#39;vc.40.0.0.0.0.0" expl="VC for link" proved="true">
       <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.93" steps="5699"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="link&#39;vc.40.0.0.0.1" expl="VC for link" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.00" steps="2196"/></proof>
      </goal>
      <goal name="link&#39;vc.40.0.0.0.2" expl="VC for link" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="6.97" steps="381950"/></proof>
      </goal>
      <goal name="link&#39;vc.40.0.0.0.3" expl="VC for link" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="6.85" steps="379284"/></proof>
      </goal>
      <goal name="link&#39;vc.40.0.0.0.4" expl="VC for link" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="6.93" steps="382877"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="link&#39;vc.40.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.93" steps="2009"/></proof>
    </goal>
    <goal name="link&#39;vc.40.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.98" steps="2018"/></proof>
    </goal>
    <goal name="link&#39;vc.40.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.92" steps="2093"/></proof>
    </goal>
    <goal name="link&#39;vc.40.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.99" steps="2094"/></proof>
    </goal>
    <goal name="link&#39;vc.40.0.5" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="3.97" steps="9582"/></proof>
    <proof prover="5" timelimit="30"><result status="valid" time="9.56"/></proof>
    </goal>
    <goal name="link&#39;vc.40.0.6" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.15" steps="4459"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.41" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.59" steps="334"/></proof>
  </goal>
  <goal name="link&#39;vc.42" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.58" steps="331"/></proof>
  </goal>
  <goal name="link&#39;vc.43" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.59" steps="331"/></proof>
  </goal>
  <goal name="link&#39;vc.44" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.38" steps="254"/></proof>
  </goal>
  <goal name="link&#39;vc.45" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.38" steps="341"/></proof>
  </goal>
  <goal name="link&#39;vc.46" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.50" steps="844"/></proof>
  </goal>
  <goal name="link&#39;vc.47" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.38" steps="414"/></proof>
  </goal>
  <goal name="link&#39;vc.48" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.37" steps="334"/></proof>
  </goal>
  <goal name="link&#39;vc.49" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.46" steps="844"/></proof>
  </goal>
  <goal name="link&#39;vc.50" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.39" steps="341"/></proof>
  </goal>
  <goal name="link&#39;vc.51" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="5.28" steps="15494"/></proof>
  </goal>
  <goal name="link&#39;vc.52" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.49" steps="868"/></proof>
  </goal>
  <goal name="link&#39;vc.53" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.73" steps="1419"/></proof>
  </goal>
  <goal name="link&#39;vc.54" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.38" steps="260"/></proof>
  </goal>
  <goal name="link&#39;vc.55" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="repClosed_DEF">
   <goal name="link&#39;vc.55.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.55.0.0" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.16" steps="2364"/></proof>
    </goal>
    <goal name="link&#39;vc.55.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.57" steps="901"/></proof>
    </goal>
    <goal name="link&#39;vc.55.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.13" steps="2677"/></proof>
    </goal>
    <goal name="link&#39;vc.55.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.45" steps="3519"/></proof>
    </goal>
    <goal name="link&#39;vc.55.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.13" steps="2678"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.56" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.35" steps="260"/></proof>
  </goal>
  <goal name="link&#39;vc.57" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.37" steps="352"/></proof>
  </goal>
  <goal name="link&#39;vc.58" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.51" steps="412"/></proof>
  </goal>
  <goal name="link&#39;vc.59" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.14" steps="2423"/></proof>
  </goal>
  <goal name="link&#39;vc.60" expl="write frame child" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.52" steps="420"/></proof>
  </goal>
  <goal name="link&#39;vc.61" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.80" steps="1470"/></proof>
  </goal>
  <goal name="link&#39;vc.62" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="link&#39;vc.62.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.62.0.0" expl="VC for link" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="link&#39;vc.62.0.0.0" expl="VC for link" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="link&#39;vc.62.0.0.0.0" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.40" steps="3008"/></proof>
      </goal>
      <goal name="link&#39;vc.62.0.0.0.1" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.64" steps="1413"/></proof>
      </goal>
      <goal name="link&#39;vc.62.0.0.0.2" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.57" steps="3675"/></proof>
      <proof prover="4" memlimit="6000"><result status="valid" time="5.25" steps="273905"/></proof>
      </goal>
      <goal name="link&#39;vc.62.0.0.0.3" expl="VC for link" proved="true">
      <proof prover="4" memlimit="6000"><result status="valid" time="5.00" steps="273105"/></proof>
      </goal>
      <goal name="link&#39;vc.62.0.0.0.4" expl="VC for link" proved="true">
      <proof prover="4" memlimit="6000"><result status="valid" time="5.17" steps="274246"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="link&#39;vc.62.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.64" steps="1397"/></proof>
    </goal>
    <goal name="link&#39;vc.62.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.61" steps="1102"/></proof>
    </goal>
    <goal name="link&#39;vc.62.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.63" steps="1446"/></proof>
    </goal>
    <goal name="link&#39;vc.62.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.66" steps="1496"/></proof>
    </goal>
    <goal name="link&#39;vc.62.0.5" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.72" steps="4421"/></proof>
    </goal>
    <goal name="link&#39;vc.62.0.6" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.11" steps="2595"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.63" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.35" steps="270"/></proof>
  </goal>
  <goal name="link&#39;vc.64" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.36" steps="267"/></proof>
  </goal>
  <goal name="link&#39;vc.65" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.34" steps="267"/></proof>
  </goal>
  <goal name="link&#39;vc.66" expl="tmp := second.sibling" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.05" steps="127"/></proof>
  </goal>
  <goal name="link&#39;vc.67" expl="assertion" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.24" steps="628"/></proof>
  </goal>
  <goal name="link&#39;vc.68" expl="tmp := first.sibling" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.10" steps="192"/></proof>
  </goal>
  <goal name="link&#39;vc.69" expl="assertion" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.07" steps="154"/></proof>
  </goal>
  <goal name="link&#39;vc.70" expl="tmp := first.child" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.26" steps="263"/></proof>
  </goal>
  <goal name="link&#39;vc.71" expl="tmp := second.sibling" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.39" steps="332"/></proof>
  </goal>
  <goal name="link&#39;vc.72" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="link&#39;vc.72.0" expl="assertion" proved="true">
   <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.59" steps="1223"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.73" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.74" steps="364"/></proof>
  </goal>
  <goal name="link&#39;vc.74" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.75" steps="463"/></proof>
  </goal>
  <goal name="link&#39;vc.75" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="0.97" steps="1166"/></proof>
  </goal>
  <goal name="link&#39;vc.76" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.79" steps="584"/></proof>
  </goal>
  <goal name="link&#39;vc.77" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.77" steps="456"/></proof>
  </goal>
  <goal name="link&#39;vc.78" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.88" steps="1166"/></proof>
  </goal>
  <goal name="link&#39;vc.79" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.76" steps="463"/></proof>
  </goal>
  <goal name="link&#39;vc.80" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="19.02" steps="48155"/></proof>
  </goal>
  <goal name="link&#39;vc.81" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.89" steps="1186"/></proof>
  </goal>
  <goal name="link&#39;vc.82" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="1.17" steps="1889"/></proof>
  </goal>
  <goal name="link&#39;vc.83" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.79" steps="370"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.47" steps="64546"/></proof>
  </goal>
  <goal name="link&#39;vc.84" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="repClosed_DEF">
   <goal name="link&#39;vc.84.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.84.0.0" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.17" steps="3402"/></proof>
    </goal>
    <goal name="link&#39;vc.84.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.99" steps="1198"/></proof>
    </goal>
    <goal name="link&#39;vc.84.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.99" steps="7172"/></proof>
    </goal>
    <goal name="link&#39;vc.84.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="13.21" steps="35756"/></proof>
    </goal>
    <goal name="link&#39;vc.84.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.91" steps="3499"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.85" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.78" steps="370"/></proof>
  </goal>
  <goal name="link&#39;vc.86" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.81" steps="491"/></proof>
  </goal>
  <goal name="link&#39;vc.87" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.35" steps="4050"/></proof>
  </goal>
  <goal name="link&#39;vc.88" expl="write frame prev" proved="true">
  <transf name="remove" proved="true" arg1="Ensures2,Ensures1">
   <goal name="link&#39;vc.88.0" expl="write frame prev" proved="true">
   <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="4.84" steps="10189"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.89" expl="write frame child" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.00" steps="558"/></proof>
  </goal>
  <goal name="link&#39;vc.90" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.45" steps="2116"/></proof>
  </goal>
  <goal name="link&#39;vc.91" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="link&#39;vc.91.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.91.0.0" expl="VC for link" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="link&#39;vc.91.0.0.0" expl="VC for link" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="link&#39;vc.91.0.0.0.0" expl="VC for link" proved="true">
      <transf name="subst_all" proved="true" >
       <goal name="link&#39;vc.91.0.0.0.0.0" expl="VC for link" proved="true">
       <transf name="remove" proved="true" arg1="add_map_others_unchanged,add_map_lookup">
        <goal name="link&#39;vc.91.0.0.0.0.0.0" expl="VC for link" proved="true">
        <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="3.99" steps="6908"/></proof>
        <proof prover="5"><result status="valid" time="18.95"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="link&#39;vc.91.0.0.0.1" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.16" steps="2010"/></proof>
      </goal>
      <goal name="link&#39;vc.91.0.0.0.2" expl="VC for link" proved="true">
      <proof prover="4" memlimit="6000"><result status="valid" time="6.86" steps="336654"/></proof>
      </goal>
      <goal name="link&#39;vc.91.0.0.0.3" expl="VC for link" proved="true">
      <proof prover="4" memlimit="6000"><result status="valid" time="6.96" steps="336485"/></proof>
      </goal>
      <goal name="link&#39;vc.91.0.0.0.4" expl="VC for link" proved="true">
      <proof prover="4" memlimit="6000"><result status="valid" time="7.02" steps="337662"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="link&#39;vc.91.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.14" steps="1872"/></proof>
    </goal>
    <goal name="link&#39;vc.91.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.14" steps="1864"/></proof>
    </goal>
    <goal name="link&#39;vc.91.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.08" steps="1926"/></proof>
    </goal>
    <goal name="link&#39;vc.91.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.16" steps="2099"/></proof>
    </goal>
    <goal name="link&#39;vc.91.0.5" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="3.39" steps="8312"/></proof>
    </goal>
    <goal name="link&#39;vc.91.0.6" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.78" steps="3347"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.92" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.75" steps="380"/></proof>
  </goal>
  <goal name="link&#39;vc.93" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.71" steps="377"/></proof>
  </goal>
  <goal name="link&#39;vc.94" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.76" steps="377"/></proof>
  </goal>
  <goal name="link&#39;vc.95" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.54" steps="310"/></proof>
  </goal>
  <goal name="link&#39;vc.96" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.55" steps="409"/></proof>
  </goal>
  <goal name="link&#39;vc.97" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.70" steps="1010"/></proof>
  </goal>
  <goal name="link&#39;vc.98" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.54" steps="505"/></proof>
  </goal>
  <goal name="link&#39;vc.99" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.53" steps="402"/></proof>
  </goal>
  <goal name="link&#39;vc.100" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="1010"/></proof>
  </goal>
  <goal name="link&#39;vc.101" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.56" steps="409"/></proof>
  </goal>
  <goal name="link&#39;vc.102" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="6.18" steps="17716"/></proof>
  </goal>
  <goal name="link&#39;vc.103" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.65" steps="1030"/></proof>
  </goal>
  <goal name="link&#39;vc.104" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.98" steps="1887"/></proof>
  </goal>
  <goal name="link&#39;vc.105" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.54" steps="316"/></proof>
  </goal>
  <goal name="link&#39;vc.106" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="repClosed_DEF">
   <goal name="link&#39;vc.106.0" expl="VC for link" proved="true">
   <proof prover="1" timelimit="25" memlimit="8000"><result status="valid" time="11.42" steps="28806"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.106.0.0" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.67" steps="3100"/></proof>
    </goal>
    <goal name="link&#39;vc.106.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.72" steps="1084"/></proof>
    </goal>
    <goal name="link&#39;vc.106.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.25" steps="5628"/></proof>
    </goal>
    <goal name="link&#39;vc.106.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.09" steps="5117"/></proof>
    </goal>
    <goal name="link&#39;vc.106.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.37" steps="3054"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.107" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.55" steps="316"/></proof>
  </goal>
  <goal name="link&#39;vc.108" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.56" steps="426"/></proof>
  </goal>
  <goal name="link&#39;vc.109" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.76" steps="3593"/></proof>
  </goal>
  <goal name="link&#39;vc.110" expl="write frame prev" proved="true">
  <transf name="remove" proved="true" arg1="Ensures2,Ensures1">
   <goal name="link&#39;vc.110.0" expl="write frame prev" proved="true">
   <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.81" steps="3662"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.111" expl="write frame child" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.72" steps="492"/></proof>
  </goal>
  <goal name="link&#39;vc.112" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.15" steps="1835"/></proof>
  </goal>
  <goal name="link&#39;vc.113" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="link&#39;vc.113.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.113.0.0" expl="VC for link" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="link&#39;vc.113.0.0.0" expl="VC for link" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="link&#39;vc.113.0.0.0.0" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.34" steps="5082"/></proof>
      </goal>
      <goal name="link&#39;vc.113.0.0.0.1" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.89" steps="1731"/></proof>
      </goal>
      <goal name="link&#39;vc.113.0.0.0.2" expl="VC for link" proved="true">
      <proof prover="4" memlimit="6000"><result status="valid" time="6.11" steps="330291"/></proof>
      </goal>
      <goal name="link&#39;vc.113.0.0.0.3" expl="VC for link" proved="true">
      <proof prover="4" memlimit="6000"><result status="valid" time="6.12" steps="330073"/></proof>
      </goal>
      <goal name="link&#39;vc.113.0.0.0.4" expl="VC for link" proved="true">
      <proof prover="4" memlimit="6000"><result status="valid" time="6.20" steps="330782"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="link&#39;vc.113.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.84" steps="1601"/></proof>
    </goal>
    <goal name="link&#39;vc.113.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.87" steps="1593"/></proof>
    </goal>
    <goal name="link&#39;vc.113.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.90" steps="1653"/></proof>
    </goal>
    <goal name="link&#39;vc.113.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.85" steps="1727"/></proof>
    </goal>
    <goal name="link&#39;vc.113.0.5" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.67" steps="6710"/></proof>
    </goal>
    <goal name="link&#39;vc.113.0.6" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.32" steps="2734"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.114" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.52" steps="326"/></proof>
  </goal>
  <goal name="link&#39;vc.115" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.48" steps="323"/></proof>
  </goal>
  <goal name="link&#39;vc.116" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.50" steps="323"/></proof>
  </goal>
  <goal name="link&#39;vc.117" expl="tmp := first.child" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.17" steps="197"/></proof>
  </goal>
  <goal name="link&#39;vc.118" expl="tmp := second.sibling" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.25" steps="265"/></proof>
  </goal>
  <goal name="link&#39;vc.119" expl="assertion" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.31" steps="1029"/></proof>
  </goal>
  <goal name="link&#39;vc.120" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.54" steps="310"/></proof>
  </goal>
  <goal name="link&#39;vc.121" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.54" steps="407"/></proof>
  </goal>
  <goal name="link&#39;vc.122" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.68" steps="984"/></proof>
  </goal>
  <goal name="link&#39;vc.123" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.56" steps="498"/></proof>
  </goal>
  <goal name="link&#39;vc.124" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.54" steps="400"/></proof>
  </goal>
  <goal name="link&#39;vc.125" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.67" steps="984"/></proof>
  </goal>
  <goal name="link&#39;vc.126" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.57" steps="407"/></proof>
  </goal>
  <goal name="link&#39;vc.127" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="6.23" steps="18239"/></proof>
  </goal>
  <goal name="link&#39;vc.128" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.68" steps="1004"/></proof>
  </goal>
  <goal name="link&#39;vc.129" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.98" steps="1847"/></proof>
  </goal>
  <goal name="link&#39;vc.130" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.58" steps="316"/></proof>
  </goal>
  <goal name="link&#39;vc.131" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="repClosed_DEF">
   <goal name="link&#39;vc.131.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.131.0.0" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.35" steps="2566"/></proof>
    </goal>
    <goal name="link&#39;vc.131.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.53" steps="306"/></proof>
    </goal>
    <goal name="link&#39;vc.131.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.61" steps="3699"/></proof>
    </goal>
    <goal name="link&#39;vc.131.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.21" steps="5735"/></proof>
    </goal>
    <goal name="link&#39;vc.131.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.47" steps="2989"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.132" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.52" steps="316"/></proof>
  </goal>
  <goal name="link&#39;vc.133" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.56" steps="422"/></proof>
  </goal>
  <goal name="link&#39;vc.134" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.48" steps="2807"/></proof>
  </goal>
  <goal name="link&#39;vc.135" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.80" steps="3954"/></proof>
  </goal>
  <goal name="link&#39;vc.136" expl="write frame child" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.74" steps="488"/></proof>
  </goal>
  <goal name="link&#39;vc.137" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.13" steps="1890"/></proof>
  </goal>
  <goal name="link&#39;vc.138" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="link&#39;vc.138.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.138.0.0" expl="VC for link" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="link&#39;vc.138.0.0.0" expl="VC for link" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="link&#39;vc.138.0.0.0.0" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.20" steps="4373"/></proof>
      </goal>
      <goal name="link&#39;vc.138.0.0.0.1" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.91" steps="1792"/></proof>
      </goal>
      <goal name="link&#39;vc.138.0.0.0.2" expl="VC for link" proved="true">
      <proof prover="4" timelimit="15" memlimit="8000"><result status="valid" time="6.42" steps="347777"/></proof>
      </goal>
      <goal name="link&#39;vc.138.0.0.0.3" expl="VC for link" proved="true">
      <proof prover="4" memlimit="6000"><result status="valid" time="6.65" steps="346934"/></proof>
      </goal>
      <goal name="link&#39;vc.138.0.0.0.4" expl="VC for link" proved="true">
      <proof prover="4" memlimit="6000"><result status="valid" time="6.62" steps="349493"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="link&#39;vc.138.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.84" steps="1656"/></proof>
    </goal>
    <goal name="link&#39;vc.138.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.81" steps="1659"/></proof>
    </goal>
    <goal name="link&#39;vc.138.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.86" steps="1708"/></proof>
    </goal>
    <goal name="link&#39;vc.138.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.86" steps="1707"/></proof>
    </goal>
    <goal name="link&#39;vc.138.0.5" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.19" steps="5727"/></proof>
    </goal>
    <goal name="link&#39;vc.138.0.6" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.33" steps="2734"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.139" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.52" steps="326"/></proof>
  </goal>
  <goal name="link&#39;vc.140" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.50" steps="323"/></proof>
  </goal>
  <goal name="link&#39;vc.141" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.50" steps="323"/></proof>
  </goal>
  <goal name="link&#39;vc.142" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.35" steps="256"/></proof>
  </goal>
  <goal name="link&#39;vc.143" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.37" steps="347"/></proof>
  </goal>
  <goal name="link&#39;vc.144" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.46" steps="838"/></proof>
  </goal>
  <goal name="link&#39;vc.145" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.39" steps="418"/></proof>
  </goal>
  <goal name="link&#39;vc.146" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.37" steps="340"/></proof>
  </goal>
  <goal name="link&#39;vc.147" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.46" steps="838"/></proof>
  </goal>
  <goal name="link&#39;vc.148" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.38" steps="347"/></proof>
  </goal>
  <goal name="link&#39;vc.149" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="4.53" steps="14402"/></proof>
  </goal>
  <goal name="link&#39;vc.150" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.36" steps="858"/></proof>
  </goal>
  <goal name="link&#39;vc.151" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="6000"><result status="valid" time="0.70" steps="1393"/></proof>
  </goal>
  <goal name="link&#39;vc.152" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.36" steps="262"/></proof>
  </goal>
  <goal name="link&#39;vc.153" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="repClosed_DEF">
   <goal name="link&#39;vc.153.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.153.0.0" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.00" steps="2113"/></proof>
    </goal>
    <goal name="link&#39;vc.153.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.32" steps="252"/></proof>
    </goal>
    <goal name="link&#39;vc.153.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.17" steps="3046"/></proof>
    </goal>
    <goal name="link&#39;vc.153.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.12" steps="2469"/></proof>
    </goal>
    <goal name="link&#39;vc.153.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.06" steps="2479"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.154" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.37" steps="262"/></proof>
  </goal>
  <goal name="link&#39;vc.155" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.39" steps="354"/></proof>
  </goal>
  <goal name="link&#39;vc.156" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.19" steps="2414"/></proof>
  </goal>
  <goal name="link&#39;vc.157" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.52" steps="417"/></proof>
  </goal>
  <goal name="link&#39;vc.158" expl="write frame child" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.52" steps="419"/></proof>
  </goal>
  <goal name="link&#39;vc.159" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.81" steps="1462"/></proof>
  </goal>
  <goal name="link&#39;vc.160" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="link&#39;vc.160.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.160.0.0" expl="VC for link" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="link&#39;vc.160.0.0.0" expl="VC for link" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="link&#39;vc.160.0.0.0.0" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.67" steps="3472"/></proof>
      </goal>
      <goal name="link&#39;vc.160.0.0.0.1" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.68" steps="1406"/></proof>
      <proof prover="4" memlimit="6000"><result status="valid" time="0.72" steps="86555"/></proof>
      </goal>
      <goal name="link&#39;vc.160.0.0.0.2" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="3.21" steps="8163"/></proof>
      <proof prover="4" memlimit="6000"><result status="valid" time="3.80" steps="226054"/></proof>
      </goal>
      <goal name="link&#39;vc.160.0.0.0.3" expl="VC for link" proved="true">
      <proof prover="4" memlimit="6000"><result status="valid" time="3.98" steps="225847"/></proof>
      </goal>
      <goal name="link&#39;vc.160.0.0.0.4" expl="VC for link" proved="true">
      <proof prover="4" memlimit="6000"><result status="valid" time="3.82" steps="226082"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="link&#39;vc.160.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.59" steps="1174"/></proof>
    </goal>
    <goal name="link&#39;vc.160.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.56" steps="1095"/></proof>
    </goal>
    <goal name="link&#39;vc.160.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.62" steps="1437"/></proof>
    </goal>
    <goal name="link&#39;vc.160.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.65" steps="1438"/></proof>
    </goal>
    <goal name="link&#39;vc.160.0.5" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.67" steps="4364"/></proof>
    </goal>
    <goal name="link&#39;vc.160.0.6" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.08" steps="2370"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.161" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.37" steps="272"/></proof>
  </goal>
  <goal name="link&#39;vc.162" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.37" steps="269"/></proof>
  </goal>
  <goal name="link&#39;vc.163" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.35" steps="269"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="insert_wr_rgn_eq" proved="true">
 <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.13" steps="574"/></proof>
 </goal>
 <goal name="img_rep_lem" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="img_rep_lem.0" proved="true">
  <transf name="apply" proved="true" arg1="extensionality1">
   <goal name="img_rep_lem.0.0" expl="apply premises" proved="true">
   <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.05" steps="6"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="insert&#39;vc" expl="VC for insert" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="insert&#39;vc.1" expl="assertion" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="insert&#39;vc.1.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.1.0.0" expl="VC for insert" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="insert&#39;vc.1.0.0.0" expl="VC for insert" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert&#39;vc.1.0.0.0.0" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.70" steps="1870"/></proof>
      </goal>
      <goal name="insert&#39;vc.1.0.0.0.1" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.16" steps="663"/></proof>
      </goal>
      <goal name="insert&#39;vc.1.0.0.0.2" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.19" steps="4139"/></proof>
      </goal>
      <goal name="insert&#39;vc.1.0.0.0.3" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.39" steps="4139"/></proof>
      </goal>
      <goal name="insert&#39;vc.1.0.0.0.4" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.23" steps="4139"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.1.0.1" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.22" steps="465"/></proof>
    </goal>
    <goal name="insert&#39;vc.1.0.2" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.20" steps="549"/></proof>
    </goal>
    <goal name="insert&#39;vc.1.0.3" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.22" steps="514"/></proof>
    </goal>
    <goal name="insert&#39;vc.1.0.4" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.14" steps="515"/></proof>
    </goal>
    <goal name="insert&#39;vc.1.0.5" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.97" steps="3032"/></proof>
    </goal>
    <goal name="insert&#39;vc.1.0.6" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.40" steps="1335"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.2" expl="assertion" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.07" steps="84"/></proof>
  </goal>
  <goal name="insert&#39;vc.3" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.01" steps="84"/></proof>
  </goal>
  <goal name="insert&#39;vc.4" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.03" steps="84"/></proof>
  </goal>
  <goal name="insert&#39;vc.5" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
  <goal name="insert&#39;vc.6" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.05" steps="88"/></proof>
  </goal>
  <goal name="insert&#39;vc.7" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="insert&#39;vc.8" expl="assertion" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.47" steps="980"/></proof>
  </goal>
  <goal name="insert&#39;vc.9" expl="assertion" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.32" steps="625"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.49" steps="79120"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="2.37"/></proof>
  </goal>
  <goal name="insert&#39;vc.10" expl="assertion" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="4.64" steps="10166"/></proof>
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="insert&#39;vc.10.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.10.0.0" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.62" steps="9260"/></proof>
    </goal>
    <goal name="insert&#39;vc.10.0.1" expl="VC for insert" proved="true">
    <proof prover="0"><result status="valid" time="0.26" steps="450813"/></proof>
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.18" steps="682"/></proof>
    <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.59" steps="77534"/></proof>
    <proof prover="5" timelimit="30"><result status="valid" time="0.15"/></proof>
    </goal>
    <goal name="insert&#39;vc.10.0.2" expl="VC for insert" proved="true">
    <proof prover="0"><result status="valid" time="0.18" steps="423250"/></proof>
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.31" steps="812"/></proof>
    <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.48" steps="80116"/></proof>
    <proof prover="5" timelimit="30"><result status="valid" time="0.18"/></proof>
    </goal>
    <goal name="insert&#39;vc.10.0.3" expl="VC for insert" proved="true">
    <proof prover="0"><result status="valid" time="0.15" steps="408984"/></proof>
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.20" steps="756"/></proof>
    <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.62" steps="80686"/></proof>
    <proof prover="5" timelimit="30"><result status="valid" time="0.26"/></proof>
    </goal>
    <goal name="insert&#39;vc.10.0.4" expl="VC for insert" proved="true">
    <proof prover="0"><result status="valid" time="0.16" steps="413254"/></proof>
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.30" steps="758"/></proof>
    <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.49" steps="78107"/></proof>
    <proof prover="5" timelimit="30"><result status="valid" time="0.14"/></proof>
    </goal>
    <goal name="insert&#39;vc.10.0.5" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.82" steps="5137"/></proof>
    </goal>
    <goal name="insert&#39;vc.10.0.6" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.70" steps="2005"/></proof>
    <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="2.36" steps="182753"/></proof>
    <proof prover="5" timelimit="30"><result status="valid" time="5.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.11" expl="rep := self.rep" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.23" steps="231"/></proof>
  </goal>
  <goal name="insert&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.33" steps="206"/></proof>
  </goal>
  <goal name="insert&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.33" steps="350"/></proof>
  </goal>
  <goal name="insert&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.61" steps="1266"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="1.40"/></proof>
  </goal>
  <goal name="insert&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.38" steps="444"/></proof>
  </goal>
  <goal name="insert&#39;vc.16" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.38" steps="343"/></proof>
  </goal>
  <goal name="insert&#39;vc.17" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.60" steps="1266"/></proof>
  </goal>
  <goal name="insert&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.38" steps="350"/></proof>
  </goal>
  <goal name="insert&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.66" steps="1001"/></proof>
  </goal>
  <goal name="insert&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.67" steps="1324"/></proof>
  </goal>
  <goal name="insert&#39;vc.21" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="6.07" steps="13138"/></proof>
  </goal>
  <goal name="insert&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.37" steps="212"/></proof>
  </goal>
  <goal name="insert&#39;vc.23" expl="assertion" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.75" steps="1266"/></proof>
  </goal>
  <goal name="insert&#39;vc.24" expl="assertion" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.29" steps="2392"/></proof>
  </goal>
  <goal name="insert&#39;vc.25" expl="assertion" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.52" steps="2669"/></proof>
  </goal>
  <goal name="insert&#39;vc.26" expl="assertion" proved="true">
  <transf name="unfold" proved="true" arg1="pqueuePub">
   <goal name="insert&#39;vc.26.0" expl="VC for insert" proved="true">
   <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="6.30" steps="351207"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.27" expl="assertion" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="7.59" steps="14008"/></proof>
  </goal>
  <goal name="insert&#39;vc.28" expl="assertion" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="insert&#39;vc.28.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.28.0.0" expl="VC for insert" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="insert&#39;vc.28.0.0.0" expl="VC for insert" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert&#39;vc.28.0.0.0.0" expl="VC for insert" proved="true">
      <transf name="subst_all" proved="true" >
       <goal name="insert&#39;vc.28.0.0.0.0.0" expl="VC for insert" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="insert&#39;vc.28.0.0.0.0.0.0" expl="VC for insert" proved="true">
        <transf name="unfold" proved="true" arg1="typeofRgn">
         <goal name="insert&#39;vc.28.0.0.0.0.0.0.0" expl="VC for insert" proved="true">
         <transf name="introduce_premises" proved="true" >
          <goal name="insert&#39;vc.28.0.0.0.0.0.0.0.0" expl="VC for insert" proved="true">
          <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Assert5">
           <goal name="insert&#39;vc.28.0.0.0.0.0.0.0.0.0" expl="VC for insert" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="insert&#39;vc.28.0.0.0.0.0.0.0.0.0.0" expl="VC for insert" proved="true">
            <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.35" steps="362"/></proof>
            <proof prover="5" timelimit="30"><result status="valid" time="0.17"/></proof>
            </goal>
            <goal name="insert&#39;vc.28.0.0.0.0.0.0.0.0.0.1" expl="VC for insert" proved="true">
            <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="5.80" steps="8169"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="insert&#39;vc.28.0.0.0.1" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.15" steps="3001"/></proof>
      </goal>
      <goal name="insert&#39;vc.28.0.0.0.2" expl="VC for insert" proved="true">
      <transf name="subst_all" proved="true" >
       <goal name="insert&#39;vc.28.0.0.0.2.0" expl="VC for insert" proved="true">
       <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="5.77" steps="11842"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="insert&#39;vc.28.0.0.0.3" expl="VC for insert" proved="true">
      <transf name="subst_all" proved="true" >
       <goal name="insert&#39;vc.28.0.0.0.3.0" expl="VC for insert" proved="true">
       <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="5.89" steps="11842"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="insert&#39;vc.28.0.0.0.4" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="5.19" steps="10255"/></proof>
      <transf name="subst_all" proved="true" >
       <goal name="insert&#39;vc.28.0.0.0.4.0" expl="VC for insert" proved="true">
       <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="6.30" steps="11842"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.28.0.1" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.60" steps="1560"/></proof>
    </goal>
    <goal name="insert&#39;vc.28.0.2" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.02" steps="2619"/></proof>
    </goal>
    <goal name="insert&#39;vc.28.0.3" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.64" steps="1695"/></proof>
    </goal>
    <goal name="insert&#39;vc.28.0.4" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.50" steps="1668"/></proof>
    </goal>
    <goal name="insert&#39;vc.28.0.5" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="5.63" steps="12260"/></proof>
    </goal>
    <goal name="insert&#39;vc.28.0.6" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="8.95" steps="19710"/></proof>
    <transf name="subst_all" proved="true" >
     <goal name="insert&#39;vc.28.0.6.0" expl="VC for insert" proved="true">
     <transf name="unfold" proved="true" arg1="strongDisjoint">
      <goal name="insert&#39;vc.28.0.6.0.0" expl="VC for insert" proved="true">
      <transf name="introduce_premises" proved="true" >
       <goal name="insert&#39;vc.28.0.6.0.0.0" expl="VC for insert" proved="true">
       <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.41" steps="6603"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.29" expl="hd := self.head" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.45" steps="355"/></proof>
  </goal>
  <goal name="insert&#39;vc.30" expl="assertion" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.32" steps="224"/></proof>
  </goal>
  <goal name="insert&#39;vc.31" expl="assertion" proved="true">
  <transf name="clear_but" proved="true" arg1="Ensures">
   <goal name="insert&#39;vc.31.0" expl="assertion" proved="true">
   <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.04" steps="4"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.32" expl="assertion" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.00" steps="1463"/></proof>
  </goal>
  <goal name="insert&#39;vc.33" expl="assertion" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.59" steps="276"/></proof>
  </goal>
  <goal name="insert&#39;vc.34" expl="sz := self.size" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.74" steps="438"/></proof>
  </goal>
  <goal name="insert&#39;vc.35" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.01" steps="333"/></proof>
  </goal>
  <goal name="insert&#39;vc.36" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.02" steps="666"/></proof>
  </goal>
  <goal name="insert&#39;vc.37" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.31" steps="1591"/></proof>
  </goal>
  <goal name="insert&#39;vc.38" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.03" steps="724"/></proof>
  </goal>
  <goal name="insert&#39;vc.39" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.95" steps="537"/></proof>
  </goal>
  <goal name="insert&#39;vc.40" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.27" steps="1591"/></proof>
  </goal>
  <goal name="insert&#39;vc.41" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.00" steps="666"/></proof>
  </goal>
  <goal name="insert&#39;vc.42" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.14" steps="3289"/></proof>
  </goal>
  <goal name="insert&#39;vc.43" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.30" steps="1653"/></proof>
  </goal>
  <goal name="insert&#39;vc.44" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="5.35" steps="11510"/></proof>
  </goal>
  <goal name="insert&#39;vc.45" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.97" steps="339"/></proof>
  </goal>
  <goal name="insert&#39;vc.46" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.96" steps="337"/></proof>
  </goal>
  <goal name="insert&#39;vc.47" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.96" steps="508"/></proof>
  </goal>
  <goal name="insert&#39;vc.48" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.03" steps="492"/></proof>
  </goal>
  <goal name="insert&#39;vc.49" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.91" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.50" expl="write frame eSlots" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.89" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.51" expl="write frame bSlots" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.85" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.52" expl="write frame dSlots" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.86" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.53" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.95" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.54" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.18" steps="567"/></proof>
  </goal>
  <goal name="insert&#39;vc.55" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.18" steps="569"/></proof>
  </goal>
  <goal name="insert&#39;vc.56" expl="write frame head" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.17" steps="571"/></proof>
  </goal>
  <goal name="insert&#39;vc.57" expl="write frame child" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.16" steps="571"/></proof>
  </goal>
  <goal name="insert&#39;vc.58" expl="write frame bagEdges" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.85" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.59" expl="write frame adjList" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.85" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.60" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.23" steps="583"/></proof>
  </goal>
  <goal name="insert&#39;vc.61" expl="write frame wght" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.87" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.62" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.28" steps="1198"/></proof>
  </goal>
  <goal name="insert&#39;vc.63" expl="write frame strv" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.86" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.64" expl="write frame size" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.16" steps="575"/></proof>
  </goal>
  <goal name="insert&#39;vc.65" expl="write frame numVerts" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.86" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.66" expl="write frame length" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.92" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.67" expl="write frame key" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.27" steps="1200"/></proof>
  </goal>
  <goal name="insert&#39;vc.68" expl="write frame endv" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.87" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.69" expl="write frame eLength" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.86" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.70" expl="write frame dLength" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.85" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.71" expl="write frame bagNode" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.86" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.72" expl="write frame bLength" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.88" steps="345"/></proof>
  </goal>
  <goal name="insert&#39;vc.73" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.45" steps="4289"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="1.53" steps="133145"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="5.22"/></proof>
  </goal>
  <goal name="insert&#39;vc.74" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.89" steps="341"/></proof>
  </goal>
  <goal name="insert&#39;vc.75" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.91" steps="344"/></proof>
  </goal>
  <goal name="insert&#39;vc.76" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.94" steps="346"/></proof>
  </goal>
  <goal name="insert&#39;vc.77" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.89" steps="346"/></proof>
  </goal>
  <goal name="insert&#39;vc.78" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="427980"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.92" steps="347"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.23" steps="57282"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="insert&#39;vc.79" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.45" steps="4772"/></proof>
  </goal>
  <goal name="insert&#39;vc.80" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="insert&#39;vc.80.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.80.0.0" expl="VC for insert" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="insert&#39;vc.80.0.0.0" expl="VC for insert" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert&#39;vc.80.0.0.0.0" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30"><result status="valid" time="40.58" steps="65973"/></proof>
      </goal>
      <goal name="insert&#39;vc.80.0.0.0.1" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.58" steps="2878"/></proof>
      <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="1.34" steps="123102"/></proof>
      <proof prover="5" timelimit="30"><result status="valid" time="4.75"/></proof>
      </goal>
      <goal name="insert&#39;vc.80.0.0.0.2" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="7.25" steps="15751"/></proof>
      <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="2.90" steps="195829"/></proof>
      <proof prover="5" timelimit="30"><result status="valid" time="2.06"/></proof>
      </goal>
      <goal name="insert&#39;vc.80.0.0.0.3" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="7.38" steps="15751"/></proof>
      <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="2.81" steps="195129"/></proof>
      <proof prover="5" timelimit="30"><result status="valid" time="2.12"/></proof>
      </goal>
      <goal name="insert&#39;vc.80.0.0.0.4" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="7.22" steps="15751"/></proof>
      <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="2.80" steps="195026"/></proof>
      <proof prover="5" timelimit="30"><result status="valid" time="2.23"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.80.0.1" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.71" steps="4121"/></proof>
    <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="13.06" steps="1440649"/></proof>
    </goal>
    <goal name="insert&#39;vc.80.0.2" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.56" steps="2860"/></proof>
    <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="1.36" steps="124103"/></proof>
    </goal>
    <goal name="insert&#39;vc.80.0.3" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.12" steps="6227"/></proof>
    <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="11.14" steps="1030027"/></proof>
    </goal>
    <goal name="insert&#39;vc.80.0.4" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.79" steps="3998"/></proof>
    <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="2.42" steps="248195"/></proof>
    </goal>
    <goal name="insert&#39;vc.80.0.5" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="7.51" steps="10002"/></proof>
    </goal>
    <goal name="insert&#39;vc.80.0.6" expl="VC for insert" proved="true">
    <transf name="unfold" proved="true" arg1="strongDisjoint">
     <goal name="insert&#39;vc.80.0.6.0" expl="VC for insert" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert&#39;vc.80.0.6.0.0" expl="VC for insert" proved="true">
      <transf name="assert" proved="true" arg1="(subset (inter prep qrep) (singleton null))">
       <goal name="insert&#39;vc.80.0.6.0.0.0" expl="asserted formula" proved="true">
       <proof prover="0"><result status="valid" time="0.22" steps="636113"/></proof>
       <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.66" steps="596"/></proof>
       <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.26" steps="59143"/></proof>
       <proof prover="5" timelimit="30"><result status="valid" time="0.15"/></proof>
       </goal>
       <goal name="insert&#39;vc.80.0.6.0.0.1" expl="VC for insert" proved="true">
       <transf name="assert" proved="true" arg1="(mem1 null prep)">
        <goal name="insert&#39;vc.80.0.6.0.0.1.0" expl="asserted formula" proved="true">
        <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.52" steps="3079"/></proof>
        <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="1.83" steps="146721"/></proof>
        <proof prover="5" timelimit="30"><result status="valid" time="8.94"/></proof>
        </goal>
        <goal name="insert&#39;vc.80.0.6.0.0.1.1" expl="VC for insert" proved="true">
        <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="6.28" steps="14521"/></proof>
        <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="2.20" steps="161207"/></proof>
        <proof prover="5" timelimit="30"><result status="valid" time="27.74"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.81" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="418680"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.41" steps="363"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.35" steps="64659"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="1.93"/></proof>
  </goal>
  <goal name="insert&#39;vc.82" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="20077"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.30" steps="226"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.14" steps="46006"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="insert&#39;vc.83" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.52" steps="686"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.35" steps="65553"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="insert&#39;vc.84" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="29251"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.31" steps="228"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.14" steps="46022"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="insert&#39;vc.85" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="404738"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.37" steps="375"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.39" steps="64183"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="insert&#39;vc.86" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="20101"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.31" steps="230"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.14" steps="46039"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="insert&#39;vc.87" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="184218"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.32" steps="230"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.22" steps="53540"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="insert&#39;vc.88" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.80" steps="1286"/></proof>
  </goal>
  <goal name="insert&#39;vc.89" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="20140"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.31" steps="235"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.11" steps="46097"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="insert&#39;vc.90" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="20145"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.32" steps="235"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.13" steps="46100"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="insert&#39;vc.91" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="407675"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.90" steps="334"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.33" steps="72364"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="1.46"/></proof>
  </goal>
  <goal name="insert&#39;vc.92" expl="sz := self.size" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="434544"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.06" steps="509"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.41" steps="74289"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="insert&#39;vc.93" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="406269"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.36" steps="388"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.32" steps="72188"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="insert&#39;vc.94" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.39" steps="841"/></proof>
  </goal>
  <goal name="insert&#39;vc.95" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.79" steps="1484"/></proof>
  </goal>
  <goal name="insert&#39;vc.96" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.37" steps="738"/></proof>
  </goal>
  <goal name="insert&#39;vc.97" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.31" steps="623"/></proof>
  </goal>
  <goal name="insert&#39;vc.98" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.75" steps="1484"/></proof>
  </goal>
  <goal name="insert&#39;vc.99" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.39" steps="841"/></proof>
  </goal>
  <goal name="insert&#39;vc.100" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.69" steps="1274"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.76" steps="92741"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="insert&#39;vc.101" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.76" steps="1504"/></proof>
  </goal>
  <goal name="insert&#39;vc.102" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="11.34" steps="19416"/></proof>
  </goal>
  <goal name="insert&#39;vc.103" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.41" steps="394"/></proof>
  </goal>
  <goal name="insert&#39;vc.104" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="21578"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.35" steps="390"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.15" steps="48167"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="insert&#39;vc.105" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="434352"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.33" steps="579"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.31" steps="72933"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="insert&#39;vc.106" expl="wr frame alloc" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="405658"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.45" steps="563"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.31" steps="54173"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="insert&#39;vc.107" expl="write frame slots" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="184244"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.32" steps="398"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.19" steps="54922"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="insert&#39;vc.108" expl="write frame eSlots" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.20" steps="398"/></proof>
  </goal>
  <goal name="insert&#39;vc.109" expl="write frame bSlots" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.24" steps="398"/></proof>
  </goal>
  <goal name="insert&#39;vc.110" expl="write frame dSlots" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.23" steps="398"/></proof>
  </goal>
  <goal name="insert&#39;vc.111" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.31" steps="398"/></proof>
  </goal>
  <goal name="insert&#39;vc.112" expl="write frame sibling" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="499563"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.73" steps="649"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.77" steps="96152"/></proof>
  </goal>
  <goal name="insert&#39;vc.113" expl="write frame prev" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="501296"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.60" steps="651"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.95" steps="96615"/></proof>
  </goal>
  <goal name="insert&#39;vc.114" expl="write frame head" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="500441"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.60" steps="643"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="2.18" steps="182649"/></proof>
  </goal>
  <goal name="insert&#39;vc.115" expl="write frame child" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="504752"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.75" steps="653"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.74" steps="98016"/></proof>
  </goal>
  <goal name="insert&#39;vc.116" expl="write frame bagEdges" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.24" steps="398"/></proof>
  </goal>
  <goal name="insert&#39;vc.117" expl="write frame adjList" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.24" steps="398"/></proof>
  </goal>
  <goal name="insert&#39;vc.118" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.62" steps="658"/></proof>
  </goal>
  <goal name="insert&#39;vc.119" expl="write frame wght" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.25" steps="398"/></proof>
  </goal>
  <goal name="insert&#39;vc.120" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.79" steps="1494"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.63" steps="86796"/></proof>
  </goal>
  <goal name="insert&#39;vc.121" expl="write frame strv" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.21" steps="398"/></proof>
  </goal>
  <goal name="insert&#39;vc.122" expl="write frame size" proved="true">
  <proof prover="0"><result status="valid" time="0.19" steps="586167"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.64" steps="648"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="2.89" steps="273001"/></proof>
  </goal>
  <goal name="insert&#39;vc.123" expl="write frame numVerts" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.22" steps="398"/></proof>
  </goal>
  <goal name="insert&#39;vc.124" expl="write frame length" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="197066"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.28" steps="398"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.20" steps="57151"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="insert&#39;vc.125" expl="write frame key" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.79" steps="1496"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.62" steps="88081"/></proof>
  </goal>
  <goal name="insert&#39;vc.126" expl="write frame endv" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.24" steps="398"/></proof>
  </goal>
  <goal name="insert&#39;vc.127" expl="write frame eLength" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.24" steps="398"/></proof>
  </goal>
  <goal name="insert&#39;vc.128" expl="write frame dLength" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.24" steps="398"/></proof>
  </goal>
  <goal name="insert&#39;vc.129" expl="write frame bagNode" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.23" steps="398"/></proof>
  </goal>
  <goal name="insert&#39;vc.130" expl="write frame bLength" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.24" steps="398"/></proof>
  </goal>
  <goal name="insert&#39;vc.131" expl="postcondition" proved="true">
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="1.89" steps="166421"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="10.01"/></proof>
  </goal>
  <goal name="insert&#39;vc.132" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.49" steps="1020839"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="3.43" steps="3354"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="7.56" steps="392243"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="4.43"/></proof>
  </goal>
  <goal name="insert&#39;vc.133" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.16" steps="400"/></proof>
  </goal>
  <goal name="insert&#39;vc.134" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="434804"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.31" steps="402"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.43" steps="80447"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="6.02"/></proof>
  </goal>
  <goal name="insert&#39;vc.135" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="435078"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.27" steps="400"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.22" steps="58009"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="insert&#39;vc.136" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="435341"/></proof>
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.28" steps="401"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.21" steps="58033"/></proof>
  <proof prover="5" timelimit="30"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="insert&#39;vc.137" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.72" steps="8525"/></proof>
  </goal>
  <goal name="insert&#39;vc.138" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="insert&#39;vc.138.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.138.0.0" expl="VC for insert" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="insert&#39;vc.138.0.0.0" expl="VC for insert" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert&#39;vc.138.0.0.0.0" expl="VC for insert" proved="true">
      <transf name="case" proved="true" arg1="(p = self)">
       <goal name="insert&#39;vc.138.0.0.0.0.0" expl="true case" proved="true">
       <proof prover="1" timelimit="30"><result status="valid" time="3.17" steps="3158"/></proof>
       </goal>
       <goal name="insert&#39;vc.138.0.0.0.0.1" expl="false case" proved="true">
       <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures43">
        <goal name="insert&#39;vc.138.0.0.0.0.1.0" expl="false case" proved="true">
        <transf name="instantiate" proved="true" arg1="Ensures43" arg2="p">
         <goal name="insert&#39;vc.138.0.0.0.0.1.0.0" expl="false case" proved="true">
         <proof prover="1" timelimit="30"><result status="valid" time="2.61" steps="7803"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="insert&#39;vc.138.0.0.0.1" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30"><result status="valid" time="2.15" steps="3797"/></proof>
      </goal>
      <goal name="insert&#39;vc.138.0.0.0.2" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30"><result status="valid" time="12.42" steps="14640"/></proof>
      <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="1.09"/></proof>
      </goal>
      <goal name="insert&#39;vc.138.0.0.0.3" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30"><result status="valid" time="12.41" steps="14335"/></proof>
      <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="1.26"/></proof>
      </goal>
      <goal name="insert&#39;vc.138.0.0.0.4" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30"><result status="valid" time="12.21" steps="14335"/></proof>
      <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="1.28"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.138.0.1" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="5.84" steps="7704"/></proof>
    <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="26.62" steps="3088549"/></proof>
    </goal>
    <goal name="insert&#39;vc.138.0.2" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.97" steps="4405"/></proof>
    <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="1.63" steps="144980"/></proof>
    </goal>
    <goal name="insert&#39;vc.138.0.3" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(p = self)">
     <goal name="insert&#39;vc.138.0.3.0" expl="true case" proved="true">
     <transf name="assert" proved="true" arg1="(s.heap.size[self] &lt;&gt; 0)">
      <goal name="insert&#39;vc.138.0.3.0.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="0.19" steps="565675"/></proof>
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.83" steps="647"/></proof>
      <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="1.29" steps="127420"/></proof>
      <proof prover="5" timelimit="30"><result status="valid" time="0.67"/></proof>
      </goal>
      <goal name="insert&#39;vc.138.0.3.0.1" expl="true case" proved="true">
      <proof prover="0"><result status="valid" time="0.05" steps="155472"/></proof>
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.55" steps="394"/></proof>
      <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.15" steps="52202"/></proof>
      <proof prover="5" timelimit="30"><result status="valid" time="0.19"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="insert&#39;vc.138.0.3.1" expl="false case" proved="true">
     <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="5.41" steps="9307"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.138.0.4" expl="VC for insert" proved="true">
    <transf name="assert" proved="true" arg1="(s.heap.head[self] &lt;&gt; null)">
     <goal name="insert&#39;vc.138.0.4.0" expl="asserted formula" proved="true">
     <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.64" steps="396"/></proof>
     </goal>
     <goal name="insert&#39;vc.138.0.4.1" expl="VC for insert" proved="true">
     <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="5.28" steps="7490"/></proof>
     <transf name="case" proved="true" arg1="(p = self)">
      <goal name="insert&#39;vc.138.0.4.1.0" expl="true case" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.56" steps="394"/></proof>
      </goal>
      <goal name="insert&#39;vc.138.0.4.1.1" expl="false case" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="5.00" steps="7784"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.138.0.5" expl="VC for insert" proved="true">
    <transf name="unfold" proved="true" arg1="nodeP">
     <goal name="insert&#39;vc.138.0.5.0" expl="VC for insert" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert&#39;vc.138.0.5.0.0" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="12.54" steps="12362"/></proof>
      </goal>
      <goal name="insert&#39;vc.138.0.5.0.1" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="12.99" steps="12362"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.138.0.6" expl="VC for insert" proved="true">
    <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="13.13" steps="1358042"/></proof>
    <proof prover="5" timelimit="30"><result status="valid" time="20.87"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="combineAux&#39;vc" expl="VC for combineAux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="combineAux&#39;vc.0" expl="array size" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="136"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.33" steps="262"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.2" expl=" index is in bounds" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.29" steps="190"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.3" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.42" steps="242"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.45" steps="244"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.45" steps="364"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.6" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.64" steps="1044"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.7" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.51" steps="445"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.49" steps="357"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="1044"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.50" steps="364"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.63" steps="833"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.32" steps="10119"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.74" steps="1187"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.48" steps="250"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.15" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.09" steps="4067"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.16" expl="current := handle.sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.54" steps="370"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.47" steps="254"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.47" steps="257"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.19" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.43" steps="261"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.20" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.02" steps="1845"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.21" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.45" steps="263"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.22" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.24" steps="2058"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.23" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="4.05"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.24" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.46" steps="267"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.25" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="25.14" steps="6593"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.26" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.62" steps="3407"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.27" expl="loop invariant init" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.27.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.27.0.0" expl="VC for combineAux" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="combineAux&#39;vc.27.0.0.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.27.0.0.0.0" expl="VC for combineAux" proved="true">
      <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires">
       <goal name="combineAux&#39;vc.27.0.0.0.0.0" expl="VC for combineAux" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="combineAux&#39;vc.27.0.0.0.0.0.0" expl="VC for combineAux" proved="true">
        <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.81" steps="5650"/></proof>
        <proof prover="4" timelimit="15" memlimit="9000"><result status="valid" time="9.17" steps="712904"/></proof>
        <proof prover="5" timelimit="15"><result status="valid" time="7.69"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="combineAux&#39;vc.27.0.0.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.03" steps="2605"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.27.0.0.0.2" expl="VC for combineAux" proved="true">
      <proof prover="5" timelimit="15"><result status="valid" time="2.58"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.27.0.0.0.3" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="2.64"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.27.0.0.0.4" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="2.57"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.27.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.87" steps="2170"/></proof>
    <proof prover="5"><result status="valid" time="2.95"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.27.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.91" steps="2386"/></proof>
    <proof prover="5"><result status="valid" time="2.07"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.27.0.3" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.86" steps="2378"/></proof>
    <proof prover="5"><result status="valid" time="3.03"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.27.0.4" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.90" steps="2380"/></proof>
    <proof prover="5"><result status="valid" time="2.95"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.27.0.5" expl="VC for combineAux" proved="true">
    <proof prover="5" timelimit="15"><result status="valid" time="29.18"/></proof>
    <transf name="unfold" proved="true" arg1="nodeP">
     <goal name="combineAux&#39;vc.27.0.5.0" expl="VC for combineAux" proved="true">
     <proof prover="5" timelimit="15"><result status="valid" time="7.21"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.27.0.5.0.0" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="7.67"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.27.0.5.0.1" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="5.37"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.27.0.6" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.67" steps="5436"/></proof>
    <proof prover="5"><result status="valid" time="6.55"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.28" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.86" steps="477"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.29" expl=" index is in bounds" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.12" steps="447512"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.77" steps="456"/></proof>
  <proof prover="5"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.30" expl="tmp := current.prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.80" steps="1761"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.74" steps="94677"/></proof>
  <proof prover="5"><result status="valid" time="0.61"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.31" expl="current := current.sibling" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.27" steps="704841"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.66" steps="5862"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="11.97" steps="1324237"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.32" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.62" steps="440"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.33" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.78" steps="932"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.34" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.34.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.07" steps="432"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.34.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.96" steps="432"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.34.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.98" steps="432"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.34.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.02" steps="432"/></proof>
   <proof prover="5"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.34.4" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.34.4.0" expl="true case (type invariant)" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.04" steps="439"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.34.4.1" expl="false case (type invariant)" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.19" steps="1067"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.35" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.76" steps="1053"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.36" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.63" steps="640"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.37" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="2.11" steps="2160"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.38" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.75" steps="942"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.39" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.39.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.97" steps="432"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.39.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.97" steps="432"/></proof>
   <proof prover="5"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.39.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.07" steps="2725"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.39.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.98" steps="432"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.39.4" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.99" steps="432"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.39.5" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.95" steps="14037"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.39.6" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.39.6.0" expl="true case (type invariant)" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.00" steps="435"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.39.6.1" expl="false case (type invariant)" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.07" steps="649"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="combineAux&#39;vc.39.7" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.03" steps="647"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.40" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.40.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="1.57" steps="2099"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.40.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="0.92" steps="432"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.40.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="1.16" steps="1156"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.40.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="0.90" steps="432"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.40.4" expl="type invariant" proved="true">
   <transf name="instantiate" proved="true" arg1="Ensures9" arg2="i">
    <goal name="combineAux&#39;vc.40.4.0" expl="type invariant" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="5.96" steps="16540"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.41" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.16" steps="7035"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.42" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.66" steps="446"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.56" steps="444"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.44" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.54" steps="445"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.45" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.19" steps="8246"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.46" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.24" steps="5642"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.47" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.94" steps="7885"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.48" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.55" steps="5779"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.49" expl="loop invariant preservation" proved="true">
  <transf name="rewrite" proved="true" arg1="repClosed_DEF">
   <goal name="combineAux&#39;vc.49.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.49.0.0" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.94" steps="2176"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.49.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.99" steps="434"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.49.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.28" steps="2769"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.49.0.3" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.22" steps="993"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.49.0.4" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.19" steps="993"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.50" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.50" steps="4124"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.51" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.04" steps="1520"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.52" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.08" steps="5590"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.53" expl="loop invariant preservation" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.53.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.53.0.0" expl="VC for combineAux" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="combineAux&#39;vc.53.0.0.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.53.0.0.0.0" expl="VC for combineAux" proved="true">
      <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="LoopInvariant7">
       <goal name="combineAux&#39;vc.53.0.0.0.0.0" expl="VC for combineAux" proved="true">
       <transf name="split_premise_full" proved="true" >
        <goal name="combineAux&#39;vc.53.0.0.0.0.0.0" expl="VC for combineAux" proved="true">
        <proof prover="4" memlimit="9000"><result status="valid" time="2.96" steps="223612"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="combineAux&#39;vc.53.0.0.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.69" steps="4701"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.53.0.0.0.2" expl="VC for combineAux" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="17.90" steps="1281677"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.53.0.0.0.3" expl="VC for combineAux" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="17.67" steps="1242976"/></proof>
      <proof prover="5"><result status="valid" time="1.45"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.53.0.0.0.4" expl="VC for combineAux" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="17.00" steps="1250250"/></proof>
      <proof prover="5"><result status="valid" time="1.39"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.53.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.44" steps="3783"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.53.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.36" steps="4071"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.53.0.3" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.35" steps="3938"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.53.0.4" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.29" steps="3934"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.53.0.5" expl="VC for combineAux" proved="true">
    <proof prover="5"><result status="valid" time="15.99"/></proof>
    <transf name="unfold" proved="true" arg1="nodeP">
     <goal name="combineAux&#39;vc.53.0.5.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.53.0.5.0.0" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="18.85"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.53.0.5.0.1" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="15.56"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.53.0.6" expl="VC for combineAux" proved="true">
    <proof prover="4" memlimit="9000"><result status="valid" time="31.55" steps="2755295"/></proof>
    <proof prover="5"><result status="valid" time="18.24"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.54" expl="current := current.sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.75" steps="1754"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.74" steps="98823"/></proof>
  <proof prover="5"><result status="valid" time="0.72"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.55" expl="type invariant" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.09" steps="396144"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.12" steps="392"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.31" steps="69621"/></proof>
  <proof prover="5"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.56" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.27" steps="878"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.57" expl="type invariant" proved="true">
  <transf name="case" proved="true" arg1="(p = trees)">
   <goal name="combineAux&#39;vc.57.0" expl="true case (type invariant)" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.19" steps="399"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.57.1" expl="false case (type invariant)" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.04" steps="2969"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.58" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.37" steps="1094"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.59" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.14" steps="592"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.60" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.64" steps="2108"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.61" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.37" steps="888"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.62" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.62.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.72" steps="384"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.62.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.74" steps="384"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.62.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.77" steps="384"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.62.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.73" steps="384"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.62.4" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.72" steps="384"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.62.5" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.79" steps="590"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.62.6" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.62.6.0" expl="true case (type invariant)" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.73" steps="387"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.62.6.1" expl="false case (type invariant)" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.82" steps="601"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="combineAux&#39;vc.62.7" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.77" steps="599"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.63" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.63.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="1.44" steps="2027"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.63.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="0.68" steps="384"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.63.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="0.92" steps="1105"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.63.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="0.70" steps="384"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.63.4" expl="type invariant" proved="true">
   <transf name="instantiate" proved="true" arg1="Ensures8" arg2="i">
    <goal name="combineAux&#39;vc.63.4.0" expl="type invariant" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="6.28" steps="24112"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.64" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.67" steps="7771"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.65" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.20" steps="398"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.66" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.09" steps="366060"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.08" steps="396"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.19" steps="53574"/></proof>
  <proof prover="5"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.67" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.06" steps="178660"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.10" steps="397"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.20" steps="54195"/></proof>
  <proof prover="5"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.68" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.05" steps="8268"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.69" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.68" steps="5447"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="8.40" steps="868020"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.70" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.29" steps="8418"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.71" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.12" steps="1906"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.72" expl="loop invariant preservation" proved="true">
  <transf name="rewrite" proved="true" arg1="repClosed_DEF">
   <goal name="combineAux&#39;vc.72.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.72.0.0" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.50" steps="2119"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.72" steps="386"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.92" steps="946"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.3" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.95" steps="946"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.4" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.91" steps="946"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.73" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.49" steps="1000"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.74" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.48" steps="1472"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.75" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.45" steps="5422"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="1.34" steps="128891"/></proof>
  <proof prover="5"><result status="valid" time="7.40"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.76" expl="loop invariant preservation" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.76.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.76.0.0" expl="VC for combineAux" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="combineAux&#39;vc.76.0.0.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.76.0.0.0.0" expl="VC for combineAux" proved="true">
      <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="LoopInvariant10">
       <goal name="combineAux&#39;vc.76.0.0.0.0.0" expl="VC for combineAux" proved="true">
       <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="11.96" steps="11804"/></proof>
       <proof prover="5"><result status="valid" time="12.71"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="combineAux&#39;vc.76.0.0.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.46" steps="4715"/></proof>
      <proof prover="4" memlimit="9000"><result status="valid" time="1.49" steps="130254"/></proof>
      <proof prover="5"><result status="valid" time="4.21"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.76.0.0.0.2" expl="VC for combineAux" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="16.74" steps="1149926"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.76.0.0.0.3" expl="VC for combineAux" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="15.19" steps="1116448"/></proof>
      <proof prover="5"><result status="valid" time="1.26"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.76.0.0.0.4" expl="VC for combineAux" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="16.09" steps="1123234"/></proof>
      <proof prover="5"><result status="valid" time="1.37"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.76.0.1" expl="VC for combineAux" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.25" steps="618670"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.96" steps="3765"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="0.99" steps="115793"/></proof>
    <proof prover="5"><result status="valid" time="0.32"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.76.0.2" expl="VC for combineAux" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.17" steps="531070"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.06" steps="4008"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="1.10" steps="121258"/></proof>
    <proof prover="5"><result status="valid" time="0.30"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.76.0.3" expl="VC for combineAux" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.18" steps="527844"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.02" steps="3850"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="1.01" steps="118112"/></proof>
    <proof prover="5"><result status="valid" time="0.25"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.76.0.4" expl="VC for combineAux" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.18" steps="548218"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.09" steps="3900"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="0.99" steps="116628"/></proof>
    <proof prover="5"><result status="valid" time="0.34"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.76.0.5" expl="VC for combineAux" proved="true">
    <proof prover="5"><result status="valid" time="13.17"/></proof>
    <transf name="unfold" proved="true" arg1="nodeP">
     <goal name="combineAux&#39;vc.76.0.5.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.76.0.5.0.0" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="13.73"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.76.0.5.0.1" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="13.80"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.76.0.6" expl="VC for combineAux" proved="true">
    <proof prover="5"><result status="valid" time="13.24"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.77" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.83" steps="475"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.78" expl=" index is in bounds" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.73" steps="454"/></proof>
  <proof prover="5"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.79" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.06" steps="374"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.80" expl="type invariant" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.09" steps="385793"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.11" steps="381"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.29" steps="68417"/></proof>
  <proof prover="5"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.81" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.29" steps="856"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.82" expl="type invariant" proved="true">
  <transf name="case" proved="true" arg1="(p = trees)">
   <goal name="combineAux&#39;vc.82.0" expl="true case (type invariant)" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.13" steps="388"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.82.1" expl="false case (type invariant)" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.56" steps="2315"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.83" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.23" steps="872"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.84" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.12" steps="576"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.85" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.66" steps="2313"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.86" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.27" steps="866"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.87" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.87.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.69" steps="373"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.87.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.70" steps="373"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.87.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.78" steps="373"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.87.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.70" steps="373"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.87.4" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.76" steps="373"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.87.5" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.74" steps="574"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.87.6" expl="type invariant" proved="true">
   <transf name="assert" proved="true" arg1="(hasNodeType s tmp)">
    <goal name="combineAux&#39;vc.87.6.0" expl="asserted formula" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.69" steps="373"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.87.6.1" expl="type invariant" proved="true">
    <transf name="instantiate" proved="true" arg1="Ensures4" arg2="i">
     <goal name="combineAux&#39;vc.87.6.1.0" expl="type invariant" proved="true">
     <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.73" steps="587"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="combineAux&#39;vc.87.7" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.74" steps="583"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.88" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="7.58" steps="16750"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.89" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.38" steps="7171"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.90" expl="type invariant" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.12" steps="430247"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.12" steps="387"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.39" steps="74625"/></proof>
  <proof prover="5"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.91" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.84" steps="4016"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.92" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.79" steps="3956"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.93" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.69" steps="3472"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.94" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.47" steps="915"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.95" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.53" steps="1293"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.96" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.60" steps="3507"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.97" expl="loop invariant init" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.97.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.97.0.0" expl="VC for combineAux" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="combineAux&#39;vc.97.0.0.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.97.0.0.0.0" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="11.71" steps="13291"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.97.0.0.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.06" steps="3525"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.97.0.0.0.2" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.28" steps="6081"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.97.0.0.0.3" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.62" steps="14691"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.97.0.0.0.4" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.94" steps="14691"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.97.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.80" steps="3100"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.97.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.87" steps="3249"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.97.0.3" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.77" steps="3193"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.97.0.4" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.78" steps="3208"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.97.0.5" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="16.77" steps="20510"/></proof>
    <proof prover="5"><result status="valid" time="9.27"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.97.0.6" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.01" steps="6742"/></proof>
    <proof prover="5"><result status="valid" time="9.80"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.98" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.11" steps="389"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.99" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.14" steps="390"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.100" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.13" steps="391"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.101" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.79" steps="663"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.102" expl="fst := trees.{i} ( index is in bounds)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.71" steps="598"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.103" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.81" steps="707"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.104" expl="snd := trees.{i + 1} ( index is in bounds)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.66" steps="607"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.105" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.89" steps="730"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.106" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.62" steps="449"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.107" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.92" steps="770"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.108" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.67" steps="453"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.109" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.93" steps="778"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.110" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.68" steps="457"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.111" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.63" steps="457"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.112" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.66" steps="551"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.113" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.61" steps="462"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.114" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.59" steps="462"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.115" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.56" steps="816"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.116" expl=" index is in bounds" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.29" steps="701"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.117" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.03" steps="564"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.118" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="2.88" steps="1180"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.119" expl="type invariant" proved="true">
  <transf name="case" proved="true" arg1="(p = trees)">
   <goal name="combineAux&#39;vc.119.0" expl="true case (type invariant)" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.09" steps="571"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.119.1" expl="false case (type invariant)" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.78" steps="2068"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.120" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="2.81" steps="991"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.121" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="2.88" steps="854"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.122" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.35" steps="2066"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.123" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="2.93" steps="1181"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.124" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.55" steps="1688"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.125" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.125.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="3.59" steps="3419"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.125.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="1.56" steps="552"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.125.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="2.08" steps="1577"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.125.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="1.56" steps="552"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.125.4" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.125.4.0" expl="true case (type invariant)" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="11.67" steps="30174"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.125.4.1" expl="false case (type invariant)" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="5.43" steps="12079"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.126" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.24" steps="3026"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.127" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.19" steps="570"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.128" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="18.92" steps="22288"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.129" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="14.37" steps="15485"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.130" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="14.72" steps="15756"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.131" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.61" steps="2070"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.132" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.97" steps="5358"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.133" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="9000"><result status="valid" time="2.30" steps="171249"/></proof>
  <proof prover="5"><result status="valid" time="17.16"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.134" expl="loop invariant preservation" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.134.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.134.0.0" expl="VC for combineAux" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="combineAux&#39;vc.134.0.0.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.134.0.0.0.0" expl="VC for combineAux" proved="true">
      <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures11">
       <goal name="combineAux&#39;vc.134.0.0.0.0.0" expl="VC for combineAux" proved="true">
       <transf name="split_premise_full" proved="true" >
        <goal name="combineAux&#39;vc.134.0.0.0.0.0.0" expl="VC for combineAux" proved="true">
        <proof prover="5"><result status="valid" time="24.71"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="combineAux&#39;vc.134.0.0.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.89" steps="8286"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.134.0.0.0.2" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="0.94"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.134.0.0.0.3" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="1.06"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.134.0.0.0.4" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="1.03"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.134.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.20" steps="7315"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.134.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.67" steps="7515"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.134.0.3" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.45" steps="7620"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.134.0.4" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.48" steps="7636"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.134.0.5" expl="VC for combineAux" proved="true">
    <proof prover="5"><result status="valid" time="27.93"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.134.0.6" expl="VC for combineAux" proved="true">
    <proof prover="5"><result status="valid" time="26.89"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.135" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.80" steps="570"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.136" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.83" steps="571"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.137" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.74" steps="572"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.138" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.60" steps="443"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.139" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.73" steps="670"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.140" expl="fst := trees.{j} ( index is in bounds)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.65" steps="605"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.141" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.70" steps="714"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.142" expl="snd := trees.{j + 2} ( index is in bounds)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.71" steps="614"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.143" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.74" steps="737"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.144" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.45" steps="456"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.145" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.76" steps="758"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.146" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.60" steps="460"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.147" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.82" steps="765"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.148" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.50" steps="464"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.149" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.53" steps="464"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.150" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.56" steps="559"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.151" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.53" steps="469"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.152" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.55" steps="469"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.153" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.69" steps="823"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.154" expl=" index is in bounds" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.54" steps="708"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.155" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.65" steps="569"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.156" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.70" steps="1186"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.157" expl="type invariant" proved="true">
  <transf name="case" proved="true" arg1="(p = trees)">
   <goal name="combineAux&#39;vc.157.0" expl="true case (type invariant)" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.67" steps="576"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.157.1" expl="false case (type invariant)" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.22" steps="2074"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.158" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.51" steps="996"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.159" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.69" steps="859"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.160" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="4.40" steps="2072"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.161" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="4.03" steps="1185"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.162" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.12" steps="1693"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.163" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.163.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="3.60" steps="3152"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.163.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="1.85" steps="557"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.163.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="2.19" steps="1583"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.163.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="1.85" steps="557"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.163.4" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.163.4.0" expl="true case (type invariant)" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="13.30" steps="32040"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.163.4.1" expl="false case (type invariant)" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="6.03" steps="12564"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.164" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.76" steps="3032"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.67" steps="90283"/></proof>
  <proof prover="5"><result status="valid" time="10.96"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.165" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.57" steps="575"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.166" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="20.75" steps="22320"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.167" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="16.33" steps="15528"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.168" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="16.23" steps="15174"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.169" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.19" steps="2080"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.170" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.84" steps="5373"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.171" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.68" steps="571"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.172" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.61" steps="572"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.173" expl="loop invariant init" proved="true">
  <proof prover="4" memlimit="9000"><result status="valid" time="2.24" steps="170482"/></proof>
  <proof prover="5"><result status="valid" time="16.10"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.174" expl="loop invariant init" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.174.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.174.0.0" expl="VC for combineAux" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="combineAux&#39;vc.174.0.0.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.174.0.0.0.0" expl="VC for combineAux" proved="true">
      <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures10">
       <goal name="combineAux&#39;vc.174.0.0.0.0.0" expl="VC for combineAux" proved="true">
       <proof prover="5"><result status="valid" time="29.24"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="combineAux&#39;vc.174.0.0.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.50" steps="8087"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.174.0.0.0.2" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="0.81"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.174.0.0.0.3" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="0.97"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.174.0.0.0.4" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="0.97"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.174.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.82" steps="7718"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.174.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.15" steps="7538"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.174.0.3" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.14" steps="7628"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.174.0.4" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.95" steps="7637"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.174.0.5" expl="VC for combineAux" proved="true">
    <proof prover="5"><result status="valid" time="24.11"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.174.0.6" expl="VC for combineAux" proved="true">
    <proof prover="5"><result status="valid" time="29.05"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.175" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.96" steps="989"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.176" expl="fst := trees.{j - 2} ( index is in bounds)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.59" steps="848"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.177" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.99" steps="1046"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.178" expl="snd := trees.{j} ( index is in bounds)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.59" steps="858"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.179" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.47" steps="1055"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.180" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.60" steps="633"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.181" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.04" steps="1087"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.182" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.86" steps="639"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.183" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.27" steps="1119"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.184" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.76" steps="643"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.185" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.04" steps="641"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.186" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.82" steps="774"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.187" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.82" steps="646"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.188" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.75" steps="646"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.189" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.11" steps="1148"/></proof>
  <proof prover="5"><result status="valid" time="2.77"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.190" expl=" index is in bounds" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.55" steps="952"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.191" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="8.50" steps="750"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.192" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="8.81" steps="1578"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.193" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.193.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.53" steps="734"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.193.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.46" steps="734"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.193.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.35" steps="734"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.193.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.37" steps="734"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.193.4" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.193.4.0" expl="true case (type invariant)" proved="true">
    <proof prover="4" memlimit="9000"><result status="valid" time="0.39" steps="66263"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.193.4.1" expl="false case (type invariant)" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="8.04" steps="9018"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.194" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="8.55" steps="1317"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.195" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="8.57" steps="1141"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.196" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="10.10" steps="2944"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.197" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="9.03" steps="1578"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.198" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.198.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.30" steps="734"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.198.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.33" steps="734"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.198.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.36" steps="734"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.198.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.36" steps="734"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.198.4" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.48" steps="734"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.198.5" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.60" steps="1145"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.198.6" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.198.6.0" expl="true case (type invariant)" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.27" steps="737"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.198.6.1" expl="false case (type invariant)" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.38" steps="1147"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="combineAux&#39;vc.198.7" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.34" steps="1145"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.199" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.199.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="13.14" steps="5856"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.199.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="3.93" steps="734"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.199.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="4.76" steps="2319"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.199.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="3.93" steps="734"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.199.4" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.199.4.0" expl="true case (type invariant)" proved="true">
    <transf name="instantiate" proved="true" arg1="Ensures3" arg2="i">
     <goal name="combineAux&#39;vc.199.4.0.0" expl="true case (type invariant)" proved="true">
     <proof prover="1"><result status="valid" time="7.10" steps="7550"/></proof>
     <proof prover="4" timelimit="45"><result status="valid" time="2.60" steps="214056"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.199.4.1" expl="false case (type invariant)" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="24.93" steps="38088"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.200" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="10.92" steps="4345"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.201" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="8.66" steps="756"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.202" expl="loop invariant preservation" proved="true">
  <proof prover="4" timelimit="45"><result status="valid" time="29.76" steps="2948217"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.203" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="31.82" steps="32812"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="17.00" steps="3015791"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.204" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="9000"><result status="valid" time="29.20" steps="1887027"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.205" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="9.28" steps="3101"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.206" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.14" steps="9004"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.207" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.93" steps="750"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.208" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.98" steps="751"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.209" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="9000"><result status="valid" time="3.69" steps="255998"/></proof>
  <proof prover="5"><result status="valid" time="31.30"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.210" expl="loop invariant preservation" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.210.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.210.0.0" expl="VC for combineAux" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="combineAux&#39;vc.210.0.0.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.210.0.0.0.0" expl="VC for combineAux" proved="true">
      <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="LoopInvariant7">
       <goal name="combineAux&#39;vc.210.0.0.0.0.0" expl="VC for combineAux" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="combineAux&#39;vc.210.0.0.0.0.0.0" expl="VC for combineAux" proved="true">
        <proof prover="4" memlimit="9000"><result status="valid" time="6.68" steps="424257"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="combineAux&#39;vc.210.0.0.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="30"><result status="valid" time="27.69" steps="17758"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.210.0.0.0.2" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="2.13"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.210.0.0.0.3" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="2.17"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.210.0.0.0.4" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="1.99"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.210.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="22.17" steps="15338"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.210.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="23.19" steps="14490"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.210.0.3" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="22.53" steps="17585"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.210.0.4" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="30"><result status="valid" time="23.62" steps="16647"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.210.0.5" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures11">
     <goal name="combineAux&#39;vc.210.0.5.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.210.0.5.0.0" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="28.66"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.210.0.6" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures11">
     <goal name="combineAux&#39;vc.210.0.6.0" expl="VC for combineAux" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="combineAux&#39;vc.210.0.6.0.0" expl="VC for combineAux" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="7.52" steps="445020"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.211" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.11" steps="989"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.212" expl="result := trees.{0} ( index is in bounds)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.14" steps="848"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.213" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.82" steps="631"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.214" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.38" steps="1657"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.215" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.05" steps="858"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.216" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.69" steps="1958"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.217" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.60" steps="1944"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.218" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.86" steps="1946"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.219" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.67" steps="1945"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.220" expl="write frame length" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.03" steps="1981"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.221" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.81" steps="631"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.222" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.72" steps="631"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.223" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.86" steps="635"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.224" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.70" steps="446"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.225" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.68" steps="446"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.226" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.68" steps="446"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.227" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.63" steps="447"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.228" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.67" steps="447"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.229" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.60" steps="439"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.230" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.55" steps="440"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.231" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.57" steps="441"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.232" expl="loop invariant init" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.232.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.232.0.0" expl="VC for combineAux" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="combineAux&#39;vc.232.0.0.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.232.0.0.0.0" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.17" steps="691"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.232.0.0.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.22" steps="2942"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.232.0.0.0.2" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.43" steps="6955"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.232.0.0.0.3" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.78" steps="6950"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.232.0.0.0.4" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.74" steps="6950"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.232.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.10" steps="647"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.232.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.13" steps="670"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.232.0.3" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.69" steps="2220"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.232.0.4" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.58" steps="2225"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.232.0.5" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.19" steps="675"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.232.0.6" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.10" steps="651"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.233" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.67" steps="738"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.234" expl="fst := trees.{j - 2} ( index is in bounds)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.46" steps="671"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.235" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.65" steps="790"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.236" expl="snd := trees.{j} ( index is in bounds)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.63" steps="681"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.237" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.84" steps="799"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.238" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.46" steps="507"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.239" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.78" steps="826"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.240" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.48" steps="513"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.241" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.92" steps="836"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.242" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.50" steps="517"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.243" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.52" steps="515"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.244" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.51" steps="621"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.245" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.42" steps="520"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.246" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.52" steps="520"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.247" expl="precondition" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.12" steps="519879"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.95" steps="893"/></proof>
  <proof prover="5"><result status="valid" time="1.48"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.248" expl=" index is in bounds" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.63" steps="774"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.249" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.01" steps="624"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.250" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="5.31" steps="1292"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.251" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.251.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.75" steps="610"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.251.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.61" steps="610"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.251.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.77" steps="610"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.251.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.73" steps="610"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.251.4" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.251.4.0" expl="true case (type invariant)" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.79" steps="617"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="0.35" steps="63447"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.251.4.1" expl="false case (type invariant)" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.78" steps="6010"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.252" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="5.19" steps="1097"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.253" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="5.15" steps="948"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.254" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="6.11" steps="2282"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.255" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="5.33" steps="1292"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.256" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.60" steps="1850"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.257" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.257.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="5.72" steps="4199"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.257.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="2.39" steps="610"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.257.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="3.10" steps="1761"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.257.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="2.40" steps="610"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.257.4" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.257.4.0" expl="true case (type invariant)" proved="true">
    <proof prover="1"><result status="valid" time="24.20" steps="49908"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.257.4.1" expl="false case (type invariant)" proved="true">
    <proof prover="1"><result status="valid" time="15.60" steps="17522"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.258" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.48" steps="3348"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.259" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.32" steps="630"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.260" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="9000"><result status="valid" time="15.31" steps="1625709"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.261" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="23.88" steps="19075"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.262" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="9000"><result status="valid" time="14.12" steps="849039"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.263" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.55" steps="2310"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.264" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.55" steps="5990"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.265" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.78" steps="624"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.266" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.80" steps="625"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.267" expl="loop invariant preservation" proved="true">
  <proof prover="4" memlimit="9000"><result status="valid" time="2.35" steps="184563"/></proof>
  <proof prover="5"><result status="valid" time="16.17"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.268" expl="loop invariant preservation" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.268.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.268.0.0" expl="VC for combineAux" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="combineAux&#39;vc.268.0.0.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.268.0.0.0.0" expl="VC for combineAux" proved="true">
      <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures11">
       <goal name="combineAux&#39;vc.268.0.0.0.0.0" expl="VC for combineAux" proved="true">
       <transf name="split_premise_full" proved="true" >
        <goal name="combineAux&#39;vc.268.0.0.0.0.0.0" expl="VC for combineAux" proved="true">
        <proof prover="5"><result status="valid" time="30.27"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="combineAux&#39;vc.268.0.0.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="11.80" steps="9800"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.268.0.0.0.2" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="1.27"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.268.0.0.0.3" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="1.37"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.268.0.0.0.4" expl="VC for combineAux" proved="true">
      <proof prover="5"><result status="valid" time="1.25"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.268.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.37" steps="10433"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.268.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="10.57" steps="9486"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.268.0.3" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.71" steps="10643"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.268.0.4" expl="VC for combineAux" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.23" steps="10671"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.268.0.5" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="nodeP">
     <goal name="combineAux&#39;vc.268.0.5.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.268.0.5.0.0" expl="VC for combineAux" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="35.31"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.268.0.5.0.1" expl="VC for combineAux" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="40.13"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.268.0.6" expl="VC for combineAux" proved="true">
    <proof prover="4" timelimit="45"><result status="valid" time="41.14" steps="4432049"/></proof>
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="24.93"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.269" expl="precondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.51" steps="733"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.270" expl="result := trees.{0} ( index is in bounds)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.35" steps="670"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.271" expl="postcondition" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.09" steps="429051"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.44" steps="504"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.46" steps="76476"/></proof>
  <proof prover="5"><result status="valid" time="0.14"/></proof>
  <transf name="inline_all" proved="true" >
   <goal name="combineAux&#39;vc.271.0" expl="postcondition" proved="true">
   <transf name="split_premise_full" proved="true" >
    <goal name="combineAux&#39;vc.271.0.0" expl="postcondition" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.25" steps="1217430"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="0.92" steps="191069"/></proof>
    <proof prover="5"><result status="valid" time="0.64"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.272" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.68" steps="1137"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.273" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.41" steps="684"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.274" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.99" steps="1433"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.275" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.82" steps="1415"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.276" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.82" steps="1417"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.277" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.87" steps="1434"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.278" expl="write frame length" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.06" steps="1415"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.279" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.38" steps="505"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.280" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.33" steps="505"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.281" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.46" steps="508"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="combine&#39;vc" expl="VC for combine" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="combine&#39;vc.0" expl="tmp := handle.sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="47"/></proof>
  </goal>
  <goal name="combine&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="34"/></proof>
  </goal>
  <goal name="combine&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="35"/></proof>
  </goal>
  <goal name="combine&#39;vc.3" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="combine&#39;vc.4" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="40"/></proof>
  </goal>
  <goal name="combine&#39;vc.5" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="42"/></proof>
  </goal>
  <goal name="combine&#39;vc.6" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="42"/></proof>
  </goal>
  <goal name="combine&#39;vc.7" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.02" steps="42"/></proof>
  </goal>
  <goal name="combine&#39;vc.8" expl="write frame length" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="40"/></proof>
  </goal>
  <goal name="combine&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="combine&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="combine&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="combine&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="37"/></proof>
  </goal>
  <goal name="combine&#39;vc.13" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="combine&#39;vc.14" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="combine&#39;vc.15" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="combine&#39;vc.16" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="combine&#39;vc.17" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="combine&#39;vc.18" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="combine&#39;vc.19" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="combine&#39;vc.20" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="combine&#39;vc.21" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="33"/></proof>
  </goal>
  <goal name="combine&#39;vc.22" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="33"/></proof>
  </goal>
  <goal name="combine&#39;vc.23" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.02" steps="86"/></proof>
  </goal>
  <goal name="combine&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="86"/></proof>
  </goal>
  <goal name="combine&#39;vc.25" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="89"/></proof>
  </goal>
  <goal name="combine&#39;vc.26" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="92"/></proof>
  </goal>
  <goal name="combine&#39;vc.27" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="94"/></proof>
  </goal>
  <goal name="combine&#39;vc.28" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="94"/></proof>
  </goal>
  <goal name="combine&#39;vc.29" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="94"/></proof>
  </goal>
  <goal name="combine&#39;vc.30" expl="write frame length" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="92"/></proof>
  </goal>
  <goal name="combine&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
  <goal name="combine&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
  <goal name="combine&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.02" steps="86"/></proof>
  </goal>
  <goal name="combine&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="deleteMin&#39;vc" expl="VC for deleteMin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="deleteMin&#39;vc.0" expl="result := findMin(self)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.1" expl="result := findMin(self)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.03" steps="18"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.2" expl="result := findMin(self)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.3" expl="result := findMin(self)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="30"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.4" expl="result := findMin(self)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="20"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.5" expl="result := findMin(self)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.6" expl="tmp := self.head" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="44"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.7" expl="tmp := tmp.child" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.03" steps="49"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.8" expl="sz := self.size" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.05" steps="117"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="140"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="247"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.24" steps="585"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="276"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="205"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="619"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="247"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.16" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.29" steps="594"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.17" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="588"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.85" steps="2791"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.17" steps="146"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.05" steps="144"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.06" steps="185"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.22" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.05" steps="149"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.23" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.24" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.25" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.26" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.27" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.05" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.28" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.29" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.30" expl="write frame head" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.24" steps="262"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.31" expl="write frame child" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.05" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.32" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.33" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.34" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.14" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.35" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.36" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.03" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.37" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.38" expl="write frame size" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.25" steps="268"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.39" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.40" expl="write frame length" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.41" expl="write frame key" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.14" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.42" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.43" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.44" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.45" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.46" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.47" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.21" steps="203"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.48" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.49" steps="1238"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.16" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.50" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.14" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.51" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.09" steps="160"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.52" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.66" steps="29303"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.53" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="38"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.54" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="38"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.55" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.06" steps="146"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.56" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="40"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.57" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="40"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.58" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.09" steps="357"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.59" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="42"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.60" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="42"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.61" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="42"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.62" expl="sz := self.size" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.20" steps="189"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.63" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.29" steps="195"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.64" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="315"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.65" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.41" steps="694"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.66" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="322"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.67" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="271"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.68" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="694"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.69" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.33" steps="315"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.70" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.47" steps="773"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.71" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="1338"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.72" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.73" steps="7398"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.73" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.30" steps="201"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.74" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.27" steps="199"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.75" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.40" steps="417"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.76" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.31" steps="268"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.77" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.29" steps="210"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.78" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.79" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.80" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.81" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.26" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.82" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.30" steps="210"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.83" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.18" steps="210"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.84" expl="write frame head" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.41" steps="323"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.85" expl="write frame child" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.31" steps="210"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.86" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.87" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.88" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.26" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.89" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.90" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.26" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.91" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.92" expl="write frame size" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.40" steps="331"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.93" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.94" expl="write frame length" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.32" steps="210"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.95" expl="write frame key" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.26" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.96" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.97" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.28" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.98" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.99" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.100" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.101" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.34" steps="279"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.102" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.19" steps="3188"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.103" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.30" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.104" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.27" steps="208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.105" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.14" steps="215"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.106" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="deleteMin&#39;vc.106.0" expl="VC for deleteMin" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="deleteMin&#39;vc.106.0.0" expl="VC for deleteMin" proved="true">
    <proof prover="5"><result status="valid" time="18.29"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.106.0.1" expl="VC for deleteMin" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="22.36" steps="8637"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.106.0.2" expl="VC for deleteMin" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="13.25" steps="3526"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.106.0.3" expl="VC for deleteMin" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="22.23" steps="8710"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.106.0.4" expl="VC for deleteMin" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="23.20" steps="8983"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.106.0.5" expl="VC for deleteMin" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="8.30"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.106.0.6" expl="VC for deleteMin" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.81" steps="4182"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="decreaseKey&#39;vc" expl="VC for decreaseKey" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decreaseKey&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.1" expl="tmp := self.head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="105"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.23" steps="52654"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.2" expl="tmp := handle.sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="114"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.23" steps="52885"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.3" expl="pos := handle.prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="123"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.24" steps="53399"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.4" expl="tmp := handle.prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.16" steps="186"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.47" steps="68052"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.5" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.41" steps="1018"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.6" expl="pos := tmp.child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.21" steps="898"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.33" steps="62049"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.7" expl="pos := handle.sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.07" steps="205"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.25" steps="56231"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.23" steps="216"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.36" steps="54954"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.35" steps="679"/></proof>
  <proof prover="5"><result status="valid" time="1.08"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.23" steps="337"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.34" steps="679"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.15" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.15.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.40" steps="755"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.15.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.38" steps="761"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.15.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.26" steps="216"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.15.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.38" steps="4477"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.15.4" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.24" steps="216"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.15.5" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.25" steps="278"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.15.6" expl="type invariant" proved="true">
   <proof prover="4" memlimit="9000"><result status="valid" time="1.04" steps="108220"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.15.7" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.37" steps="9273"/></proof>
   <proof prover="4" memlimit="9000"><result status="valid" time="0.95" steps="107046"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.16" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.35" steps="689"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.17" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.57" steps="1316"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.25" steps="222"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.47" steps="61198"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.19" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.24" steps="226"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.27" steps="47767"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.20" expl="pos := self.head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.46" steps="345"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.45" steps="61312"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.21" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.54" steps="959"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.65" steps="79121"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.42" steps="275"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.36" steps="57549"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.23" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="448"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.24" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.60" steps="957"/></proof>
  <proof prover="5"><result status="valid" time="1.30"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.25" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="451"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.26" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="373"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.27" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="957"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.28" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="447"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.29" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.80" steps="8953"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.30" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="967"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.31" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.27" steps="2750"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.58" steps="72404"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.32" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.44" steps="281"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.53" steps="64787"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.33" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.42" steps="281"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.23" steps="58250"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.34" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.41" steps="281"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.12" steps="45044"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.35" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.55" steps="592"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.41" steps="60020"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.36" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.40" steps="283"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.12" steps="45058"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.37" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.42" steps="368"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.36" steps="58404"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.38" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.40" steps="285"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.12" steps="45072"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.39" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.39" steps="285"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.18" steps="51229"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.40" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.53" steps="384"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.67" steps="84553"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.41" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.44" steps="2551"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.99" steps="100488"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.42" expl="tmp := link(self,pos,handle)" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.42.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.42.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="decreaseKey&#39;vc.42.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.42.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
       <goal name="decreaseKey&#39;vc.42.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="decreaseKey&#39;vc.42.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="15.09" steps="6154"/></proof>
        <proof prover="4" memlimit="9000"><result status="valid" time="9.55" steps="715094"/></proof>
        <proof prover="5"><result status="valid" time="8.95"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="decreaseKey&#39;vc.42.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.15" steps="2731"/></proof>
      <proof prover="4" memlimit="9000"><result status="valid" time="0.83" steps="97593"/></proof>
      <proof prover="5"><result status="valid" time="2.69"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.42.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="7.01" steps="402749"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.42.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="10.81" steps="763499"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.42.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="9.74" steps="670808"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.42.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.98" steps="2401"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.42.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.99" steps="2461"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.42.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.06" steps="2614"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.42.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.08" steps="2651"/></proof>
    <proof prover="5"><result status="valid" time="0.16"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.42.0.5" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
     <goal name="decreaseKey&#39;vc.42.0.5.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="decreaseKey&#39;vc.42.0.5.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="decreaseKey&#39;vc.42.0.5.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.42.0.5.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="4" memlimit="9000"><result status="valid" time="13.66" steps="1132009"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.42.0.5.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="16.95" steps="8036"/></proof>
        <proof prover="4" memlimit="9000"><result status="valid" time="7.04" steps="731184"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.42.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.70" steps="6011"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="1.54" steps="154376"/></proof>
    <proof prover="5"><result status="valid" time="5.31"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.43" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.04" steps="389"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.25" steps="63997"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.44" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.15" steps="693"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.45" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.47" steps="1315"/></proof>
  <proof prover="5"><result status="valid" time="4.40"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.46" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="628"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.47" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="548"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.48" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.43" steps="1315"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.49" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="693"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.50" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.42" steps="1197"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.69" steps="80127"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.51" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.47" steps="1335"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.52" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="21.01" steps="32754"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.53" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.07" steps="395"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.57" steps="72324"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.54" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.99" steps="391"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.12" steps="46703"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.55" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.08" steps="397"/></proof>
  <proof prover="5"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.56" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.93" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.57" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.58" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.96" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.59" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.07" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.60" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.40" steps="647"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.61" expl="write frame prev" proved="true">
  <proof prover="4" memlimit="9000"><result status="valid" time="2.71" steps="194173"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.62" expl="write frame head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.42" steps="638"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.63" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.35" steps="650"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.64" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.65" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.66" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.04" steps="397"/></proof>
  <proof prover="5"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.67" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.94" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.68" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.01" steps="397"/></proof>
  <proof prover="5"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.69" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.99" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.70" expl="write frame size" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.00" steps="397"/></proof>
  <proof prover="5"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.71" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.72" expl="write frame length" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.00" steps="397"/></proof>
  <proof prover="5"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.73" expl="write frame key" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.45" steps="653"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.74" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.97" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.75" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.76" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.01" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.77" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.96" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.78" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.04" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.79" expl="postcondition" proved="true">
  <proof prover="4" memlimit="9000"><result status="valid" time="2.53" steps="209885"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.80" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.01" steps="397"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.31" steps="55139"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.81" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.81.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.81.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="decreaseKey&#39;vc.81.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.81.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures18">
       <goal name="decreaseKey&#39;vc.81.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="decreaseKey&#39;vc.81.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="4" memlimit="9000"><result status="valid" time="4.18" steps="321420"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="decreaseKey&#39;vc.81.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.20" steps="4810"/></proof>
      <proof prover="4" memlimit="9000"><result status="valid" time="1.23" steps="125287"/></proof>
      <proof prover="5"><result status="valid" time="5.44"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.81.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="5"><result status="valid" time="0.57"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.81.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="16.87" steps="17224"/></proof>
      <proof prover="5"><result status="valid" time="0.59"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.81.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="16.97" steps="17527"/></proof>
      <proof prover="5"><result status="valid" time="0.57"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.81.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.76" steps="4586"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.81.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.01" steps="5015"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.81.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.94" steps="5432"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.81.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.94" steps="5053"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.81.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="5"><result status="valid" time="24.55"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.81.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="4" memlimit="9000"><result status="valid" time="6.39" steps="513566"/></proof>
    <proof prover="5"><result status="valid" time="23.35"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.82" expl="pos := handle.sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.07" steps="204"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.37" steps="56193"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.83" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.89" steps="1414"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="2.23" steps="164568"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.84" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.24" steps="218"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.26" steps="58176"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.85" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.22" steps="220"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.22" steps="55783"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.86" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="292"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.87" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.35" steps="697"/></proof>
  <proof prover="5"><result status="valid" time="1.26"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.88" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.89" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="285"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.90" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.37" steps="697"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.91" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="292"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.92" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="10.83" steps="23032"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.93" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.37" steps="707"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.94" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.53" steps="1232"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.57" steps="71491"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.95" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.26" steps="226"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.48" steps="62205"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.96" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.46" steps="943"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.58" steps="67961"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.97" expl="pos := self.head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.48" steps="354"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.49" steps="62906"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.98" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.60" steps="1095"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.70" steps="81932"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.99" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.39" steps="279"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.27" steps="58377"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.100" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="461"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.101" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.59" steps="990"/></proof>
  <proof prover="5"><result status="valid" time="2.45"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.102" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="463"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.103" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="382"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.104" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="990"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.105" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="460"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.106" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="11.84" steps="22132"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.107" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="1000"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.108" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.08" steps="2019"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.63" steps="74959"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.109" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.42" steps="285"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.50" steps="65931"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.110" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.42" steps="285"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.26" steps="59116"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.111" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.40" steps="285"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.13" steps="45125"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.112" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.56" steps="617"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.42" steps="60975"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.113" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.38" steps="287"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.14" steps="45139"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.114" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.42" steps="376"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.26" steps="59270"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.115" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.39" steps="289"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.13" steps="45153"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.116" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.38" steps="289"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.20" steps="51334"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.117" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.53" steps="393"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.66" steps="87770"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.118" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.91" steps="3067"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="1.06" steps="105268"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.119" expl="tmp := link(self,pos,handle)" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.119.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.119.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="decreaseKey&#39;vc.119.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.119.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="5"><result status="valid" time="32.82"/></proof>
      <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
       <goal name="decreaseKey&#39;vc.119.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="decreaseKey&#39;vc.119.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="4" memlimit="9000"><result status="valid" time="10.45" steps="782773"/></proof>
        <proof prover="5"><result status="valid" time="12.84"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="decreaseKey&#39;vc.119.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.60" steps="3119"/></proof>
      <proof prover="4" memlimit="9000"><result status="valid" time="0.91" steps="101204"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.119.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="9.30" steps="715550"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.119.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="9.37" steps="771965"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.119.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="6.89" steps="416638"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.119.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.22" steps="2954"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.119.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.14" steps="2793"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.119.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.25" steps="3024"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.119.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.22" steps="3016"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.119.0.5" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
     <goal name="decreaseKey&#39;vc.119.0.5.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="decreaseKey&#39;vc.119.0.5.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="decreaseKey&#39;vc.119.0.5.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.119.0.5.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="4" memlimit="9000"><result status="valid" time="14.95" steps="1216004"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.119.0.5.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="4" memlimit="9000"><result status="valid" time="8.15" steps="805787"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.119.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="4" memlimit="9000"><result status="valid" time="1.57" steps="162570"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.120" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.01" steps="393"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.39" steps="64886"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.121" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.22" steps="709"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.122" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.43" steps="1357"/></proof>
  <proof prover="5"><result status="valid" time="5.41"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.123" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.22" steps="641"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.124" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.15" steps="559"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.125" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.57" steps="1357"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.126" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.21" steps="709"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.127" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.33" steps="1034"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.57" steps="83142"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.128" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.65" steps="1377"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.129" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.129.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.74" steps="387"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.129.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.73" steps="387"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.129.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.73" steps="387"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.129.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="2.05" steps="2703"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.129.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="43.75" steps="63487"/></proof>
   <proof prover="4" timelimit="45"><result status="valid" time="10.32" steps="924741"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.129.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.77" steps="572"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.129.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.90" steps="613"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.130" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.12" steps="399"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.61" steps="73428"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.131" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.03" steps="395"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.11" steps="46784"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.132" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.03" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.133" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.10" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.134" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.04" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.135" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.10" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.136" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.04" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.137" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.07" steps="3660"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.138" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.41" steps="658"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.139" expl="write frame head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.34" steps="648"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.140" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.15" steps="405"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.141" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.142" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.08" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.143" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.98" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.144" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.03" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.145" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.05" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.146" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.02" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.147" expl="write frame size" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.98" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.148" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.08" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.149" expl="write frame length" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.08" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.150" expl="write frame key" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.49" steps="663"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.151" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.04" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.152" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.03" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.153" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.11" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.154" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.155" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="401"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.156" expl="postcondition" proved="true">
  <proof prover="4" memlimit="9000"><result status="valid" time="2.52" steps="217584"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.157" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.09" steps="401"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.32" steps="55273"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.158" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.158.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.158.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="decreaseKey&#39;vc.158.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.158.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures18">
       <goal name="decreaseKey&#39;vc.158.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="decreaseKey&#39;vc.158.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="4" memlimit="9000"><result status="valid" time="4.32" steps="321612"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="decreaseKey&#39;vc.158.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="1.31" steps="130571"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.158.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="5"><result status="valid" time="0.63"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.158.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="21.38" steps="19131"/></proof>
      <proof prover="5"><result status="valid" time="0.51"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.158.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="5"><result status="valid" time="0.64"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.158.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.08" steps="5111"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.158.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.35" steps="5524"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.158.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.13" steps="5993"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.158.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.30" steps="5567"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.158.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="5"><result status="valid" time="26.26"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.158.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="4" memlimit="9000"><result status="valid" time="6.23" steps="523321"/></proof>
    <proof prover="5"><result status="valid" time="24.31"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.159" expl="pos := self.head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.25" steps="253"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.39" steps="58993"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.160" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.29" steps="531"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.45" steps="67500"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.161" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.22" steps="210"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.25" steps="56089"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.162" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="283"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.163" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.31" steps="658"/></proof>
  <proof prover="5"><result status="valid" time="1.05"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.164" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.28" steps="331"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.165" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="276"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.166" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.35" steps="658"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.167" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.28" steps="283"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.168" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.01" steps="6478"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.169" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.35" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.170" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.57" steps="1181"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.171" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.25" steps="216"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.45" steps="62087"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.172" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.23" steps="216"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.23" steps="56717"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.173" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.21" steps="216"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.12" steps="44198"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.174" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.32" steps="429"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.25" steps="57960"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.175" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.22" steps="218"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.11" steps="44212"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.176" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.25" steps="277"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.22" steps="56893"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.177" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.21" steps="220"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.11" steps="44226"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.178" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.23" steps="220"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.21" steps="51340"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.179" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.30" steps="289"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.55" steps="77338"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.180" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.73" steps="1579"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.72" steps="85323"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.181" expl="tmp := link(self,pos,handle)" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.181.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.181.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="decreaseKey&#39;vc.181.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.181.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="22.69" steps="1558979"/></proof>
      <proof prover="5"><result status="valid" time="27.18"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.181.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.67" steps="1843"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.181.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="6.88" steps="374126"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.181.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="6.75" steps="369639"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.181.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="1.20" steps="123065"/></proof>
      <proof prover="5"><result status="valid" time="0.20"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.181.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.64" steps="1709"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.181.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.47" steps="1077"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.181.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.62" steps="1761"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.181.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.62" steps="1756"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.181.0.5" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
     <goal name="decreaseKey&#39;vc.181.0.5.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="decreaseKey&#39;vc.181.0.5.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="decreaseKey&#39;vc.181.0.5.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.181.0.5.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="4" memlimit="9000"><result status="valid" time="7.85" steps="670874"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.181.0.5.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.35" steps="3687"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.181.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.81" steps="2808"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.182" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.61" steps="324"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.26" steps="62655"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.183" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="565"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.184" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.89" steps="1037"/></proof>
  <proof prover="5"><result status="valid" time="3.03"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.185" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="518"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.186" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="451"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.187" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.96" steps="1037"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.188" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="566"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.189" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.85" steps="831"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.49" steps="78421"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.190" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="1057"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.191" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="10.08" steps="19478"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.192" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.68" steps="330"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.54" steps="70533"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.193" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.61" steps="326"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.13" steps="45857"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.194" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.64" steps="332"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.19" steps="52129"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.195" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.196" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.197" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.198" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.62" steps="332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.199" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.93" steps="530"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.68" steps="82141"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.200" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="9.51" steps="8864"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="4.14" steps="244443"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.201" expl="write frame head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.89" steps="523"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="1.47" steps="139279"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.202" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.67" steps="336"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.40" steps="69813"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.203" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.204" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.205" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.60" steps="332"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.20" steps="54155"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.206" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.207" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.61" steps="332"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.30" steps="54248"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.208" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.209" expl="write frame size" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.63" steps="332"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.20" steps="54294"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.210" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.211" expl="write frame length" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.63" steps="332"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.19" steps="54383"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.212" expl="write frame key" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.92" steps="537"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.75" steps="87642"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.213" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.214" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.215" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.216" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.217" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.218" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.26" steps="6334"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="1.89" steps="168359"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.219" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.65" steps="332"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.20" steps="55256"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.220" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.220.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.220.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="decreaseKey&#39;vc.220.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.220.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="16.94" steps="23398"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.220.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.04" steps="3925"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.220.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="8.40" steps="9705"/></proof>
      <proof prover="5"><result status="valid" time="0.50"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.220.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="11.41" steps="12421"/></proof>
      <proof prover="5"><result status="valid" time="0.53"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.220.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="8.04" steps="7728"/></proof>
      <proof prover="5"><result status="valid" time="0.53"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.220.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.90" steps="3425"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.220.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.33" steps="5839"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.220.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.87" steps="4089"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.220.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.03" steps="5884"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.220.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="10.29" steps="18845"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.220.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.71" steps="7369"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.221" expl="tmp := handle.prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.06" steps="124"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.24" steps="54917"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.222" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.17" steps="577"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.58" steps="73714"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.223" expl="pos := tmp.child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.11" steps="377"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.27" steps="56125"/></proof>
  <proof prover="5"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.224" expl="pos := handle.sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.06" steps="144"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.26" steps="56322"/></proof>
  <proof prover="5"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.225" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.06" steps="163"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.24" steps="55291"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.226" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="265"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.227" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.26" steps="588"/></proof>
  <proof prover="5"><result status="valid" time="0.90"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.228" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="274"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.229" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="226"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.230" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="588"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.231" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="233"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.232" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.69" steps="4760"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.233" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.34" steps="850"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.234" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.59" steps="1465"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.235" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.07" steps="169"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.46" steps="61719"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.236" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="173"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.17" steps="48414"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.237" expl="pos := self.head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.32" steps="279"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.32" steps="61723"/></proof>
  <proof prover="5"><result status="valid" time="0.35"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.238" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.41" steps="832"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.55" steps="73094"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.239" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.29" steps="222"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.37" steps="57933"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.240" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.36" steps="380"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.241" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.48" steps="958"/></proof>
  <proof prover="5"><result status="valid" time="1.08"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.242" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.36" steps="463"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.243" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.33" steps="317"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.244" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="960"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.245" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.37" steps="379"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.246" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.68" steps="8876"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.247" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="970"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.248" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.248.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.27" steps="220"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.248.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.26" steps="220"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.248.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.15" steps="220"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.248.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.26" steps="220"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.248.4" expl="type invariant" proved="true">
   <proof prover="4" memlimit="9000"><result status="valid" time="0.37" steps="66435"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.248.5" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.29" steps="321"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.248.6" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.34" steps="343"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.249" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.32" steps="228"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.48" steps="64973"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.250" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.29" steps="228"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.23" steps="58798"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.251" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.26" steps="228"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.12" steps="44540"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.252" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.42" steps="519"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.29" steps="60854"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.253" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.27" steps="230"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.12" steps="44554"/></proof>
  <proof prover="5"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.254" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.29" steps="302"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.38" steps="58974"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.255" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.27" steps="232"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.13" steps="44568"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.256" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.26" steps="232"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.19" steps="51877"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.257" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.41" steps="318"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.60" steps="82074"/></proof>
  <proof prover="5"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.258" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.29" steps="2388"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.85" steps="92555"/></proof>
  <proof prover="5"><result status="valid" time="2.44"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.259" expl="tmp := link(self,pos,handle)" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.259.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.259.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="decreaseKey&#39;vc.259.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.259.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="5"><result status="valid" time="18.29"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.259.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.13" steps="2603"/></proof>
      <proof prover="5"><result status="valid" time="0.18"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.259.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="6.13" steps="379832"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.259.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="6.09" steps="373364"/></proof>
      <proof prover="5"><result status="valid" time="0.37"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.259.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="6.21" steps="379959"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.259.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.59" steps="1555"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="0.62" steps="87804"/></proof>
    <proof prover="5"><result status="valid" time="0.16"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.259.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.13" steps="450301"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.58" steps="1501"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="0.69" steps="91335"/></proof>
    <proof prover="5"><result status="valid" time="0.14"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.259.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.13" steps="439213"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.91" steps="2459"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="0.64" steps="92048"/></proof>
    <proof prover="5"><result status="valid" time="0.16"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.259.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.14" steps="444925"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.86" steps="2506"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="0.66" steps="88115"/></proof>
    <proof prover="5"><result status="valid" time="0.15"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.259.0.5" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
     <goal name="decreaseKey&#39;vc.259.0.5.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="decreaseKey&#39;vc.259.0.5.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="decreaseKey&#39;vc.259.0.5.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.259.0.5.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="4" memlimit="9000"><result status="valid" time="9.42" steps="748156"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.259.0.5.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="15.28" steps="6635"/></proof>
        <proof prover="4" memlimit="9000"><result status="valid" time="4.79" steps="465510"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.259.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.63" steps="5746"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="1.32" steps="136118"/></proof>
    <proof prover="5"><result status="valid" time="4.11"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.260" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.79" steps="336"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.39" steps="64530"/></proof>
  <proof prover="5"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.261" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="623"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.262" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.22" steps="1221"/></proof>
  <proof prover="5"><result status="valid" time="3.15"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.263" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.93" steps="569"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.264" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.86" steps="492"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.265" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.25" steps="1221"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.266" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="623"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.267" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.19" steps="1109"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.66" steps="80268"/></proof>
  <proof prover="5"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.268" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.32" steps="1241"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.269" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="27.76" steps="38432"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.270" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.83" steps="342"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.58" steps="73312"/></proof>
  <proof prover="5"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.271" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.76" steps="338"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.13" steps="46199"/></proof>
  <proof prover="5"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.272" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.79" steps="344"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.30" steps="52665"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.273" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.83" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.274" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.82" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.275" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.86" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.276" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.80" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.277" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.11" steps="580"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.68" steps="84037"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.278" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.83" steps="348"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.45" steps="70724"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.279" expl="write frame head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.13" steps="571"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="1.54" steps="141735"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.280" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.20" steps="583"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.74" steps="86827"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.281" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.282" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.283" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.74" steps="344"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.31" steps="54684"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.284" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.82" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.285" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.78" steps="344"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.18" steps="54780"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.286" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.85" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.287" expl="write frame size" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.78" steps="344"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.29" steps="54826"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.288" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.82" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.289" expl="write frame length" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.79" steps="344"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.19" steps="54915"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.290" expl="write frame key" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.11" steps="586"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.73" steps="90835"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.291" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.85" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.292" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.83" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.293" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.85" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.294" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.83" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.295" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.87" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.296" expl="postcondition" proved="true">
  <proof prover="4" memlimit="9000"><result status="valid" time="1.64" steps="162886"/></proof>
  <proof prover="5"><result status="valid" time="5.85"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.297" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.75" steps="344"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.20" steps="55788"/></proof>
  <proof prover="5"><result status="valid" time="3.69"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.298" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.298.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.298.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="decreaseKey&#39;vc.298.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.298.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures18">
       <goal name="decreaseKey&#39;vc.298.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_full" proved="true" >
        <goal name="decreaseKey&#39;vc.298.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="4" memlimit="9000"><result status="valid" time="5.09" steps="398109"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="decreaseKey&#39;vc.298.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.90" steps="5011"/></proof>
      <proof prover="4" memlimit="9000"><result status="valid" time="1.15" steps="119757"/></proof>
      <proof prover="5"><result status="valid" time="0.38"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.298.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="13.28" steps="11475"/></proof>
      <proof prover="5"><result status="valid" time="0.40"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.298.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.85" steps="10329"/></proof>
      <proof prover="5"><result status="valid" time="0.37"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.298.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="13.02" steps="12156"/></proof>
      <proof prover="5"><result status="valid" time="0.57"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.298.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.44" steps="4424"/></proof>
    <proof prover="5"><result status="valid" time="0.20"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.298.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.77" steps="4830"/></proof>
    <proof prover="5"><result status="valid" time="9.18"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.298.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.57" steps="5237"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.298.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.81" steps="4868"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.298.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="5"><result status="valid" time="16.01"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.298.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="5"><result status="valid" time="15.87"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.299" expl="pos := handle.sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.06" steps="143"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.25" steps="56285"/></proof>
  <proof prover="5"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.300" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.12" steps="387"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.43" steps="70455"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.301" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.06" steps="165"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.23" steps="58451"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.302" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.07" steps="167"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.36" steps="56131"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.303" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="236"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.304" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.15" steps="595"/></proof>
  <proof prover="5"><result status="valid" time="1.26"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.305" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="277"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.306" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="229"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.307" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="595"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.308" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.20" steps="236"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.309" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.46" steps="4503"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.310" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.35" steps="852"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.311" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.45" steps="1092"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.40" steps="70938"/></proof>
  <proof prover="5"><result status="valid" time="2.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.312" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.08" steps="173"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.45" steps="62768"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.313" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.31" steps="742"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.48" steps="66275"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.314" expl="pos := self.head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.33" steps="287"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.47" steps="63291"/></proof>
  <proof prover="5"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.315" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.39" steps="845"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.57" steps="75868"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.316" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.28" steps="226"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.35" steps="58771"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.317" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.38" steps="387"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.318" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.47" steps="874"/></proof>
  <proof prover="5"><result status="valid" time="1.76"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.319" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.36" steps="391"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.320" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.34" steps="323"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.321" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="874"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.322" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.37" steps="386"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.323" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.79" steps="11334"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.324" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="884"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.325" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.79" steps="1575"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.55" steps="74750"/></proof>
  <proof prover="5"><result status="valid" time="1.90"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.326" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.30" steps="232"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.49" steps="66109"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.327" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.27" steps="232"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.25" steps="59674"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.328" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.25" steps="232"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.12" steps="44621"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.329" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.42" steps="538"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.32" steps="61881"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.330" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.26" steps="234"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.13" steps="44635"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.331" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.30" steps="309"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.27" steps="59850"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.332" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.26" steps="236"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.13" steps="44649"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.333" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.25" steps="236"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.21" steps="51982"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.334" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.38" steps="330"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.67" steps="84410"/></proof>
  <proof prover="5"><result status="valid" time="0.37"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.335" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.22" steps="2427"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.91" steps="96456"/></proof>
  <proof prover="5"><result status="valid" time="3.50"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.336" expl="tmp := link(self,pos,handle)" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.336.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.336.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="decreaseKey&#39;vc.336.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.336.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="5"><result status="valid" time="22.81"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.336.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.01" steps="2633"/></proof>
      <proof prover="4" memlimit="9000"><result status="valid" time="0.81" steps="96412"/></proof>
      <proof prover="5"><result status="valid" time="0.16"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.336.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="9.06" steps="708683"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.336.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="1.33" steps="133942"/></proof>
      <proof prover="5"><result status="valid" time="0.28"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.336.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="1.30" steps="133982"/></proof>
      <proof prover="5"><result status="valid" time="0.30"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.336.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.93" steps="2440"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.336.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.57" steps="1400"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.336.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.92" steps="2511"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.336.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.91" steps="2500"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.336.0.5" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
     <goal name="decreaseKey&#39;vc.336.0.5.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="decreaseKey&#39;vc.336.0.5.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="decreaseKey&#39;vc.336.0.5.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.336.0.5.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="4" memlimit="9000"><result status="valid" time="9.20" steps="777607"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.336.0.5.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="15.74" steps="7635"/></proof>
        <proof prover="4" memlimit="9000"><result status="valid" time="5.12" steps="487377"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.336.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="13.65" steps="6420"/></proof>
    <proof prover="5"><result status="valid" time="5.23"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.337" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.86" steps="340"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.41" steps="65418"/></proof>
  <proof prover="5"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.338" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="634"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.339" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.24" steps="1251"/></proof>
  <proof prover="5"><result status="valid" time="3.63"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.340" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.99" steps="578"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.341" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="500"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.342" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.30" steps="1251"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.343" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="634"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.344" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.13" steps="953"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.68" steps="82486"/></proof>
  <proof prover="5"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.345" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.32" steps="1271"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.346" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="21.72" steps="30349"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.347" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.88" steps="346"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.60" steps="74523"/></proof>
  <proof prover="5"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.348" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.74" steps="342"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.12" steps="46280"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.349" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.76" steps="348"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.30" steps="52799"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.350" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.82" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.351" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.82" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.352" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.353" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.78" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.354" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.67" steps="2827"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="1.68" steps="160893"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.355" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.85" steps="352"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.42" steps="72087"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.356" expl="write frame head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.17" steps="580"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="1.60" steps="147578"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.357" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.88" steps="352"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.44" steps="72852"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.358" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.359" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.82" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.360" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.78" steps="348"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.20" steps="54786"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.361" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.362" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.81" steps="348"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.20" steps="54914"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.363" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.83" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.364" expl="write frame size" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.76" steps="348"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.18" steps="54960"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.365" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.82" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.366" expl="write frame length" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.86" steps="348"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.19" steps="55049"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.367" expl="write frame key" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.11" steps="595"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.80" steps="93725"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.368" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.369" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.370" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.371" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.372" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.373" expl="postcondition" proved="true">
  <proof prover="4" memlimit="9000"><result status="valid" time="1.63" steps="164672"/></proof>
  <proof prover="5"><result status="valid" time="7.40"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.374" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.82" steps="348"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.20" steps="55922"/></proof>
  <proof prover="5"><result status="valid" time="4.37"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.375" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.375.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.375.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="decreaseKey&#39;vc.375.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.375.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures18">
       <goal name="decreaseKey&#39;vc.375.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="decreaseKey&#39;vc.375.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="4" memlimit="9000"><result status="valid" time="3.11" steps="266226"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="decreaseKey&#39;vc.375.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.07" steps="5073"/></proof>
      <proof prover="5"><result status="valid" time="0.20"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.375.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="13.46" steps="11539"/></proof>
      <proof prover="5"><result status="valid" time="0.47"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.375.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.58" steps="10381"/></proof>
      <proof prover="5"><result status="valid" time="0.58"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.375.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.70" steps="10381"/></proof>
      <proof prover="5"><result status="valid" time="0.62"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.375.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.61" steps="4479"/></proof>
    <proof prover="5"><result status="valid" time="0.37"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.375.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.06" steps="4883"/></proof>
    <proof prover="5"><result status="valid" time="14.24"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.375.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.67" steps="5307"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.375.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.86" steps="4921"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.375.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="5"><result status="valid" time="17.19"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.375.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="4" memlimit="9000"><result status="valid" time="4.56" steps="399184"/></proof>
    <proof prover="5"><result status="valid" time="15.24"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.376" expl="pos := self.head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.06" steps="192"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.26" steps="57270"/></proof>
  <proof prover="5"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.377" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.10" steps="494"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.44" steps="63672"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.378" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.06" steps="158"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.24" steps="54856"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.379" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="229"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.380" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.15" steps="566"/></proof>
  <proof prover="5"><result status="valid" time="0.74"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.381" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="268"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.382" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="222"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.383" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="566"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.384" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="229"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.385" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.03" steps="3089"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.386" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="577"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.387" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.49" steps="1383"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.388" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.06" steps="164"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.41" steps="60686"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.389" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.06" steps="164"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.25" steps="55468"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.390" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="164"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.12" steps="43733"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.391" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.23" steps="363"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.25" steps="56611"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.392" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="166"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.12" steps="43747"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.393" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.07" steps="216"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.21" steps="55624"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.394" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.06" steps="168"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.12" steps="43761"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.395" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="168"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.20" steps="50700"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.396" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.20" steps="228"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.50" steps="72627"/></proof>
  <proof prover="5"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.397" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.63" steps="1465"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.64" steps="78586"/></proof>
  <proof prover="5"><result status="valid" time="1.68"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.398" expl="tmp := link(self,pos,handle)" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.398.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.398.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="decreaseKey&#39;vc.398.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.398.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="16.39" steps="1225688"/></proof>
      <proof prover="5"><result status="valid" time="13.91"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.398.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.52" steps="1731"/></proof>
      <proof prover="4" memlimit="9000"><result status="valid" time="0.66" steps="82491"/></proof>
      <proof prover="5"><result status="valid" time="0.13"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.398.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="4.76" steps="277448"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.398.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="0.94" steps="111547"/></proof>
      <proof prover="5"><result status="valid" time="0.19"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.398.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="0.99" steps="111757"/></proof>
      <proof prover="5"><result status="valid" time="0.20"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.398.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.49" steps="1606"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.398.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.35" steps="983"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.398.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.48" steps="1649"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.398.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.51" steps="1644"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.398.0.5" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="nodeP">
     <goal name="decreaseKey&#39;vc.398.0.5.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.398.0.5.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="13.59" steps="1441359"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.398.0.5.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="12.98" steps="1417197"/></proof>
      <proof prover="5"><result status="valid" time="2.39"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.398.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.55" steps="2143"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.399" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.45" steps="272"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.25" steps="61157"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.400" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="501"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.401" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.72" steps="965"/></proof>
  <proof prover="5"><result status="valid" time="2.02"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.402" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="461"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.403" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.404" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="965"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.405" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="500"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.406" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.66" steps="757"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.42" steps="76139"/></proof>
  <proof prover="5"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.407" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="985"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.408" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="21.65" steps="45738"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.409" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.47" steps="278"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.36" steps="68648"/></proof>
  <proof prover="5"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.410" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.43" steps="274"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.12" steps="45392"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.411" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.43" steps="280"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.28" steps="51491"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.412" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.413" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.414" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.415" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.44" steps="280"/></proof>
  <proof prover="5"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.416" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.69" steps="468"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.63" steps="77388"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.417" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.50" steps="284"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.39" steps="66973"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.418" expl="write frame head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.72" steps="461"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="1.11" steps="116020"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.419" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.50" steps="284"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.40" steps="67630"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.420" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.421" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.422" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.45" steps="280"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.18" steps="53517"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.423" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.424" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.46" steps="280"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.19" steps="53608"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.425" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.426" expl="write frame size" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.45" steps="280"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.30" steps="53656"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.427" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.428" expl="write frame length" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.45" steps="280"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.19" steps="53743"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.429" expl="write frame key" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.73" steps="475"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.65" steps="82495"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.430" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.431" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.432" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.433" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.434" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.435" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.27" steps="5216"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="1.22" steps="130337"/></proof>
  <proof prover="5"><result status="valid" time="3.64"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.436" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.49" steps="280"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.21" steps="54616"/></proof>
  <proof prover="5"><result status="valid" time="2.34"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.437" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.437.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.437.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="rewrite" proved="true" arg1="repClosed_DEF">
     <goal name="decreaseKey&#39;vc.437.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.437.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="5"><result status="valid" time="26.60"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.437.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.87" steps="3763"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.437.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.57" steps="8615"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.437.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.37" steps="6942"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.437.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.92" steps="6942"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.437.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.59" steps="3286"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.437.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.03" steps="5646"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.437.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.70" steps="3928"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.437.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.74" steps="5691"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.437.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="4" memlimit="9000"><result status="valid" time="24.49" steps="4036765"/></proof>
    <proof prover="5"><result status="valid" time="9.26"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.437.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.04" steps="5690"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.438" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="87"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.21" steps="51427"/></proof>
  <proof prover="5"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.439" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="149"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.440" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.15" steps="448"/></proof>
  <proof prover="5"><result status="valid" time="0.72"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.441" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="181"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.442" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="142"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.443" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="448"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.444" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="149"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.445" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.56" steps="2029"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.446" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="458"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.447" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.447.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.13" steps="87"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.447.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.15" steps="87"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.447.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.16" steps="87"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.447.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.09" steps="87"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.447.4" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.19" steps="140"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.447.5" expl="type invariant" proved="true">
   <proof prover="4" memlimit="9000"><result status="valid" time="0.35" steps="57007"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.447.6" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.24" steps="147"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.448" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="93"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.27" steps="56348"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.449" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="91"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.10" steps="42999"/></proof>
  <proof prover="5"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.450" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="97"/></proof>
  <proof prover="5"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.451" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="97"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.452" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="97"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.453" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="97"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.454" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="97"/></proof>
  <proof prover="5"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.455" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="97"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.456" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="97"/></proof>
  <proof prover="5"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.457" expl="write frame head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="97"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.458" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="97"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.459" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="97"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.460" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="97"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.461" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="97"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.462" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="97"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.463" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="97"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.464" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="97"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.465" expl="write frame size" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="97"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.466" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="97"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.467" expl="write frame length" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="97"/></proof>
  <proof prover="5"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.468" expl="write frame key" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.18" steps="199"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.469" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="97"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.470" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="97"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.471" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="97"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.472" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="97"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.473" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="97"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.474" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.35" steps="1051"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.64" steps="83007"/></proof>
  <proof prover="5"><result status="valid" time="1.28"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.475" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.06" steps="95"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.18" steps="50308"/></proof>
  <proof prover="5"><result status="valid" time="0.93"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.476" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.476.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.476.0.0" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.54" steps="5780"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.476.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.12" steps="521"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.476.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.14" steps="767"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.476.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.14" steps="756"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.476.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.14" steps="757"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.476.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.43" steps="3581"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.476.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.45" steps="1907"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="PqueueR" proved="true">
 <goal name="repOk_EMPTY" proved="true">
 <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="232"/></proof>
 </goal>
 <goal name="disjointNotIn" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="disjointNotIn.0" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="H6">
   <goal name="disjointNotIn.0.0" proved="true">
   <transf name="split_premise_full" proved="true" >
    <goal name="disjointNotIn.0.0.0" proved="true">
    <transf name="assert" proved="true" arg1="(strongDisjoint s r)">
     <goal name="disjointNotIn.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.02" steps="22"/></proof>
     </goal>
     <goal name="disjointNotIn.0.0.0.1" proved="true">
     <transf name="unfold" proved="true" arg1="strongDisjoint" arg2="in" arg3="h">
      <goal name="disjointNotIn.0.0.0.1.0" proved="true">
      <transf name="assert" proved="true" arg1="(inter prep qrep = emptyRgn)">
       <goal name="disjointNotIn.0.0.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="22"/></proof>
       </goal>
       <goal name="disjointNotIn.0.0.0.1.0.1" proved="true">
       <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.08" steps="423"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="init_Node&#39;vc" expl="VC for init_Node" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="init_Node&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="114"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="169"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.2" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.20" steps="349"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.3" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="199"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="162"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.20" steps="349"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.6" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="169"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.7" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.48" steps="965"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="362"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.34" steps="706"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.07" steps="120"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="118"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.12" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="120"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.13" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.20" steps="191"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.14" expl="write frame key" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.19" steps="191"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.06" steps="120"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="122"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="122"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="123"/></proof>
  </goal>
  <goal name="init_Node&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="124"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="init_Pqueue&#39;vc" expl="VC for init_Pqueue" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="init_Pqueue&#39;vc.0" expl="Node(sntl,- 1,- 1)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.02" steps="84"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.1" expl="Node(sntl,- 1,- 1)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="84"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.2" expl="Node(sntl,- 1,- 1)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="86"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.3" expl="Node(sntl,- 1,- 1)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="88"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.4" expl="Node(sntl,- 1,- 1)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.5" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.25" steps="242"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.6" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.80" steps="442"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.7" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.87" steps="635"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.13" steps="1776"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.82" steps="851"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.92" steps="628"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.13" steps="1776"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.93" steps="635"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="8.56" steps="20444"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.37" steps="1781"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="5.80" steps="12389"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.16" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="2.19" steps="1584"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.79" steps="446"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.18" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.84" steps="611"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.19" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.76" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.20" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.97" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.21" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="2.03" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.22" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.88" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.23" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="2.10" steps="745"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.24" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="2.42" steps="1806"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.25" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="2.40" steps="1808"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.26" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="2.16" steps="747"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.27" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="2.34" steps="1811"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.28" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="2.01" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.29" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="2.00" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.30" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="2.15" steps="761"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.31" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.91" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.32" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="2.29" steps="1543"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.33" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.93" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.34" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.93" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.35" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.99" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.36" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.89" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.37" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="2.29" steps="1534"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.42" steps="80352"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.38" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.91" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.39" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.87" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.40" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.99" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.41" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.94" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.42" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.86" steps="452"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.43" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.28" steps="1423"/></proof>
  <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="4.64" steps="252812"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.44" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="8.00" steps="13848"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.45" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.16" steps="711"/></proof>
  </goal>
  <goal name="init_Pqueue&#39;vc.46" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="init_Pqueue&#39;vc.46.0" expl="VC for init_Pqueue" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="init_Pqueue&#39;vc.46.0.0" expl="VC for init_Pqueue" proved="true">
    <proof prover="1"><result status="valid" time="2.22" steps="4078"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.46.0.1" expl="VC for init_Pqueue" proved="true">
    <proof prover="1"><result status="valid" time="2.29" steps="3946"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.46.0.2" expl="VC for init_Pqueue" proved="true">
    <proof prover="1"><result status="valid" time="2.09" steps="3314"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.46.0.3" expl="VC for init_Pqueue" proved="true">
    <proof prover="1"><result status="valid" time="8.15" steps="17269"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.46.0.4" expl="VC for init_Pqueue" proved="true">
    <proof prover="1"><result status="valid" time="30.67" steps="60744"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.46.0.5" expl="VC for init_Pqueue" proved="true">
    <proof prover="1"><result status="valid" time="4.42" steps="8490"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.46.0.6" expl="VC for init_Pqueue" proved="true">
    <proof prover="1"><result status="valid" time="2.37" steps="4316"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.46.0.7" expl="VC for init_Pqueue" proved="true">
    <proof prover="1"><result status="valid" time="2.18" steps="3476"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.46.0.8" expl="VC for init_Pqueue" proved="true">
    <proof prover="1"><result status="valid" time="2.38" steps="4004"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.46.0.9" expl="VC for init_Pqueue" proved="true">
    <proof prover="1"><result status="valid" time="2.20" steps="3706"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.46.0.10" expl="VC for init_Pqueue" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="26.79"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.46.0.11" expl="VC for init_Pqueue" proved="true">
    <proof prover="1"><result status="valid" time="2.84" steps="5509"/></proof>
    </goal>
    <goal name="init_Pqueue&#39;vc.46.0.12" expl="VC for init_Pqueue" proved="true">
    <proof prover="1"><result status="valid" time="13.46" steps="30758"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="isEmpty&#39;vc" expl="VC for isEmpty" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="isEmpty&#39;vc.0" expl="sz := self.size" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="isEmpty&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="20"/></proof>
  </goal>
  <goal name="isEmpty&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="isEmpty&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="findMin&#39;vc" expl="VC for findMin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="findMin&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
  <goal name="findMin&#39;vc.1" expl="result := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="36"/></proof>
  </goal>
  <goal name="findMin&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="39"/></proof>
  </goal>
  <goal name="findMin&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="110"/></proof>
  </goal>
  <goal name="findMin&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="findMin&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="28"/></proof>
  </goal>
  <goal name="findMin&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="link&#39;vc" expl="VC for link" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="link&#39;vc.0" expl="sntl := self.sntl" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="55"/></proof>
  </goal>
  <goal name="link&#39;vc.1" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="124"/></proof>
  </goal>
  <goal name="link&#39;vc.2" expl="rep := self.rep" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="64"/></proof>
  </goal>
  <goal name="link&#39;vc.3" expl="fkey := first.key" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="69"/></proof>
  </goal>
  <goal name="link&#39;vc.4" expl="skey := second.key" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="74"/></proof>
  </goal>
  <goal name="link&#39;vc.5" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.06" steps="96"/></proof>
  </goal>
  <goal name="link&#39;vc.6" expl="tmp := first.prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="81"/></proof>
  </goal>
  <goal name="link&#39;vc.7" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.08" steps="383"/></proof>
  </goal>
  <goal name="link&#39;vc.8" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="153"/></proof>
  </goal>
  <goal name="link&#39;vc.9" expl="tmp := second.child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.18" steps="206"/></proof>
  </goal>
  <goal name="link&#39;vc.10" expl="tmp := first.sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.29" steps="275"/></proof>
  </goal>
  <goal name="link&#39;vc.11" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.64" steps="1928"/></proof>
  </goal>
  <goal name="link&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.25" steps="217"/></proof>
  </goal>
  <goal name="link&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="384"/></proof>
  </goal>
  <goal name="link&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.29" steps="645"/></proof>
  </goal>
  <goal name="link&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="338"/></proof>
  </goal>
  <goal name="link&#39;vc.16" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="293"/></proof>
  </goal>
  <goal name="link&#39;vc.17" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.39" steps="729"/></proof>
  </goal>
  <goal name="link&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="384"/></proof>
  </goal>
  <goal name="link&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.01" steps="20477"/></proof>
  </goal>
  <goal name="link&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.39" steps="684"/></proof>
  </goal>
  <goal name="link&#39;vc.21" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.45" steps="975"/></proof>
  </goal>
  <goal name="link&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.26" steps="223"/></proof>
  </goal>
  <goal name="link&#39;vc.23" expl="assertion" proved="true">
  <proof prover="4" memlimit="9000"><result status="valid" time="0.89" steps="101518"/></proof>
  </goal>
  <goal name="link&#39;vc.24" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.31" steps="13228"/></proof>
  </goal>
  <goal name="link&#39;vc.25" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.39" steps="270"/></proof>
  </goal>
  <goal name="link&#39;vc.26" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.41" steps="275"/></proof>
  </goal>
  <goal name="link&#39;vc.27" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.43" steps="277"/></proof>
  </goal>
  <goal name="link&#39;vc.28" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="502"/></proof>
  </goal>
  <goal name="link&#39;vc.29" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.62" steps="897"/></proof>
  </goal>
  <goal name="link&#39;vc.30" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="443"/></proof>
  </goal>
  <goal name="link&#39;vc.31" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="384"/></proof>
  </goal>
  <goal name="link&#39;vc.32" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="1036"/></proof>
  </goal>
  <goal name="link&#39;vc.33" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="502"/></proof>
  </goal>
  <goal name="link&#39;vc.34" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.72" steps="15135"/></proof>
  </goal>
  <goal name="link&#39;vc.35" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="927"/></proof>
  </goal>
  <goal name="link&#39;vc.36" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.75" steps="1360"/></proof>
  <proof prover="5"><result status="valid" time="4.20"/></proof>
  </goal>
  <goal name="link&#39;vc.37" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.43" steps="283"/></proof>
  </goal>
  <goal name="link&#39;vc.38" expl="assertion" proved="true">
  <transf name="unfold" proved="true" arg1="repOk">
   <goal name="link&#39;vc.38.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.38.0.0" expl="VC for link" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.22" steps="2063"/></proof>
    </goal>
    <goal name="link&#39;vc.38.0.1" expl="VC for link" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.11" steps="433944"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.44" steps="376"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="0.60" steps="95658"/></proof>
    <proof prover="5"><result status="valid" time="0.22"/></proof>
    </goal>
    <goal name="link&#39;vc.38.0.2" expl="VC for link" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.12" steps="427887"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.44" steps="644"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="0.54" steps="92591"/></proof>
    <proof prover="5"><result status="valid" time="0.21"/></proof>
    </goal>
    <goal name="link&#39;vc.38.0.3" expl="VC for link" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.19" steps="572055"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.07" steps="7460"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="1.68" steps="127167"/></proof>
    <proof prover="5"><result status="valid" time="0.32"/></proof>
    </goal>
    <goal name="link&#39;vc.38.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.28" steps="2933"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="2.06" steps="154144"/></proof>
    </goal>
    <goal name="link&#39;vc.38.0.5" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="15.32" steps="37866"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.39" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.73" steps="335"/></proof>
  </goal>
  <goal name="link&#39;vc.40" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="612"/></proof>
  </goal>
  <goal name="link&#39;vc.41" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.96" steps="1140"/></proof>
  </goal>
  <goal name="link&#39;vc.42" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.78" steps="538"/></proof>
  </goal>
  <goal name="link&#39;vc.43" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.77" steps="468"/></proof>
  </goal>
  <goal name="link&#39;vc.44" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.04" steps="1140"/></proof>
  </goal>
  <goal name="link&#39;vc.45" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="612"/></proof>
  </goal>
  <goal name="link&#39;vc.46" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="link&#39;vc.46.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.50" steps="331"/></proof>
   <proof prover="4" memlimit="9000"><result status="valid" time="0.35" steps="71662"/></proof>
   <proof prover="5"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="link&#39;vc.46.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.54" steps="331"/></proof>
   <proof prover="4" memlimit="9000"><result status="valid" time="0.50" steps="78960"/></proof>
   <proof prover="5"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="link&#39;vc.46.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.62" steps="331"/></proof>
   <proof prover="4" memlimit="9000"><result status="valid" time="0.72" steps="78613"/></proof>
   <proof prover="5"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="link&#39;vc.46.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.19" steps="1743"/></proof>
   </goal>
   <goal name="link&#39;vc.46.4" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.55" steps="331"/></proof>
   <proof prover="4" memlimit="9000"><result status="valid" time="0.34" steps="71670"/></proof>
   <proof prover="5"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="link&#39;vc.46.5" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.70" steps="475"/></proof>
   <proof prover="4" memlimit="9000"><result status="valid" time="0.77" steps="78255"/></proof>
   <proof prover="5"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="link&#39;vc.46.6" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.96" steps="13261"/></proof>
   <proof prover="4" memlimit="9000"><result status="valid" time="2.96" steps="211234"/></proof>
   </goal>
   <goal name="link&#39;vc.46.7" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.59" steps="471"/></proof>
   <proof prover="4" memlimit="9000"><result status="valid" time="0.49" steps="78244"/></proof>
   <proof prover="5"><result status="valid" time="0.13"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.47" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.03" steps="1162"/></proof>
  </goal>
  <goal name="link&#39;vc.48" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.18" steps="1700"/></proof>
  </goal>
  <goal name="link&#39;vc.49" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.77" steps="341"/></proof>
  </goal>
  <goal name="link&#39;vc.50" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="15.42" steps="20609"/></proof>
  </goal>
  <goal name="link&#39;vc.51" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.66" steps="339"/></proof>
  <proof prover="5"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="link&#39;vc.52" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.68" steps="455"/></proof>
  <proof prover="5"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="link&#39;vc.53" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.93" steps="583"/></proof>
  </goal>
  <goal name="link&#39;vc.54" expl="write frame prev" proved="true">
  <transf name="assert" proved="true" arg1="(p &lt;&gt; tmp)">
   <goal name="link&#39;vc.54.0" expl="asserted formula" proved="true">
   <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.65" steps="348"/></proof>
   </goal>
   <goal name="link&#39;vc.54.1" expl="write frame prev" proved="true">
   <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="38.69" steps="64230"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.55" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.97" steps="596"/></proof>
  </goal>
  <goal name="link&#39;vc.56" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.06" steps="3616"/></proof>
  <proof prover="5"><result status="valid" time="15.14"/></proof>
  </goal>
  <goal name="link&#39;vc.57" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="link&#39;vc.57.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.57.0.0" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.97" steps="1914"/></proof>
    </goal>
    <goal name="link&#39;vc.57.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.97" steps="1914"/></proof>
    </goal>
    <goal name="link&#39;vc.57.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.76" steps="1040"/></proof>
    </goal>
    <goal name="link&#39;vc.57.0.3" expl="VC for link" proved="true">
    <transf name="unfold" proved="true" arg1="sntlOk">
     <goal name="link&#39;vc.57.0.3.0" expl="VC for link" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="link&#39;vc.57.0.3.0.0" expl="VC for link" proved="true">
      <proof prover="0" timelimit="20"><result status="valid" time="0.16" steps="527996"/></proof>
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.41" steps="9830"/></proof>
      <proof prover="4" memlimit="9000"><result status="valid" time="5.12" steps="362488"/></proof>
      <proof prover="5"><result status="valid" time="1.95"/></proof>
      </goal>
      <goal name="link&#39;vc.57.0.3.0.1" expl="VC for link" proved="true">
      <proof prover="0" timelimit="20"><result status="valid" time="0.16" steps="527991"/></proof>
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.47" steps="9830"/></proof>
      <proof prover="4" memlimit="9000"><result status="valid" time="7.58" steps="429159"/></proof>
      <proof prover="5"><result status="valid" time="2.25"/></proof>
      </goal>
      <goal name="link&#39;vc.57.0.3.0.2" expl="VC for link" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.56" steps="16619"/></proof>
      </goal>
      <goal name="link&#39;vc.57.0.3.0.3" expl="VC for link" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="6.78" steps="13634"/></proof>
      </goal>
      <goal name="link&#39;vc.57.0.3.0.4" expl="VC for link" proved="true">
      <transf name="subst_all" proved="true" >
       <goal name="link&#39;vc.57.0.3.0.4.0" expl="VC for link" proved="true">
       <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.48" steps="19872"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="link&#39;vc.57.0.4" expl="VC for link" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="link&#39;vc.57.0.4.0" expl="VC for link" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="link&#39;vc.57.0.4.0.0" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="6.07" steps="8600"/></proof>
      </goal>
      <goal name="link&#39;vc.57.0.4.0.1" expl="VC for link" proved="true">
      <proof prover="0" timelimit="20"><result status="valid" time="0.13" steps="474628"/></proof>
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.89" steps="1054"/></proof>
      <proof prover="4" memlimit="9000"><result status="valid" time="0.51" steps="71736"/></proof>
      <proof prover="5"><result status="valid" time="0.20"/></proof>
      </goal>
      <goal name="link&#39;vc.57.0.4.0.2" expl="VC for link" proved="true">
      <proof prover="0" timelimit="20"><result status="valid" time="0.12" steps="466856"/></proof>
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.08" steps="2066"/></proof>
      <proof prover="4" memlimit="9000"><result status="valid" time="0.34" steps="70356"/></proof>
      <proof prover="5"><result status="valid" time="1.06"/></proof>
      </goal>
      <goal name="link&#39;vc.57.0.4.0.3" expl="VC for link" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="2.03" steps="151295"/></proof>
      </goal>
      <goal name="link&#39;vc.57.0.4.0.4" expl="VC for link" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="2.21" steps="156155"/></proof>
      </goal>
      <goal name="link&#39;vc.57.0.4.0.5" expl="VC for link" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="2.04" steps="153718"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="link&#39;vc.57.0.5" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.61" steps="2958"/></proof>
    </goal>
    <goal name="link&#39;vc.57.0.6" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.23" steps="2798"/></proof>
    </goal>
    <goal name="link&#39;vc.57.0.7" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.07" steps="1911"/></proof>
    </goal>
    <goal name="link&#39;vc.57.0.8" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.33" steps="2998"/></proof>
    </goal>
    <goal name="link&#39;vc.57.0.9" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.25" steps="2998"/></proof>
    </goal>
    <goal name="link&#39;vc.57.0.10" expl="VC for link" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires">
     <goal name="link&#39;vc.57.0.10.0" expl="VC for link" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="link&#39;vc.57.0.10.0.0" expl="VC for link" proved="true">
      <proof prover="5"><result status="valid" time="22.17"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="link&#39;vc.57.0.11" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.60" steps="3879"/></proof>
    <proof prover="5"><result status="valid" time="0.54"/></proof>
    </goal>
    <goal name="link&#39;vc.57.0.12" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.16" steps="8223"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="4.93" steps="414663"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.58" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.74" steps="351"/></proof>
  <proof prover="5"><result status="valid" time="11.58"/></proof>
  </goal>
  <goal name="link&#39;vc.59" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.68" steps="346"/></proof>
  <proof prover="5"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="link&#39;vc.60" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.71" steps="346"/></proof>
  <proof prover="5"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="link&#39;vc.61" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.36" steps="261"/></proof>
  <proof prover="5"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="link&#39;vc.62" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.42" steps="444"/></proof>
  </goal>
  <goal name="link&#39;vc.63" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.53" steps="721"/></proof>
  </goal>
  <goal name="link&#39;vc.64" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.38" steps="389"/></proof>
  </goal>
  <goal name="link&#39;vc.65" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.38" steps="342"/></proof>
  </goal>
  <goal name="link&#39;vc.66" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="721"/></proof>
  </goal>
  <goal name="link&#39;vc.67" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="443"/></proof>
  </goal>
  <goal name="link&#39;vc.68" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="8.84" steps="23332"/></proof>
  </goal>
  <goal name="link&#39;vc.69" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="743"/></proof>
  </goal>
  <goal name="link&#39;vc.70" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.60" steps="1050"/></proof>
  </goal>
  <goal name="link&#39;vc.71" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.40" steps="267"/></proof>
  <proof prover="5"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="link&#39;vc.72" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="19.88" steps="62420"/></proof>
  </goal>
  <goal name="link&#39;vc.73" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.38" steps="266"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="link&#39;vc.74" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.40" steps="351"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="link&#39;vc.75" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.52" steps="425"/></proof>
  </goal>
  <goal name="link&#39;vc.76" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.15" steps="3972"/></proof>
  </goal>
  <goal name="link&#39;vc.77" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.51" steps="435"/></proof>
  </goal>
  <goal name="link&#39;vc.78" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.94" steps="1992"/></proof>
  <proof prover="5"><result status="valid" time="4.90"/></proof>
  </goal>
  <goal name="link&#39;vc.79" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="link&#39;vc.79.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.79.0.0" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.55" steps="1126"/></proof>
    </goal>
    <goal name="link&#39;vc.79.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.54" steps="1124"/></proof>
    </goal>
    <goal name="link&#39;vc.79.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.45" steps="682"/></proof>
    </goal>
    <goal name="link&#39;vc.79.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.00" steps="12090"/></proof>
    <proof prover="5"><result status="valid" time="14.23"/></proof>
    </goal>
    <goal name="link&#39;vc.79.0.4" expl="VC for link" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="link&#39;vc.79.0.4.0" expl="VC for link" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="link&#39;vc.79.0.4.0.0" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.42" steps="2938"/></proof>
      </goal>
      <goal name="link&#39;vc.79.0.4.0.1" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.48" steps="686"/></proof>
      </goal>
      <goal name="link&#39;vc.79.0.4.0.2" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="0.59" steps="1178"/></proof>
      </goal>
      <goal name="link&#39;vc.79.0.4.0.3" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="15.02" steps="47562"/></proof>
      <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="1.26" steps="112540"/></proof>
      </goal>
      <goal name="link&#39;vc.79.0.4.0.4" expl="VC for link" proved="true">
      <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="1.39" steps="112641"/></proof>
      </goal>
      <goal name="link&#39;vc.79.0.4.0.5" expl="VC for link" proved="true">
      <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="1.28" steps="112451"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="link&#39;vc.79.0.5" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.78" steps="1639"/></proof>
    <proof prover="5"><result status="valid" time="0.30"/></proof>
    </goal>
    <goal name="link&#39;vc.79.0.6" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.72" steps="1545"/></proof>
    </goal>
    <goal name="link&#39;vc.79.0.7" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.60" steps="1125"/></proof>
    <proof prover="5"><result status="valid" time="0.33"/></proof>
    </goal>
    <goal name="link&#39;vc.79.0.8" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.68" steps="1703"/></proof>
    <proof prover="5"><result status="valid" time="0.29"/></proof>
    </goal>
    <goal name="link&#39;vc.79.0.9" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.69" steps="1703"/></proof>
    <proof prover="5"><result status="valid" time="0.32"/></proof>
    </goal>
    <goal name="link&#39;vc.79.0.10" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="10.93" steps="31179"/></proof>
    <proof prover="5"><result status="valid" time="14.89"/></proof>
    </goal>
    <goal name="link&#39;vc.79.0.11" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.88" steps="2243"/></proof>
    <proof prover="5"><result status="valid" time="0.21"/></proof>
    </goal>
    <goal name="link&#39;vc.79.0.12" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.66" steps="3940"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="2.43" steps="225114"/></proof>
    <proof prover="5"><result status="valid" time="19.06"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.80" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.37" steps="277"/></proof>
  <proof prover="5"><result status="valid" time="4.84"/></proof>
  </goal>
  <goal name="link&#39;vc.81" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.35" steps="273"/></proof>
  <proof prover="5"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="link&#39;vc.82" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.38" steps="273"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="link&#39;vc.83" expl="tmp := second.sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.08" steps="139"/></proof>
  <proof prover="5"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="link&#39;vc.84" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.12" steps="774"/></proof>
  </goal>
  <goal name="link&#39;vc.85" expl="tmp := first.sibling" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.17" steps="205"/></proof>
  </goal>
  <goal name="link&#39;vc.86" expl="tmp := first.child" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.29" steps="275"/></proof>
  </goal>
  <goal name="link&#39;vc.87" expl="assertion" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.82" steps="1994"/></proof>
  </goal>
  <goal name="link&#39;vc.88" expl="tmp := second.sibling" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.41" steps="347"/></proof>
  </goal>
  <goal name="link&#39;vc.89" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.38" steps="272"/></proof>
  </goal>
  <goal name="link&#39;vc.90" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.78" steps="372"/></proof>
  </goal>
  <goal name="link&#39;vc.91" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.77" steps="472"/></proof>
  </goal>
  <goal name="link&#39;vc.92" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.94" steps="1222"/></proof>
  </goal>
  <goal name="link&#39;vc.93" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.78" steps="602"/></proof>
  </goal>
  <goal name="link&#39;vc.94" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.76" steps="465"/></proof>
  </goal>
  <goal name="link&#39;vc.95" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.94" steps="1222"/></proof>
  </goal>
  <goal name="link&#39;vc.96" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.82" steps="472"/></proof>
  </goal>
  <goal name="link&#39;vc.97" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="22.75" steps="60004"/></proof>
  </goal>
  <goal name="link&#39;vc.98" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.94" steps="1237"/></proof>
  </goal>
  <goal name="link&#39;vc.99" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.12" steps="1718"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.52" steps="72510"/></proof>
  <proof prover="5"><result status="valid" time="2.90"/></proof>
  </goal>
  <goal name="link&#39;vc.100" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.76" steps="378"/></proof>
  </goal>
  <goal name="link&#39;vc.101" expl="assertion" proved="true">
  <transf name="unfold" proved="true" arg1="repOk">
   <goal name="link&#39;vc.101.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.101.0.0" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.42" steps="2190"/></proof>
    </goal>
    <goal name="link&#39;vc.101.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.83" steps="488"/></proof>
    </goal>
    <goal name="link&#39;vc.101.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.82" steps="672"/></proof>
    </goal>
    <goal name="link&#39;vc.101.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.92" steps="5723"/></proof>
    </goal>
    <goal name="link&#39;vc.101.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.79" steps="7630"/></proof>
    </goal>
    <goal name="link&#39;vc.101.0.5" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="7.40" steps="13819"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.102" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.74" steps="378"/></proof>
  </goal>
  <goal name="link&#39;vc.103" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.77" steps="493"/></proof>
  </goal>
  <goal name="link&#39;vc.104" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.26" steps="5849"/></proof>
  </goal>
  <goal name="link&#39;vc.105" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="12.60" steps="25164"/></proof>
  </goal>
  <goal name="link&#39;vc.106" expl="write frame child" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.98" steps="574"/></proof>
  </goal>
  <goal name="link&#39;vc.107" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.57" steps="2586"/></proof>
  </goal>
  <goal name="link&#39;vc.108" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="link&#39;vc.108.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.108.0.0" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.11" steps="1726"/></proof>
    </goal>
    <goal name="link&#39;vc.108.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.07" steps="1729"/></proof>
    </goal>
    <goal name="link&#39;vc.108.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.93" steps="855"/></proof>
    </goal>
    <goal name="link&#39;vc.108.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.84" steps="13705"/></proof>
    </goal>
    <goal name="link&#39;vc.108.0.4" expl="VC for link" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="link&#39;vc.108.0.4.0" expl="VC for link" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="link&#39;vc.108.0.4.0.0" expl="VC for link" proved="true">
      <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.12" steps="3651"/></proof>
      </goal>
      <goal name="link&#39;vc.108.0.4.0.1" expl="VC for link" proved="true">
      <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.89" steps="857"/></proof>
      </goal>
      <goal name="link&#39;vc.108.0.4.0.2" expl="VC for link" proved="true">
      <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.08" steps="1798"/></proof>
      </goal>
      <goal name="link&#39;vc.108.0.4.0.3" expl="VC for link" proved="true">
      <proof prover="4" timelimit="25" memlimit="9000"><result status="valid" time="1.57" steps="129396"/></proof>
      </goal>
      <goal name="link&#39;vc.108.0.4.0.4" expl="VC for link" proved="true">
      <proof prover="4" timelimit="25" memlimit="9000"><result status="valid" time="1.60" steps="129397"/></proof>
      </goal>
      <goal name="link&#39;vc.108.0.4.0.5" expl="VC for link" proved="true">
      <proof prover="4" timelimit="25" memlimit="9000"><result status="valid" time="1.60" steps="129488"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="link&#39;vc.108.0.5" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.29" steps="2143"/></proof>
    </goal>
    <goal name="link&#39;vc.108.0.6" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.14" steps="2068"/></proof>
    </goal>
    <goal name="link&#39;vc.108.0.7" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.02" steps="1357"/></proof>
    </goal>
    <goal name="link&#39;vc.108.0.8" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.17" steps="1970"/></proof>
    </goal>
    <goal name="link&#39;vc.108.0.9" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.13" steps="1970"/></proof>
    </goal>
    <goal name="link&#39;vc.108.0.10" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.95" steps="9787"/></proof>
    </goal>
    <goal name="link&#39;vc.108.0.11" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.38" steps="2733"/></proof>
    </goal>
    <goal name="link&#39;vc.108.0.12" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.40" steps="4401"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.109" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.79" steps="388"/></proof>
  </goal>
  <goal name="link&#39;vc.110" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.77" steps="385"/></proof>
  </goal>
  <goal name="link&#39;vc.111" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.77" steps="385"/></proof>
  </goal>
  <goal name="link&#39;vc.112" expl="type invariant" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.09" steps="363547"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.59" steps="316"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.36" steps="58821"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="link&#39;vc.113" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="415"/></proof>
  </goal>
  <goal name="link&#39;vc.114" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.74" steps="1061"/></proof>
  <proof prover="5"><result status="valid" time="2.32"/></proof>
  </goal>
  <goal name="link&#39;vc.115" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="519"/></proof>
  </goal>
  <goal name="link&#39;vc.116" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="408"/></proof>
  </goal>
  <goal name="link&#39;vc.117" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="1061"/></proof>
  </goal>
  <goal name="link&#39;vc.118" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="415"/></proof>
  </goal>
  <goal name="link&#39;vc.119" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="10.40" steps="29949"/></proof>
  </goal>
  <goal name="link&#39;vc.120" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="1081"/></proof>
  </goal>
  <goal name="link&#39;vc.121" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.88" steps="1505"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.31" steps="69572"/></proof>
  <proof prover="5"><result status="valid" time="2.39"/></proof>
  </goal>
  <goal name="link&#39;vc.122" expl="type invariant" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.09" steps="403047"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.58" steps="322"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.49" steps="66302"/></proof>
  <proof prover="5"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="link&#39;vc.123" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="16.67" steps="31255"/></proof>
  </goal>
  <goal name="link&#39;vc.124" expl="postcondition" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.04" steps="77835"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.56" steps="322"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.13" steps="46057"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="link&#39;vc.125" expl="postcondition" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.09" steps="377809"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.60" steps="425"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.37" steps="59561"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="link&#39;vc.126" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.77" steps="3285"/></proof>
  </goal>
  <goal name="link&#39;vc.127" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.89" steps="5556"/></proof>
  </goal>
  <goal name="link&#39;vc.128" expl="write frame child" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.16" steps="478888"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.74" steps="504"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.63" steps="75235"/></proof>
  </goal>
  <goal name="link&#39;vc.129" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.09" steps="1960"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="1.29" steps="126085"/></proof>
  <proof prover="5"><result status="valid" time="2.95"/></proof>
  </goal>
  <goal name="link&#39;vc.130" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="link&#39;vc.130.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.130.0.0" expl="VC for link" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.12" steps="469857"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.80" steps="1227"/></proof>
    <proof prover="5"><result status="valid" time="0.18"/></proof>
    </goal>
    <goal name="link&#39;vc.130.0.1" expl="VC for link" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.13" steps="477465"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.78" steps="1226"/></proof>
    <proof prover="5"><result status="valid" time="0.16"/></proof>
    </goal>
    <goal name="link&#39;vc.130.0.2" expl="VC for link" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.10" steps="432734"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.65" steps="767"/></proof>
    <proof prover="5"><result status="valid" time="0.16"/></proof>
    </goal>
    <goal name="link&#39;vc.130.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.85" steps="7707"/></proof>
    <proof prover="5"><result status="valid" time="19.35"/></proof>
    </goal>
    <goal name="link&#39;vc.130.0.4" expl="VC for link" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="link&#39;vc.130.0.4.0" expl="VC for link" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="link&#39;vc.130.0.4.0.0" expl="VC for link" proved="true">
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.53" steps="3002"/></proof>
      </goal>
      <goal name="link&#39;vc.130.0.4.0.1" expl="VC for link" proved="true">
      <proof prover="0" timelimit="20"><result status="valid" time="0.11" steps="432482"/></proof>
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.70" steps="769"/></proof>
      <proof prover="4" memlimit="9000"><result status="valid" time="0.46" steps="65362"/></proof>
      <proof prover="5"><result status="valid" time="0.13"/></proof>
      </goal>
      <goal name="link&#39;vc.130.0.4.0.2" expl="VC for link" proved="true">
      <proof prover="0" timelimit="20"><result status="valid" time="0.11" steps="431272"/></proof>
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.78" steps="1281"/></proof>
      <proof prover="4" memlimit="9000"><result status="valid" time="0.31" steps="64972"/></proof>
      <proof prover="5"><result status="valid" time="0.47"/></proof>
      </goal>
      <goal name="link&#39;vc.130.0.4.0.3" expl="VC for link" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="1.53" steps="119575"/></proof>
      </goal>
      <goal name="link&#39;vc.130.0.4.0.4" expl="VC for link" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="1.51" steps="119613"/></proof>
      </goal>
      <goal name="link&#39;vc.130.0.4.0.5" expl="VC for link" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="1.46" steps="119636"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="link&#39;vc.130.0.5" expl="VC for link" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.13" steps="469902"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.93" steps="1619"/></proof>
    <proof prover="5"><result status="valid" time="0.32"/></proof>
    </goal>
    <goal name="link&#39;vc.130.0.6" expl="VC for link" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.12" steps="484310"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.80" steps="1498"/></proof>
    <proof prover="5"><result status="valid" time="0.30"/></proof>
    </goal>
    <goal name="link&#39;vc.130.0.7" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.76" steps="1106"/></proof>
    <proof prover="5"><result status="valid" time="0.32"/></proof>
    </goal>
    <goal name="link&#39;vc.130.0.8" expl="VC for link" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.16" steps="466647"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.79" steps="1415"/></proof>
    <proof prover="5"><result status="valid" time="0.30"/></proof>
    </goal>
    <goal name="link&#39;vc.130.0.9" expl="VC for link" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.15" steps="468544"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.77" steps="1415"/></proof>
    <proof prover="5"><result status="valid" time="0.35"/></proof>
    </goal>
    <goal name="link&#39;vc.130.0.10" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.09" steps="6456"/></proof>
    <proof prover="5"><result status="valid" time="22.10"/></proof>
    </goal>
    <goal name="link&#39;vc.130.0.11" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.97" steps="2177"/></proof>
    <proof prover="5"><result status="valid" time="0.19"/></proof>
    </goal>
    <goal name="link&#39;vc.130.0.12" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.63" steps="3625"/></proof>
    <proof prover="5"><result status="valid" time="23.77"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.131" expl="postcondition" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.09" steps="370192"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.52" steps="332"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.19" steps="50451"/></proof>
  <proof prover="5"><result status="valid" time="7.70"/></proof>
  </goal>
  <goal name="link&#39;vc.132" expl="postcondition" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.02" steps="20567"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.48" steps="329"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.13" steps="46615"/></proof>
  <proof prover="5"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="link&#39;vc.133" expl="postcondition" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.09" steps="379252"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.55" steps="329"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.20" steps="53614"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="link&#39;vc.134" expl="tmp := first.child" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.18" steps="208"/></proof>
  </goal>
  <goal name="link&#39;vc.135" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.52" steps="1469"/></proof>
  </goal>
  <goal name="link&#39;vc.136" expl="tmp := second.sibling" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.12" steps="378673"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.25" steps="279"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.38" steps="58183"/></proof>
  <proof prover="5"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="link&#39;vc.137" expl="assertion" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.29" steps="218"/></proof>
  </goal>
  <goal name="link&#39;vc.138" expl="type invariant" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.09" steps="372808"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.58" steps="318"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.23" steps="59168"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="link&#39;vc.139" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="415"/></proof>
  </goal>
  <goal name="link&#39;vc.140" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.65" steps="1039"/></proof>
  <proof prover="5"><result status="valid" time="1.87"/></proof>
  </goal>
  <goal name="link&#39;vc.141" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="514"/></proof>
  </goal>
  <goal name="link&#39;vc.142" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="408"/></proof>
  </goal>
  <goal name="link&#39;vc.143" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="1039"/></proof>
  </goal>
  <goal name="link&#39;vc.144" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="415"/></proof>
  </goal>
  <goal name="link&#39;vc.145" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="10.38" steps="28260"/></proof>
  </goal>
  <goal name="link&#39;vc.146" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="1059"/></proof>
  </goal>
  <goal name="link&#39;vc.147" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.83" steps="1721"/></proof>
  </goal>
  <goal name="link&#39;vc.148" expl="type invariant" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.09" steps="414143"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.56" steps="324"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.53" steps="66892"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="link&#39;vc.149" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.17" steps="27888"/></proof>
  </goal>
  <goal name="link&#39;vc.150" expl="postcondition" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.04" steps="86818"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.51" steps="324"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.13" steps="46088"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="link&#39;vc.151" expl="postcondition" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.09" steps="387457"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.60" steps="424"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.23" steps="60017"/></proof>
  <proof prover="5"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="link&#39;vc.152" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.69" steps="2727"/></proof>
  </goal>
  <goal name="link&#39;vc.153" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.59" steps="7499"/></proof>
  </goal>
  <goal name="link&#39;vc.154" expl="write frame child" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.16" steps="488649"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.68" steps="504"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.60" steps="75938"/></proof>
  </goal>
  <goal name="link&#39;vc.155" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.14" steps="2243"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="1.27" steps="126950"/></proof>
  <proof prover="5"><result status="valid" time="3.12"/></proof>
  </goal>
  <goal name="link&#39;vc.156" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="link&#39;vc.156.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.156.0.0" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.76" steps="1466"/></proof>
    </goal>
    <goal name="link&#39;vc.156.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.85" steps="1467"/></proof>
    </goal>
    <goal name="link&#39;vc.156.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.64" steps="766"/></proof>
    </goal>
    <goal name="link&#39;vc.156.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.18" steps="11097"/></proof>
    <proof prover="5"><result status="valid" time="20.07"/></proof>
    </goal>
    <goal name="link&#39;vc.156.0.4" expl="VC for link" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="link&#39;vc.156.0.4.0" expl="VC for link" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="link&#39;vc.156.0.4.0.0" expl="VC for link" proved="true">
      <proof prover="0"><result status="valid" time="0.38" steps="872843"/></proof>
      <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.70" steps="3208"/></proof>
      <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="0.50" steps="75314"/></proof>
      <proof prover="5" timelimit="30"><result status="valid" time="6.97"/></proof>
      </goal>
      <goal name="link&#39;vc.156.0.4.0.1" expl="VC for link" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.62" steps="768"/></proof>
      </goal>
      <goal name="link&#39;vc.156.0.4.0.2" expl="VC for link" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.79" steps="1534"/></proof>
      </goal>
      <goal name="link&#39;vc.156.0.4.0.3" expl="VC for link" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="1.51" steps="118974"/></proof>
      </goal>
      <goal name="link&#39;vc.156.0.4.0.4" expl="VC for link" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="1.40" steps="119009"/></proof>
      </goal>
      <goal name="link&#39;vc.156.0.4.0.5" expl="VC for link" proved="true">
      <proof prover="4" memlimit="9000"><result status="valid" time="1.42" steps="119087"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="link&#39;vc.156.0.5" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.05" steps="1867"/></proof>
    <proof prover="5"><result status="valid" time="0.30"/></proof>
    </goal>
    <goal name="link&#39;vc.156.0.6" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.88" steps="1783"/></proof>
    <proof prover="5"><result status="valid" time="0.36"/></proof>
    </goal>
    <goal name="link&#39;vc.156.0.7" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.82" steps="1469"/></proof>
    <proof prover="5"><result status="valid" time="0.35"/></proof>
    </goal>
    <goal name="link&#39;vc.156.0.8" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.90" steps="1899"/></proof>
    <proof prover="5"><result status="valid" time="0.33"/></proof>
    </goal>
    <goal name="link&#39;vc.156.0.9" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.86" steps="1899"/></proof>
    <proof prover="5"><result status="valid" time="0.17"/></proof>
    </goal>
    <goal name="link&#39;vc.156.0.10" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.09" steps="7799"/></proof>
    <proof prover="5"><result status="valid" time="10.12"/></proof>
    </goal>
    <goal name="link&#39;vc.156.0.11" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.01" steps="2435"/></proof>
    <proof prover="5"><result status="valid" time="0.34"/></proof>
    </goal>
    <goal name="link&#39;vc.156.0.12" expl="VC for link" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.82" steps="3830"/></proof>
    <proof prover="5"><result status="valid" time="16.66"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.157" expl="postcondition" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.10" steps="379448"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.52" steps="334"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.19" steps="50449"/></proof>
  <proof prover="5"><result status="valid" time="6.96"/></proof>
  </goal>
  <goal name="link&#39;vc.158" expl="postcondition" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.03" steps="20579"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.52" steps="331"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.13" steps="46632"/></proof>
  <proof prover="5"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="link&#39;vc.159" expl="postcondition" proved="true">
  <proof prover="0" timelimit="20"><result status="valid" time="0.10" steps="380035"/></proof>
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.55" steps="331"/></proof>
  <proof prover="4" memlimit="9000"><result status="valid" time="0.20" steps="53594"/></proof>
  <proof prover="5"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="link&#39;vc.160" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.41" steps="262"/></proof>
  </goal>
  <goal name="link&#39;vc.161" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="352"/></proof>
  </goal>
  <goal name="link&#39;vc.162" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.48" steps="888"/></proof>
  <proof prover="5"><result status="valid" time="1.45"/></proof>
  </goal>
  <goal name="link&#39;vc.163" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="430"/></proof>
  </goal>
  <goal name="link&#39;vc.164" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="345"/></proof>
  </goal>
  <goal name="link&#39;vc.165" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="888"/></proof>
  </goal>
  <goal name="link&#39;vc.166" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="352"/></proof>
  </goal>
  <goal name="link&#39;vc.167" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="9.16" steps="24244"/></proof>
  </goal>
  <goal name="link&#39;vc.168" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="908"/></proof>
  </goal>
  <goal name="link&#39;vc.169" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.69" steps="1280"/></proof>
  </goal>
  <goal name="link&#39;vc.170" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.41" steps="268"/></proof>
  </goal>
  <goal name="link&#39;vc.171" expl="assertion" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="11.94" steps="26114"/></proof>
  </goal>
  <goal name="link&#39;vc.172" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.34" steps="268"/></proof>
  </goal>
  <goal name="link&#39;vc.173" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.37" steps="353"/></proof>
  </goal>
  <goal name="link&#39;vc.174" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.14" steps="2502"/></proof>
  </goal>
  <goal name="link&#39;vc.175" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.54" steps="429"/></proof>
  </goal>
  <goal name="link&#39;vc.176" expl="write frame child" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.55" steps="431"/></proof>
  </goal>
  <goal name="link&#39;vc.177" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.96" steps="1620"/></proof>
  </goal>
  <goal name="link&#39;vc.178" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="link&#39;vc.178.0" expl="VC for link" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="link&#39;vc.178.0.0" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.55" steps="1112"/></proof>
    </goal>
    <goal name="link&#39;vc.178.0.1" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.54" steps="1111"/></proof>
    </goal>
    <goal name="link&#39;vc.178.0.2" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.45" steps="662"/></proof>
    </goal>
    <goal name="link&#39;vc.178.0.3" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.76" steps="7559"/></proof>
    </goal>
    <goal name="link&#39;vc.178.0.4" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="28.83" steps="121127"/></proof>
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="link&#39;vc.178.0.4.0" expl="VC for link" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="link&#39;vc.178.0.4.0.0" expl="VC for link" proved="true">
      <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.20" steps="2597"/></proof>
      </goal>
      <goal name="link&#39;vc.178.0.4.0.1" expl="VC for link" proved="true">
      <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.46" steps="666"/></proof>
      </goal>
      <goal name="link&#39;vc.178.0.4.0.2" expl="VC for link" proved="true">
      <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.57" steps="1166"/></proof>
      </goal>
      <goal name="link&#39;vc.178.0.4.0.3" expl="VC for link" proved="true">
      <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.12" steps="9113"/></proof>
      </goal>
      <goal name="link&#39;vc.178.0.4.0.4" expl="VC for link" proved="true">
      <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="8.09" steps="22218"/></proof>
      </goal>
      <goal name="link&#39;vc.178.0.4.0.5" expl="VC for link" proved="true">
      <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="8.67" steps="26328"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="link&#39;vc.178.0.5" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.69" steps="1477"/></proof>
    </goal>
    <goal name="link&#39;vc.178.0.6" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.60" steps="1375"/></proof>
    </goal>
    <goal name="link&#39;vc.178.0.7" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.51" steps="759"/></proof>
    </goal>
    <goal name="link&#39;vc.178.0.8" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.58" steps="1339"/></proof>
    </goal>
    <goal name="link&#39;vc.178.0.9" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.62" steps="1339"/></proof>
    </goal>
    <goal name="link&#39;vc.178.0.10" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.61" steps="5206"/></proof>
    </goal>
    <goal name="link&#39;vc.178.0.11" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.78" steps="2040"/></proof>
    </goal>
    <goal name="link&#39;vc.178.0.12" expl="VC for link" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.43" steps="3317"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="link&#39;vc.179" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.39" steps="278"/></proof>
  </goal>
  <goal name="link&#39;vc.180" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.37" steps="275"/></proof>
  </goal>
  <goal name="link&#39;vc.181" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.37" steps="275"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="insert_wr_rgn_eq" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="insert_wr_rgn_eq.0" proved="true">
  <transf name="apply" proved="true" arg1="extensionality1">
   <goal name="insert_wr_rgn_eq.0.0" expl="apply premises" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.06" steps="126"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="insert&#39;vc" expl="VC for insert" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert&#39;vc.0" expl="sntl := self.sntl" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="insert&#39;vc.1" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="86"/></proof>
  </goal>
  <goal name="insert&#39;vc.2" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.03" steps="86"/></proof>
  </goal>
  <goal name="insert&#39;vc.3" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="88"/></proof>
  </goal>
  <goal name="insert&#39;vc.4" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="insert&#39;vc.5" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.04" steps="92"/></proof>
  </goal>
  <goal name="insert&#39;vc.6" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.53" steps="1150"/></proof>
  </goal>
  <goal name="insert&#39;vc.7" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.32" steps="717"/></proof>
  </goal>
  <goal name="insert&#39;vc.8" expl="rep := self.rep" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.86" steps="422"/></proof>
  </goal>
  <goal name="insert&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.79" steps="298"/></proof>
  </goal>
  <goal name="insert&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="439"/></proof>
  </goal>
  <goal name="insert&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.14" steps="1731"/></proof>
  </goal>
  <goal name="insert&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.83" steps="593"/></proof>
  </goal>
  <goal name="insert&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="432"/></proof>
  </goal>
  <goal name="insert&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="1736"/></proof>
  </goal>
  <goal name="insert&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="439"/></proof>
  </goal>
  <goal name="insert&#39;vc.16" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert&#39;vc.16.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.50" steps="292"/></proof>
   </goal>
   <goal name="insert&#39;vc.16.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.77" steps="1171"/></proof>
   </goal>
   <goal name="insert&#39;vc.16.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.79" steps="1324"/></proof>
   </goal>
   <goal name="insert&#39;vc.16.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.79" steps="1330"/></proof>
   </goal>
   <goal name="insert&#39;vc.16.4" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.49" steps="292"/></proof>
   </goal>
   <goal name="insert&#39;vc.16.5" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.02" steps="17519"/></proof>
   </goal>
   <goal name="insert&#39;vc.16.6" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.60" steps="18383"/></proof>
   </goal>
   <goal name="insert&#39;vc.16.7" expl="type invariant" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.05" steps="13264"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.17" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.18" steps="1754"/></proof>
  </goal>
  <goal name="insert&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.50" steps="2530"/></proof>
  </goal>
  <goal name="insert&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.75" steps="304"/></proof>
  </goal>
  <goal name="insert&#39;vc.20" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert&#39;vc.20.0" expl="assertion" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="29.66" steps="42809"/></proof>
   </goal>
   <goal name="insert&#39;vc.20.1" expl="assertion" proved="true">
   <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.07" steps="9018"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.21" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.12" steps="360"/></proof>
  </goal>
  <goal name="insert&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.31" steps="683"/></proof>
  </goal>
  <goal name="insert&#39;vc.23" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.43" steps="1596"/></proof>
  </goal>
  <goal name="insert&#39;vc.24" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.21" steps="721"/></proof>
  </goal>
  <goal name="insert&#39;vc.25" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.30" steps="536"/></proof>
  </goal>
  <goal name="insert&#39;vc.26" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.51" steps="1596"/></proof>
  </goal>
  <goal name="insert&#39;vc.27" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.32" steps="682"/></proof>
  </goal>
  <goal name="insert&#39;vc.28" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.68" steps="2180"/></proof>
  </goal>
  <goal name="insert&#39;vc.29" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.56" steps="1606"/></proof>
  </goal>
  <goal name="insert&#39;vc.30" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="19.35" steps="28083"/></proof>
  </goal>
  <goal name="insert&#39;vc.31" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.12" steps="366"/></proof>
  </goal>
  <goal name="insert&#39;vc.32" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="9.13" steps="14642"/></proof>
  <transf name="unfold" proved="true" arg1="repOk">
   <goal name="insert&#39;vc.32.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.32.0.0" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="1.29" steps="2220"/></proof>
    </goal>
    <goal name="insert&#39;vc.32.0.1" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.04" steps="1648"/></proof>
    </goal>
    <goal name="insert&#39;vc.32.0.2" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.01" steps="1434"/></proof>
    </goal>
    <goal name="insert&#39;vc.32.0.3" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.81" steps="8067"/></proof>
    </goal>
    <goal name="insert&#39;vc.32.0.4" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.18" steps="3516"/></proof>
    </goal>
    <goal name="insert&#39;vc.32.0.5" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.52" steps="2807"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.33" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.25" steps="577"/></proof>
  </goal>
  <goal name="insert&#39;vc.34" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.73" steps="2657"/></proof>
  </goal>
  <goal name="insert&#39;vc.35" expl="assertion" proved="true">
  <proof prover="4" timelimit="45"><result status="valid" time="14.17" steps="784124"/></proof>
  </goal>
  <goal name="insert&#39;vc.36" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.30" steps="5795"/></proof>
  </goal>
  <goal name="insert&#39;vc.37" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.11" steps="3531"/></proof>
  </goal>
  <goal name="insert&#39;vc.38" expl="assertion" proved="true">
  <transf name="unfold" proved="true" arg1="nodeP">
   <goal name="insert&#39;vc.38.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.38.0.0" expl="VC for insert" proved="true">
    <proof prover="1"><result status="valid" time="17.94" steps="24863"/></proof>
    </goal>
    <goal name="insert&#39;vc.38.0.1" expl="VC for insert" proved="true">
    <proof prover="1"><result status="valid" time="12.84" steps="22041"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.39" expl="hd := self.head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.34" steps="553"/></proof>
  </goal>
  <goal name="insert&#39;vc.40" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.80" steps="428"/></proof>
  </goal>
  <goal name="insert&#39;vc.41" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.09" steps="1189"/></proof>
  </goal>
  <goal name="insert&#39;vc.42" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.21" steps="1926"/></proof>
  </goal>
  <goal name="insert&#39;vc.43" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.78" steps="867"/></proof>
  </goal>
  <goal name="insert&#39;vc.44" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.77" steps="638"/></proof>
  </goal>
  <goal name="insert&#39;vc.45" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.27" steps="1926"/></proof>
  </goal>
  <goal name="insert&#39;vc.46" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.10" steps="1197"/></proof>
  </goal>
  <goal name="insert&#39;vc.47" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.94" steps="3949"/></proof>
  </goal>
  <goal name="insert&#39;vc.48" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.27" steps="1936"/></proof>
  </goal>
  <goal name="insert&#39;vc.49" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="9.39" steps="19467"/></proof>
  </goal>
  <goal name="insert&#39;vc.50" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.76" steps="434"/></proof>
  </goal>
  <goal name="insert&#39;vc.51" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.95" steps="7078"/></proof>
  </goal>
  <goal name="insert&#39;vc.52" expl="sz := self.size" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.01" steps="642"/></proof>
  </goal>
  <goal name="insert&#39;vc.53" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.64" steps="488"/></proof>
  </goal>
  <goal name="insert&#39;vc.54" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.85" steps="1545"/></proof>
  </goal>
  <goal name="insert&#39;vc.55" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.97" steps="2166"/></proof>
  </goal>
  <goal name="insert&#39;vc.56" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.60" steps="980"/></proof>
  </goal>
  <goal name="insert&#39;vc.57" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.67" steps="727"/></proof>
  </goal>
  <goal name="insert&#39;vc.58" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.06" steps="2166"/></proof>
  </goal>
  <goal name="insert&#39;vc.59" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.80" steps="1575"/></proof>
  </goal>
  <goal name="insert&#39;vc.60" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.30" steps="5704"/></proof>
  </goal>
  <goal name="insert&#39;vc.61" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.03" steps="2176"/></proof>
  </goal>
  <goal name="insert&#39;vc.62" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="8.15" steps="15522"/></proof>
  </goal>
  <goal name="insert&#39;vc.63" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.51" steps="494"/></proof>
  </goal>
  <goal name="insert&#39;vc.64" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.38" steps="492"/></proof>
  </goal>
  <goal name="insert&#39;vc.65" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.47" steps="712"/></proof>
  </goal>
  <goal name="insert&#39;vc.66" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.51" steps="652"/></proof>
  </goal>
  <goal name="insert&#39;vc.67" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.40" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.68" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="2.44" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.69" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="2.44" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.70" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="2.50" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.71" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.42" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.72" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.59" steps="4080"/></proof>
  </goal>
  <goal name="insert&#39;vc.73" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.62" steps="4087"/></proof>
  </goal>
  <goal name="insert&#39;vc.74" expl="write frame head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.75" steps="775"/></proof>
  </goal>
  <goal name="insert&#39;vc.75" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.80" steps="4087"/></proof>
  </goal>
  <goal name="insert&#39;vc.76" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="2.51" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.77" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="2.40" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.78" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.76" steps="796"/></proof>
  </goal>
  <goal name="insert&#39;vc.79" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="2.39" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.80" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.89" steps="1632"/></proof>
  </goal>
  <goal name="insert&#39;vc.81" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="2.39" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.82" expl="write frame size" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.75" steps="779"/></proof>
  </goal>
  <goal name="insert&#39;vc.83" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="2.50" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.84" expl="write frame length" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.51" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.85" expl="write frame key" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.93" steps="1634"/></proof>
  </goal>
  <goal name="insert&#39;vc.86" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="2.39" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.87" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="2.38" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.88" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="2.49" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.89" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="2.41" steps="500"/></proof>
  </goal>
  <goal name="insert&#39;vc.90" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="2.44" steps="500"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.30" steps="59743"/></proof>
  </goal>
  <goal name="insert&#39;vc.91" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.71" steps="6015"/></proof>
  </goal>
  <goal name="insert&#39;vc.92" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.68" steps="3838"/></proof>
  </goal>
  <goal name="insert&#39;vc.93" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.54" steps="500"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.34" steps="60436"/></proof>
  </goal>
  <goal name="insert&#39;vc.94" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.59" steps="502"/></proof>
  </goal>
  <goal name="insert&#39;vc.95" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.48" steps="502"/></proof>
  </goal>
  <goal name="insert&#39;vc.96" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.42" steps="503"/></proof>
  </goal>
  <goal name="insert&#39;vc.97" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="2.44" steps="6355"/></proof>
  </goal>
  <goal name="insert&#39;vc.98" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="insert&#39;vc.98.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.98.0.0" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.00" steps="5340"/></proof>
    </goal>
    <goal name="insert&#39;vc.98.0.1" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.92" steps="6665"/></proof>
    </goal>
    <goal name="insert&#39;vc.98.0.2" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.81" steps="7144"/></proof>
    </goal>
    <goal name="insert&#39;vc.98.0.3" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.13" steps="23150"/></proof>
    </goal>
    <goal name="insert&#39;vc.98.0.4" expl="VC for insert" proved="true">
    <transf name="assert" proved="true" arg1="(repOk s self)">
     <goal name="insert&#39;vc.98.0.4.0" expl="asserted formula" proved="true">
     <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="11.99" steps="20699"/></proof>
     </goal>
     <goal name="insert&#39;vc.98.0.4.1" expl="VC for insert" proved="true">
     <transf name="case" proved="true" arg1="(pq = self)">
      <goal name="insert&#39;vc.98.0.4.1.0" expl="true case" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.30" steps="494"/></proof>
      </goal>
      <goal name="insert&#39;vc.98.0.4.1.1" expl="false case" proved="true">
      <transf name="unfold" proved="true" arg1="repOk">
       <goal name="insert&#39;vc.98.0.4.1.1.0" expl="VC for insert" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="insert&#39;vc.98.0.4.1.1.0.0" expl="VC for insert" proved="true">
        <proof prover="0"><result status="valid" time="1.36" steps="1639481"/></proof>
        <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="40.86" steps="2021150"/></proof>
        </goal>
        <goal name="insert&#39;vc.98.0.4.1.1.0.1" expl="VC for insert" proved="true">
        <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.57" steps="5211"/></proof>
        <proof prover="5"><result status="valid" time="6.15"/></proof>
        </goal>
        <goal name="insert&#39;vc.98.0.4.1.1.0.2" expl="VC for insert" proved="true">
        <proof prover="0" timelimit="20"><result status="valid" time="0.19" steps="627157"/></proof>
        <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="19.46" steps="23848"/></proof>
        <proof prover="4" memlimit="9000"><result status="valid" time="8.39" steps="727919"/></proof>
        <proof prover="5"><result status="valid" time="6.45"/></proof>
        </goal>
        <goal name="insert&#39;vc.98.0.4.1.1.0.3" expl="VC for insert" proved="true">
        <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires">
         <goal name="insert&#39;vc.98.0.4.1.1.0.3.0" expl="VC for insert" proved="true">
         <transf name="split_premise_full" proved="true" >
          <goal name="insert&#39;vc.98.0.4.1.1.0.3.0.0" expl="VC for insert" proved="true">
          <proof prover="4" memlimit="9000"><result status="valid" time="6.15" steps="349052"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert&#39;vc.98.0.4.1.1.0.4" expl="VC for insert" proved="true">
        <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires">
         <goal name="insert&#39;vc.98.0.4.1.1.0.4.0" expl="VC for insert" proved="true">
         <transf name="split_premise_full" proved="true" >
          <goal name="insert&#39;vc.98.0.4.1.1.0.4.0.0" expl="VC for insert" proved="true">
          <proof prover="4" memlimit="9000"><result status="valid" time="5.76" steps="346905"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert&#39;vc.98.0.4.1.1.0.5" expl="VC for insert" proved="true">
        <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires">
         <goal name="insert&#39;vc.98.0.4.1.1.0.5.0" expl="VC for insert" proved="true">
         <transf name="split_premise_full" proved="true" >
          <goal name="insert&#39;vc.98.0.4.1.1.0.5.0.0" expl="VC for insert" proved="true">
          <proof prover="4" memlimit="9000"><result status="valid" time="5.75" steps="349169"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.98.0.5" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="9.35" steps="8443"/></proof>
    </goal>
    <goal name="insert&#39;vc.98.0.6" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.78" steps="7361"/></proof>
    </goal>
    <goal name="insert&#39;vc.98.0.7" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.63" steps="7033"/></proof>
    </goal>
    <goal name="insert&#39;vc.98.0.8" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.89" steps="5122"/></proof>
    </goal>
    <goal name="insert&#39;vc.98.0.9" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.95" steps="6649"/></proof>
    </goal>
    <goal name="insert&#39;vc.98.0.10" expl="VC for insert" proved="true">
    <transf name="assert" proved="true" arg1="(nodeP s s.heap.rep[self])">
     <goal name="insert&#39;vc.98.0.10.0" expl="asserted formula" proved="true">
     <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.72" steps="5762"/></proof>
     </goal>
     <goal name="insert&#39;vc.98.0.10.1" expl="VC for insert" proved="true">
     <transf name="case" proved="true" arg1="(pq = self)">
      <goal name="insert&#39;vc.98.0.10.1.0" expl="true case" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.20" steps="494"/></proof>
      </goal>
      <goal name="insert&#39;vc.98.0.10.1.1" expl="false case" proved="true">
      <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires">
       <goal name="insert&#39;vc.98.0.10.1.1.0" expl="false case" proved="true">
       <transf name="inline_all" proved="true" >
        <goal name="insert&#39;vc.98.0.10.1.1.0.0" expl="false case" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="insert&#39;vc.98.0.10.1.1.0.0.0" expl="false case" proved="true">
         <proof prover="5"><result status="valid" time="0.86"/></proof>
         </goal>
         <goal name="insert&#39;vc.98.0.10.1.1.0.0.1" expl="false case" proved="true">
         <proof prover="5"><result status="valid" time="0.84"/></proof>
         </goal>
         <goal name="insert&#39;vc.98.0.10.1.1.0.0.2" expl="false case" proved="true">
         <proof prover="5"><result status="valid" time="0.87"/></proof>
         </goal>
         <goal name="insert&#39;vc.98.0.10.1.1.0.0.3" expl="false case" proved="true">
         <proof prover="5"><result status="valid" time="0.82"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.98.0.11" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.41" steps="6474"/></proof>
    </goal>
    <goal name="insert&#39;vc.98.0.12" expl="VC for insert" proved="true">
    <transf name="unfold" proved="true" arg1="strongDisjoint">
     <goal name="insert&#39;vc.98.0.12.0" expl="VC for insert" proved="true">
     <transf name="introduce_premises" proved="true" >
      <goal name="insert&#39;vc.98.0.12.0.0" expl="VC for insert" proved="true">
      <transf name="case" proved="true" arg1="(p = self)">
       <goal name="insert&#39;vc.98.0.12.0.0.0" expl="true case" proved="true">
       <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="8.00" steps="8520"/></proof>
       </goal>
       <goal name="insert&#39;vc.98.0.12.0.0.1" expl="false case" proved="true">
       <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="29.47" steps="42383"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.99" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.37" steps="561"/></proof>
  </goal>
  <goal name="insert&#39;vc.100" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.13" steps="380"/></proof>
  </goal>
  <goal name="insert&#39;vc.101" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.45" steps="976"/></proof>
  </goal>
  <goal name="insert&#39;vc.102" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.45" steps="625"/></proof>
  </goal>
  <goal name="insert&#39;vc.103" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.24" steps="588"/></proof>
  </goal>
  <goal name="insert&#39;vc.104" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.10" steps="386"/></proof>
  </goal>
  <goal name="insert&#39;vc.105" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.16" steps="386"/></proof>
  </goal>
  <goal name="insert&#39;vc.106" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.85" steps="2267"/></proof>
  </goal>
  <goal name="insert&#39;vc.107" expl="tmp := link(self,hd,result)" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.22" steps="391"/></proof>
  </goal>
  <goal name="insert&#39;vc.108" expl="tmp := link(self,hd,result)" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="insert&#39;vc.108.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.108.0.0" expl="VC for insert" proved="true">
    <proof prover="5"><result status="valid" time="11.89"/></proof>
    </goal>
    <goal name="insert&#39;vc.108.0.1" expl="VC for insert" proved="true">
    <proof prover="5"><result status="valid" time="5.23"/></proof>
    </goal>
    <goal name="insert&#39;vc.108.0.2" expl="VC for insert" proved="true">
    <proof prover="5"><result status="valid" time="4.81"/></proof>
    </goal>
    <goal name="insert&#39;vc.108.0.3" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(pq = self)">
     <goal name="insert&#39;vc.108.0.3.0" expl="true case" proved="true">
     <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
      <goal name="insert&#39;vc.108.0.3.0.0" expl="true case" proved="true">
      <transf name="split_premise_full" proved="true" >
       <goal name="insert&#39;vc.108.0.3.0.0.0" expl="true case" proved="true">
       <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="11.82" steps="18099"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert&#39;vc.108.0.3.1" expl="false case" proved="true">
     <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
      <goal name="insert&#39;vc.108.0.3.1.0" expl="false case" proved="true">
      <transf name="split_premise_full" proved="true" >
       <goal name="insert&#39;vc.108.0.3.1.0.0" expl="false case" proved="true">
       <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="14.84" steps="20945"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.108.0.4" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(pq = self)">
     <goal name="insert&#39;vc.108.0.4.0" expl="true case" proved="true">
     <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.69" steps="383"/></proof>
     </goal>
     <goal name="insert&#39;vc.108.0.4.1" expl="false case" proved="true">
     <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
      <goal name="insert&#39;vc.108.0.4.1.0" expl="false case" proved="true">
      <transf name="split_premise_full" proved="true" >
       <goal name="insert&#39;vc.108.0.4.1.0.0" expl="false case" proved="true">
       <transf name="unfold" proved="true" arg1="repOk">
        <goal name="insert&#39;vc.108.0.4.1.0.0.0" expl="VC for insert" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="insert&#39;vc.108.0.4.1.0.0.0.0" expl="VC for insert" proved="true">
         <proof prover="0"><result status="valid" time="0.70" steps="1165495"/></proof>
         <proof prover="1" timelimit="30" memlimit="9000"><result status="valid" time="17.49" steps="12553"/></proof>
         <proof prover="5" timelimit="30"><result status="valid" time="49.00"/></proof>
         </goal>
         <goal name="insert&#39;vc.108.0.4.1.0.0.0.1" expl="VC for insert" proved="true">
         <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.47" steps="1727"/></proof>
         </goal>
         <goal name="insert&#39;vc.108.0.4.1.0.0.0.2" expl="VC for insert" proved="true">
         <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.78" steps="3393"/></proof>
         </goal>
         <goal name="insert&#39;vc.108.0.4.1.0.0.0.3" expl="VC for insert" proved="true">
         <proof prover="4" memlimit="9000"><result status="valid" time="16.48" steps="1204126"/></proof>
         </goal>
         <goal name="insert&#39;vc.108.0.4.1.0.0.0.4" expl="VC for insert" proved="true">
         <proof prover="4" memlimit="9000"><result status="valid" time="16.79" steps="1197592"/></proof>
         </goal>
         <goal name="insert&#39;vc.108.0.4.1.0.0.0.5" expl="VC for insert" proved="true">
         <proof prover="4" memlimit="9000"><result status="valid" time="17.56" steps="1206469"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.108.0.5" expl="VC for insert" proved="true">
    <proof prover="5"><result status="valid" time="10.91"/></proof>
    </goal>
    <goal name="insert&#39;vc.108.0.6" expl="VC for insert" proved="true">
    <proof prover="5"><result status="valid" time="5.69"/></proof>
    </goal>
    <goal name="insert&#39;vc.108.0.7" expl="VC for insert" proved="true">
    <proof prover="5"><result status="valid" time="11.48"/></proof>
    </goal>
    <goal name="insert&#39;vc.108.0.8" expl="VC for insert" proved="true">
    <proof prover="5"><result status="valid" time="10.68"/></proof>
    </goal>
    <goal name="insert&#39;vc.108.0.9" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="1.91" steps="3518"/></proof>
    <proof prover="5"><result status="valid" time="10.90"/></proof>
    </goal>
    <goal name="insert&#39;vc.108.0.10" expl="VC for insert" proved="true">
    <proof prover="0" timelimit="20"><result status="valid" time="0.09" steps="410110"/></proof>
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="0.65" steps="383"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="0.21" steps="53760"/></proof>
    </goal>
    <goal name="insert&#39;vc.108.0.11" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.46" steps="4579"/></proof>
    <proof prover="5"><result status="valid" time="12.42"/></proof>
    </goal>
    <goal name="insert&#39;vc.108.0.12" expl="VC for insert" proved="true">
    <transf name="unfold" proved="true" arg1="strongDisjoint">
     <goal name="insert&#39;vc.108.0.12.0" expl="VC for insert" proved="true">
     <transf name="introduce_premises" proved="true" >
      <goal name="insert&#39;vc.108.0.12.0.0" expl="VC for insert" proved="true">
      <transf name="case" proved="true" arg1="(p = self)">
       <goal name="insert&#39;vc.108.0.12.0.0.0" expl="true case" proved="true">
       <proof prover="0" timelimit="20"><result status="valid" time="1.87" steps="1976179"/></proof>
       <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="7.31" steps="6603"/></proof>
       <proof prover="4" memlimit="9000"><result status="valid" time="3.28" steps="292422"/></proof>
       </goal>
       <goal name="insert&#39;vc.108.0.12.0.0.1" expl="false case" proved="true">
       <transf name="case" proved="true" arg1="(q = self)">
        <goal name="insert&#39;vc.108.0.12.0.0.1.0" expl="false case (true case)" proved="true">
        <proof prover="0" timelimit="20"><result status="valid" time="0.25" steps="691722"/></proof>
        </goal>
        <goal name="insert&#39;vc.108.0.12.0.0.1.1" expl="false case" proved="true">
        <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="8.27" steps="7794"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.109" expl="assertion" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.22" steps="557"/></proof>
  </goal>
  <goal name="insert&#39;vc.110" expl="sz := self.size" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.69" steps="713"/></proof>
  </goal>
  <goal name="insert&#39;vc.111" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.02" steps="544"/></proof>
  </goal>
  <goal name="insert&#39;vc.112" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.37" steps="1066"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.92" steps="92476"/></proof>
  </goal>
  <goal name="insert&#39;vc.113" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.65" steps="1898"/></proof>
  </goal>
  <goal name="insert&#39;vc.114" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.17" steps="923"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="1.67" steps="153304"/></proof>
  </goal>
  <goal name="insert&#39;vc.115" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.16" steps="799"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.74" steps="91809"/></proof>
  </goal>
  <goal name="insert&#39;vc.116" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.90" steps="1895"/></proof>
  </goal>
  <goal name="insert&#39;vc.117" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.39" steps="1067"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.86" steps="94450"/></proof>
  </goal>
  <goal name="insert&#39;vc.118" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.71" steps="1533"/></proof>
  </goal>
  <goal name="insert&#39;vc.119" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.74" steps="1916"/></proof>
  </goal>
  <goal name="insert&#39;vc.120" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="16.55" steps="24751"/></proof>
  </goal>
  <goal name="insert&#39;vc.121" expl="type invariant" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.12" steps="550"/></proof>
  </goal>
  <goal name="insert&#39;vc.122" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.01" steps="546"/></proof>
  </goal>
  <goal name="insert&#39;vc.123" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.21" steps="783"/></proof>
  </goal>
  <goal name="insert&#39;vc.124" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.27" steps="724"/></proof>
  </goal>
  <goal name="insert&#39;vc.125" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.05" steps="554"/></proof>
  </goal>
  <goal name="insert&#39;vc.126" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="3.05" steps="554"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.32" steps="57850"/></proof>
  </goal>
  <goal name="insert&#39;vc.127" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="3.17" steps="554"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.32" steps="57989"/></proof>
  </goal>
  <goal name="insert&#39;vc.128" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="3.15" steps="554"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.31" steps="58275"/></proof>
  </goal>
  <goal name="insert&#39;vc.129" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.00" steps="554"/></proof>
  </goal>
  <goal name="insert&#39;vc.130" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.27" steps="4773"/></proof>
  </goal>
  <goal name="insert&#39;vc.131" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.38" steps="5175"/></proof>
  </goal>
  <goal name="insert&#39;vc.132" expl="write frame head" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.60" steps="848"/></proof>
  </goal>
  <goal name="insert&#39;vc.133" expl="write frame child" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.48" steps="5176"/></proof>
  </goal>
  <goal name="insert&#39;vc.134" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="3.11" steps="554"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.29" steps="58202"/></proof>
  </goal>
  <goal name="insert&#39;vc.135" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="3.07" steps="554"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.30" steps="58333"/></proof>
  </goal>
  <goal name="insert&#39;vc.136" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.47" steps="870"/></proof>
  </goal>
  <goal name="insert&#39;vc.137" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="3.07" steps="554"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.33" steps="59185"/></proof>
  </goal>
  <goal name="insert&#39;vc.138" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.70" steps="1967"/></proof>
  </goal>
  <goal name="insert&#39;vc.139" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="3.02" steps="554"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.33" steps="59501"/></proof>
  </goal>
  <goal name="insert&#39;vc.140" expl="write frame size" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.53" steps="853"/></proof>
  </goal>
  <goal name="insert&#39;vc.141" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="3.10" steps="554"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.30" steps="59798"/></proof>
  </goal>
  <goal name="insert&#39;vc.142" expl="write frame length" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.11" steps="554"/></proof>
  </goal>
  <goal name="insert&#39;vc.143" expl="write frame key" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.83" steps="1969"/></proof>
  </goal>
  <goal name="insert&#39;vc.144" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="3.04" steps="554"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.32" steps="60234"/></proof>
  </goal>
  <goal name="insert&#39;vc.145" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="3.03" steps="554"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.33" steps="60333"/></proof>
  </goal>
  <goal name="insert&#39;vc.146" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="3.09" steps="554"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.36" steps="60466"/></proof>
  </goal>
  <goal name="insert&#39;vc.147" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="3.14" steps="554"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.32" steps="60640"/></proof>
  </goal>
  <goal name="insert&#39;vc.148" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="3.11" steps="554"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.32" steps="60750"/></proof>
  </goal>
  <goal name="insert&#39;vc.149" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="17.84" steps="22776"/></proof>
  </goal>
  <goal name="insert&#39;vc.150" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.24" steps="4679"/></proof>
  </goal>
  <goal name="insert&#39;vc.151" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.23" steps="556"/></proof>
  <proof prover="4" timelimit="45"><result status="valid" time="0.33" steps="61445"/></proof>
  </goal>
  <goal name="insert&#39;vc.152" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.28" steps="558"/></proof>
  </goal>
  <goal name="insert&#39;vc.153" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.08" steps="556"/></proof>
  </goal>
  <goal name="insert&#39;vc.154" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="3.17" steps="557"/></proof>
  </goal>
  <goal name="insert&#39;vc.155" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="4.29" steps="9144"/></proof>
  </goal>
  <goal name="insert&#39;vc.156" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="insert&#39;vc.156.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.156.0.0" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="4.70" steps="8432"/></proof>
    <proof prover="5"><result status="valid" time="1.13"/></proof>
    </goal>
    <goal name="insert&#39;vc.156.0.1" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="5.76" steps="9106"/></proof>
    <proof prover="5"><result status="valid" time="0.85"/></proof>
    </goal>
    <goal name="insert&#39;vc.156.0.2" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.03" steps="1588"/></proof>
    </goal>
    <goal name="insert&#39;vc.156.0.3" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(pq = self)">
     <goal name="insert&#39;vc.156.0.3.0" expl="true case" proved="true">
     <proof prover="0" timelimit="20"><result status="valid" time="0.57" steps="970980"/></proof>
     <proof prover="4" memlimit="9000"><result status="valid" time="1.73" steps="164479"/></proof>
     <proof prover="5"><result status="valid" time="18.56"/></proof>
     </goal>
     <goal name="insert&#39;vc.156.0.3.1" expl="false case" proved="true">
     <transf name="unfold" proved="true" arg1="sntlOk">
      <goal name="insert&#39;vc.156.0.3.1.0" expl="VC for insert" proved="true">
      <transf name="introduce_premises" proved="true" >
       <goal name="insert&#39;vc.156.0.3.1.0.0" expl="VC for insert" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="insert&#39;vc.156.0.3.1.0.0.0" expl="VC for insert" proved="true">
        <proof prover="0" timelimit="20"><result status="valid" time="0.21" steps="672033"/></proof>
        <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.26" steps="13002"/></proof>
        <proof prover="5"><result status="valid" time="4.57"/></proof>
        </goal>
        <goal name="insert&#39;vc.156.0.3.1.0.0.1" expl="VC for insert" proved="true">
        <proof prover="0" timelimit="20"><result status="valid" time="0.19" steps="672009"/></proof>
        <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="12.17" steps="13039"/></proof>
        <proof prover="5"><result status="valid" time="4.97"/></proof>
        </goal>
        <goal name="insert&#39;vc.156.0.3.1.0.0.2" expl="VC for insert" proved="true">
        <proof prover="0" timelimit="20"><result status="valid" time="0.30" steps="679525"/></proof>
        <proof prover="5"><result status="valid" time="4.97"/></proof>
        </goal>
        <goal name="insert&#39;vc.156.0.3.1.0.0.3" expl="VC for insert" proved="true">
        <proof prover="0" timelimit="20"><result status="valid" time="0.20" steps="679525"/></proof>
        <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="14.90" steps="17728"/></proof>
        <proof prover="5"><result status="valid" time="5.08"/></proof>
        </goal>
        <goal name="insert&#39;vc.156.0.3.1.0.0.4" expl="VC for insert" proved="true">
        <proof prover="0" timelimit="20"><result status="valid" time="0.20" steps="679523"/></proof>
        <proof prover="5"><result status="valid" time="5.58"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.156.0.4" expl="VC for insert" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="insert&#39;vc.156.0.4.0" expl="VC for insert" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert&#39;vc.156.0.4.0.0" expl="VC for insert" proved="true">
      <proof prover="0" timelimit="25"><result status="valid" time="0.90" steps="1337850"/></proof>
      </goal>
      <goal name="insert&#39;vc.156.0.4.0.1" expl="VC for insert" proved="true">
      <proof prover="1" timelimit="20" memlimit="9000"><result status="valid" time="2.01" steps="1582"/></proof>
      </goal>
      <goal name="insert&#39;vc.156.0.4.0.2" expl="VC for insert" proved="true">
      <proof prover="5"><result status="valid" time="1.17"/></proof>
      </goal>
      <goal name="insert&#39;vc.156.0.4.0.3" expl="VC for insert" proved="true">
      <proof prover="0" timelimit="20"><result status="valid" time="0.32" steps="898972"/></proof>
      <proof prover="5"><result status="valid" time="32.20"/></proof>
      </goal>
      <goal name="insert&#39;vc.156.0.4.0.4" expl="VC for insert" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.39" steps="898972"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="29.75"/></proof>
      </goal>
      <goal name="insert&#39;vc.156.0.4.0.5" expl="VC for insert" proved="true">
      <proof prover="0"><result status="valid" time="0.34" steps="898972"/></proof>
      <proof prover="5" timelimit="30"><result status="valid" time="32.07"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.156.0.5" expl="VC for insert" proved="true">
    <proof prover="1"><result status="valid" time="20.89" steps="18340"/></proof>
    <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="20.47" steps="1340824"/></proof>
    </goal>
    <goal name="insert&#39;vc.156.0.6" expl="VC for insert" proved="true">
    <proof prover="1"><result status="valid" time="3.27" steps="6237"/></proof>
    <proof prover="4" memlimit="9000"><result status="valid" time="20.59" steps="1495800"/></proof>
    </goal>
    <goal name="insert&#39;vc.156.0.7" expl="VC for insert" proved="true">
    <proof prover="1"><result status="valid" time="5.20" steps="9338"/></proof>
    </goal>
    <goal name="insert&#39;vc.156.0.8" expl="VC for insert" proved="true">
    <proof prover="1"><result status="valid" time="6.08" steps="9625"/></proof>
    </goal>
    <goal name="insert&#39;vc.156.0.9" expl="VC for insert" proved="true">
    <proof prover="1"><result status="valid" time="5.28" steps="9380"/></proof>
    </goal>
    <goal name="insert&#39;vc.156.0.10" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(pq = self)">
     <goal name="insert&#39;vc.156.0.10.0" expl="true case" proved="true">
     <proof prover="4" timelimit="30" memlimit="9000"><result status="valid" time="2.52" steps="211747"/></proof>
     </goal>
     <goal name="insert&#39;vc.156.0.10.1" expl="false case" proved="true">
     <transf name="unfold" proved="true" arg1="nodeP">
      <goal name="insert&#39;vc.156.0.10.1.0" expl="VC for insert" proved="true">
      <proof prover="1"><result status="valid" time="4.83" steps="6275"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.156.0.11" expl="VC for insert" proved="true">
    <proof prover="1"><result status="valid" time="5.98" steps="11207"/></proof>
    <proof prover="5"><result status="valid" time="1.23"/></proof>
    </goal>
    <goal name="insert&#39;vc.156.0.12" expl="VC for insert" proved="true">
    <transf name="unfold" proved="true" arg1="strongDisjoint">
     <goal name="insert&#39;vc.156.0.12.0" expl="VC for insert" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert&#39;vc.156.0.12.0.0" expl="VC for insert" proved="true">
      <transf name="case" proved="true" arg1="(p = self)">
       <goal name="insert&#39;vc.156.0.12.0.0.0" expl="true case" proved="true">
       <proof prover="0" timelimit="20"><result status="valid" time="2.67" steps="2238768"/></proof>
       <proof prover="4" memlimit="9000"><result status="valid" time="7.39" steps="588030"/></proof>
       </goal>
       <goal name="insert&#39;vc.156.0.12.0.0.1" expl="false case" proved="true">
       <proof prover="1"><result status="valid" time="8.65" steps="14862"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="combineAux&#39;vc" expl="VC for combineAux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="combineAux&#39;vc.0" expl="sntl := self.sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="51"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.1" expl="array size" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="142"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.33" steps="270"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.3" expl=" index is in bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="196"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.4" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="248"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="250"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.6" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="371"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.7" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="1092"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="453"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="364"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="1069"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="371"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="849"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.06" steps="11726"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.77" steps="1257"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="256"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.16" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="2.79" steps="4702"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.17" expl="current := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="378"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="260"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.19" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="263"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.20" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="408"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.21" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="269"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.22" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.23" steps="2553"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.23" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="271"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.24" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="19.88" steps="6073"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.25" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.45" steps="3206"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.26" expl="loop invariant init" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.26.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.26.0.0" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="0.89" steps="2484"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.26.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="0.93" steps="2328"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.26.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="0.61" steps="1648"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.26.0.3" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="34.82" steps="12727"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.26.0.4" expl="VC for combineAux" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="4.41"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.26.0.5" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="32.42" steps="9369"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.26.0.6" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="0.62" steps="1822"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.26.0.7" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="0.88" steps="2494"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.26.0.8" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="0.89" steps="2614"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.26.0.9" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="0.89" steps="2559"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.26.0.10" expl="VC for combineAux" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="6.81"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.26.0.11" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="1.37" steps="4109"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.26.0.12" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="2.37" steps="4401"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.27" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.82" steps="468"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.28" expl=" index is in bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="446"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.29" expl="tmp := current.prev" proved="true">
  <proof prover="1"><result status="valid" time="2.84" steps="3877"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.30" expl="current := current.sibling" proved="true">
  <proof prover="1"><result status="valid" time="3.69" steps="4640"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.31" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.63" steps="440"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.32" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.89" steps="893"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.33" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.35" steps="2110"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.34" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.85" steps="1007"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.35" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.80" steps="625"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.36" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.46" steps="3051"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.37" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.96" steps="903"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.38" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="41.91" steps="69016"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.39" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="24.50" steps="38500"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.40" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.38" steps="4321"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.41" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.65" steps="446"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="1.68" steps="444"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="1.59" steps="445"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.44" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="5.67" steps="8406"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.45" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="7.17" steps="11814"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.46" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="4.71" steps="5781"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.47" expl="loop invariant preservation" proved="true">
  <proof prover="4" timelimit="45"><result status="valid" time="1.87" steps="244201"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.48" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="1.99" steps="1446"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.49" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="3.53" steps="4533"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.50" expl="loop invariant preservation" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.50.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.50.0.0" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="2.44" steps="4202"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.50.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="2.59" steps="4203"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.50.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="1.24" steps="1080"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.50.0.3" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="sntlOk">
     <goal name="combineAux&#39;vc.50.0.3.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.50.0.3.0.0" expl="VC for combineAux" proved="true">
      <proof prover="1"><result status="valid" time="43.34" steps="18816"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.50.0.3.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1"><result status="valid" time="43.10" steps="18816"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.50.0.3.0.2" expl="VC for combineAux" proved="true">
      <proof prover="1"><result status="valid" time="35.90" steps="26386"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.50.0.3.0.3" expl="VC for combineAux" proved="true">
      <proof prover="1"><result status="valid" time="39.88" steps="17593"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.50.0.3.0.4" expl="VC for combineAux" proved="true">
      <proof prover="1"><result status="valid" time="42.73" steps="26253"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.50.0.4" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="combineAux&#39;vc.50.0.4.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.50.0.4.0.0" expl="VC for combineAux" proved="true">
      <proof prover="1"><result status="valid" time="14.29" steps="18236"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.50.0.4.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1"><result status="valid" time="1.22" steps="1076"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.50.0.4.0.2" expl="VC for combineAux" proved="true">
      <proof prover="1"><result status="valid" time="3.84" steps="6682"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.50.0.4.0.3" expl="VC for combineAux" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="1.22"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.50.0.4.0.4" expl="VC for combineAux" proved="true">
      <transf name="subst_all" proved="true" >
       <goal name="combineAux&#39;vc.50.0.4.0.4.0" expl="VC for combineAux" proved="true">
       <transf name="case" proved="true" arg1="(pq = self)">
        <goal name="combineAux&#39;vc.50.0.4.0.4.0.0" expl="true case" proved="true">
        <proof prover="1"><result status="valid" time="42.03" steps="25695"/></proof>
        </goal>
        <goal name="combineAux&#39;vc.50.0.4.0.4.0.1" expl="false case" proved="true">
        <proof prover="4" timelimit="45"><result status="valid" time="16.61" steps="1935265"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="combineAux&#39;vc.50.0.4.0.5" expl="VC for combineAux" proved="true">
      <proof prover="1"><result status="valid" time="6.64" steps="11312"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.50.0.5" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="36.28" steps="18707"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.50.0.6" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="1.98" steps="3835"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.50.0.7" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="2.42" steps="4214"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.50.0.8" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="2.44" steps="4321"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.50.0.9" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="2.66" steps="4335"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.50.0.10" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="LoopInvariant8">
     <goal name="combineAux&#39;vc.50.0.10.0" expl="VC for combineAux" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="combineAux&#39;vc.50.0.10.0.0" expl="VC for combineAux" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="combineAux&#39;vc.50.0.10.0.0.0" expl="VC for combineAux" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="combineAux&#39;vc.50.0.10.0.0.0.0" expl="VC for combineAux" proved="true">
        <proof prover="1"><result status="valid" time="10.65" steps="10859"/></proof>
        </goal>
        <goal name="combineAux&#39;vc.50.0.10.0.0.0.1" expl="VC for combineAux" proved="true">
        <proof prover="1"><result status="valid" time="11.30" steps="10943"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.50.0.11" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="3.35" steps="6010"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.50.0.12" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="4.24" steps="6419"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.51" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.89" steps="464"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.52" expl=" index is in bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="442"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.53" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.31" steps="570"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.54" expl="tmp := trees.{0} ( index is in bounds)" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="514"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.55" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.18" steps="386"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.56" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.31" steps="846"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.57" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.57.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.72" steps="378"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.57.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.78" steps="378"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.57.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.73" steps="378"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.57.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.79" steps="378"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.57.4" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.57.4.0" expl="true case (type invariant)" proved="true">
    <proof prover="1"><result status="valid" time="0.80" steps="385"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.57.4.1" expl="false case (type invariant)" proved="true">
    <proof prover="1"><result status="valid" time="1.03" steps="1006"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.58" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.30" steps="853"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.59" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.21" steps="573"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.60" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.84" steps="2203"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.61" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="854"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.62" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.31" steps="2879"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.63" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="7.26" steps="16174"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.64" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.77" steps="4287"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.65" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.25" steps="392"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.66" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="2.76" steps="3566"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.67" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="2.48" steps="2394"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.68" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.38" steps="961"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.69" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.52" steps="1438"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.70" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.39" steps="971"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.71" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="3.43" steps="5041"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.72" expl="loop invariant init" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.72.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.72.0.0" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="2.82" steps="4792"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="2.78" steps="4793"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="1.08" steps="1106"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.3" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="32.24" steps="16175"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.4" expl="VC for combineAux" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="12.51"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.5" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="37.24" steps="13104"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.6" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="1.61" steps="3348"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.7" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="2.90" steps="4791"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.8" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="2.72" steps="4827"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.9" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="2.78" steps="4917"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.10" expl="VC for combineAux" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="16.83"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.11" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="4.07" steps="7111"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.72.0.12" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="6.08" steps="8440"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.73" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.07" steps="398"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.74" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.10" steps="399"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.75" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.71" steps="668"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.76" expl="fst := trees.{i} ( index is in bounds)" proved="true">
  <proof prover="1"><result status="valid" time="1.56" steps="596"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.77" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="713"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.78" expl="snd := trees.{i + 1} ( index is in bounds)" proved="true">
  <proof prover="1"><result status="valid" time="1.57" steps="604"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.79" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.71" steps="725"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.80" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.50" steps="456"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.81" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.82" steps="758"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.82" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.79" steps="1152"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.83" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.83" steps="766"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.84" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.86" steps="1272"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.85" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.51" steps="464"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.86" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.57" steps="551"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.87" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.52" steps="469"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.88" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.52" steps="469"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.89" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.46" steps="822"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.90" expl=" index is in bounds" proved="true">
  <proof prover="1"><result status="valid" time="2.20" steps="697"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.91" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.01" steps="571"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.92" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.11" steps="1175"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.93" expl="type invariant" proved="true">
  <transf name="case" proved="true" arg1="(p = trees)">
   <goal name="combineAux&#39;vc.93.0" expl="true case (type invariant)" proved="true">
   <proof prover="1"><result status="valid" time="3.11" steps="578"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.93.1" expl="false case (type invariant)" proved="true">
   <proof prover="1"><result status="valid" time="3.64" steps="2058"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.94" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.18" steps="982"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.95" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.97" steps="849"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.96" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.70" steps="2056"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.97" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.13" steps="1175"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.98" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.44" steps="1666"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.99" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.99.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="3.96" steps="4571"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.99.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.54" steps="559"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.99.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.98" steps="1572"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.99.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.57" steps="559"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.99.4" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.99.4.0" expl="true case (type invariant)" proved="true">
    <proof prover="1"><result status="valid" time="25.58" steps="34561"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.99.4.1" expl="false case (type invariant)" proved="true">
    <proof prover="1"><result status="valid" time="7.36" steps="11986"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.100" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.37" steps="3042"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.101" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.92" steps="577"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.102" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="9.40" steps="10686"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.103" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="13.82" steps="14299"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.104" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="3.48" steps="2112"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.105" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="4.29" steps="3538"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.106" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="2.99" steps="573"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.107" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="37.83" steps="37253"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.108" expl="loop invariant preservation" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.108.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.108.0.0" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="5.60" steps="7908"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.108.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="5.73" steps="8503"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.108.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="2.29" steps="1640"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.108.0.3" expl="VC for combineAux" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="19.92"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.108.0.4" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="combineAux&#39;vc.108.0.4.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.108.0.4.0.0" expl="VC for combineAux" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.82" steps="1426257"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.108.0.4.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1"><result status="valid" time="2.14" steps="1634"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.108.0.4.0.2" expl="VC for combineAux" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="29.89" steps="3305677"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="1.17"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.108.0.4.0.3" expl="VC for combineAux" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="33.36"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.108.0.4.0.4" expl="VC for combineAux" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="15.52"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.108.0.4.0.5" expl="VC for combineAux" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="17.56"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.108.0.5" expl="VC for combineAux" proved="true">
    <proof prover="4" timelimit="45"><result status="valid" time="3.86" steps="271750"/></proof>
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="0.86"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.108.0.6" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="3.44" steps="5304"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.108.0.7" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="5.71" steps="7993"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.108.0.8" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="5.62" steps="8094"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.108.0.9" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="5.59" steps="8194"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.108.0.10" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures11">
     <goal name="combineAux&#39;vc.108.0.10.0" expl="VC for combineAux" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="combineAux&#39;vc.108.0.10.0.0" expl="VC for combineAux" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="combineAux&#39;vc.108.0.10.0.0.0" expl="VC for combineAux" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="combineAux&#39;vc.108.0.10.0.0.0.0" expl="VC for combineAux" proved="true">
        <proof prover="1"><result status="valid" time="33.29" steps="18823"/></proof>
        </goal>
        <goal name="combineAux&#39;vc.108.0.10.0.0.0.1" expl="VC for combineAux" proved="true">
        <proof prover="1"><result status="valid" time="33.49" steps="18004"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.108.0.11" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="26.09" steps="36394"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.108.0.12" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="strongDisjoint">
     <goal name="combineAux&#39;vc.108.0.12.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.108.0.12.0.0" expl="VC for combineAux" proved="true">
      <transf name="case" proved="true" arg1="(p = self)">
       <goal name="combineAux&#39;vc.108.0.12.0.0.0" expl="true case" proved="true">
       <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="1.99" steps="2210432"/></proof>
       <proof prover="4" timelimit="45"><result status="valid" time="8.98" steps="688161"/></proof>
       </goal>
       <goal name="combineAux&#39;vc.108.0.12.0.0.1" expl="false case" proved="true">
       <proof prover="1"><result status="valid" time="34.64" steps="35659"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.109" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="2.93" steps="578"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.110" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="2.81" steps="579"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.111" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="1.59" steps="450"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.112" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.88" steps="675"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.113" expl="fst := trees.{j} ( index is in bounds)" proved="true">
  <proof prover="1"><result status="valid" time="1.60" steps="603"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.114" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.82" steps="720"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.115" expl="snd := trees.{j + 2} ( index is in bounds)" proved="true">
  <proof prover="1"><result status="valid" time="1.63" steps="611"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.116" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.85" steps="728"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.117" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.62" steps="463"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.118" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.79" steps="765"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.119" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.89" steps="1177"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.120" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.99" steps="773"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.121" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="2.00" steps="1263"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.122" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.59" steps="471"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.123" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.60" steps="559"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.124" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.65" steps="476"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.125" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="1.62" steps="476"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.126" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.72" steps="829"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.127" expl=" index is in bounds" proved="true">
  <proof prover="1"><result status="valid" time="2.50" steps="704"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.128" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.64" steps="576"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.129" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.88" steps="1179"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.130" expl="type invariant" proved="true">
  <transf name="case" proved="true" arg1="(p = trees)">
   <goal name="combineAux&#39;vc.130.0" expl="true case (type invariant)" proved="true">
   <proof prover="1"><result status="valid" time="3.78" steps="583"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.130.1" expl="false case (type invariant)" proved="true">
   <proof prover="1"><result status="valid" time="4.30" steps="2064"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.131" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.67" steps="987"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.132" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.93" steps="854"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.133" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.42" steps="2062"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.134" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.77" steps="1180"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.135" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.21" steps="1671"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.136" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.136.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="4.24" steps="3960"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.136.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.89" steps="564"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.136.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="2.39" steps="1578"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.136.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.97" steps="564"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.136.4" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.136.4.0" expl="true case (type invariant)" proved="true">
    <proof prover="1"><result status="valid" time="25.60" steps="35848"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.136.4.1" expl="false case (type invariant)" proved="true">
    <proof prover="1"><result status="valid" time="8.33" steps="11993"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.137" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.84" steps="3047"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.138" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.83" steps="582"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.139" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="10.64" steps="10649"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.140" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="16.45" steps="17282"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.141" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="4.34" steps="2084"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.142" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="5.01" steps="3582"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.143" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="3.50" steps="578"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.144" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="3.60" steps="579"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.145" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="3.49" steps="580"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.146" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="39.64" steps="35836"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.147" expl="loop invariant init" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.147.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.147.0.0" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="6.02" steps="7929"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.147.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="6.18" steps="7964"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.147.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="2.45" steps="1648"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.147.0.3" expl="VC for combineAux" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="18.24"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.147.0.4" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="combineAux&#39;vc.147.0.4.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.147.0.4.0.0" expl="VC for combineAux" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.73" steps="1428801"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.147.0.4.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1"><result status="valid" time="2.46" steps="1642"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.147.0.4.0.2" expl="VC for combineAux" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.20" steps="589409"/></proof>
      <proof prover="4" timelimit="45"><result status="valid" time="29.71" steps="3277970"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="0.92"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.147.0.4.0.3" expl="VC for combineAux" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.42" steps="957681"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="29.29"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.147.0.4.0.4" expl="VC for combineAux" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.45" steps="957681"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="16.24"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.147.0.4.0.5" expl="VC for combineAux" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.43" steps="957681"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="16.53"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.147.0.5" expl="VC for combineAux" proved="true">
    <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.25" steps="668979"/></proof>
    <proof prover="4" timelimit="45"><result status="valid" time="3.67" steps="270545"/></proof>
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="0.80"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.147.0.6" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="3.93" steps="5714"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.147.0.7" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="6.04" steps="7925"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.147.0.8" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="6.31" steps="8117"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.147.0.9" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="6.31" steps="8131"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.147.0.10" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures10">
     <goal name="combineAux&#39;vc.147.0.10.0" expl="VC for combineAux" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="combineAux&#39;vc.147.0.10.0.0" expl="VC for combineAux" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="38.15"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.147.0.11" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="26.11" steps="36368"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.147.0.12" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="34.82" steps="35803"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.148" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="5.26" steps="1002"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.149" expl="fst := trees.{j - 2} ( index is in bounds)" proved="true">
  <proof prover="1"><result status="valid" time="5.06" steps="850"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.150" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="5.38" steps="1061"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.151" expl="snd := trees.{j} ( index is in bounds)" proved="true">
  <proof prover="1"><result status="valid" time="5.12" steps="859"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.152" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="5.29" steps="1066"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.153" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="4.71" steps="644"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.154" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="5.37" steps="1099"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.155" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="5.65" steps="1779"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.156" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="5.54" steps="1107"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.157" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="5.72" steps="1926"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.158" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="4.87" steps="652"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.159" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="4.96" steps="777"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.160" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="4.83" steps="657"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.161" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="4.84" steps="657"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.162" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="22.32" steps="15028"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.163" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="7.08" steps="1169"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.164" expl=" index is in bounds" proved="true">
  <proof prover="1"><result status="valid" time="6.80" steps="960"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.165" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="8.79" steps="763"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.166" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="8.85" steps="1594"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.167" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.167.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="4.29" steps="747"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.167.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="4.31" steps="747"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.167.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="4.38" steps="747"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.167.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="4.30" steps="747"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.167.4" expl="type invariant" proved="true">
   <transf name="instantiate" proved="true" arg1="Ensures3" arg2="i">
    <goal name="combineAux&#39;vc.167.4.0" expl="type invariant" proved="true">
    <transf name="case" proved="true" arg1="(v = tmp)">
     <goal name="combineAux&#39;vc.167.4.0.0" expl="true case (type invariant)" proved="true">
     <proof prover="1"><result status="valid" time="5.76" steps="1812"/></proof>
     </goal>
     <goal name="combineAux&#39;vc.167.4.0.1" expl="false case (type invariant)" proved="true">
     <transf name="case" proved="true" arg1="(p = trees)">
      <goal name="combineAux&#39;vc.167.4.0.1.0" expl="false case (true case. type invariant)" proved="true">
      <proof prover="1"><result status="valid" time="4.50" steps="757"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.167.4.0.1.1" expl="false case (type invariant)" proved="true">
      <proof prover="1"><result status="valid" time="8.28" steps="9006"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.168" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="8.52" steps="1323"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.169" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="8.48" steps="1148"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.170" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="10.35" steps="2939"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.171" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="9.01" steps="1594"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.172" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="9.39" steps="2251"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.173" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.173.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="10.22" steps="7239"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.173.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="4.05" steps="747"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.173.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="5.20" steps="2310"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.173.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="4.12" steps="747"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.173.4" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.173.4.0" expl="true case (type invariant)" proved="true">
    <transf name="instantiate" proved="true" arg1="Ensures3" arg2="i">
     <goal name="combineAux&#39;vc.173.4.0.0" expl="true case (type invariant)" proved="true">
     <proof prover="1"><result status="valid" time="5.63" steps="13039"/></proof>
     <proof prover="4" timelimit="45"><result status="valid" time="3.86" steps="297520"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.173.4.1" expl="false case (type invariant)" proved="true">
    <proof prover="1"><result status="valid" time="25.59" steps="22972"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.174" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="11.00" steps="4345"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.175" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="8.46" steps="769"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.176" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="33.01" steps="20032"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.177" expl="loop invariant preservation" proved="true">
  <transf name="instantiate" proved="true" arg1="Ensures3" arg2="k19">
   <goal name="combineAux&#39;vc.177.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="8.62" steps="1102"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.178" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="9.68" steps="3099"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.179" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="11.56" steps="5459"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.180" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="8.32" steps="763"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.181" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="8.26" steps="764"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.182" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="8.29" steps="765"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.183" expl="loop invariant preservation" proved="true">
  <proof prover="4" timelimit="45"><result status="valid" time="6.54" steps="400744"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.184" expl="loop invariant preservation" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.184.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.184.0.0" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="16.14" steps="14414"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.184.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="16.64" steps="14321"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.184.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="5.37" steps="2387"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.184.0.3" expl="VC for combineAux" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="35.17"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.184.0.4" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="combineAux&#39;vc.184.0.4.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.184.0.4.0.0" expl="VC for combineAux" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="1.22" steps="1941245"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.184.0.4.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1"><result status="valid" time="5.27" steps="2388"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.184.0.4.0.2" expl="VC for combineAux" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="1.99"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.184.0.4.0.3" expl="VC for combineAux" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.57" steps="1214881"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.184.0.4.0.4" expl="VC for combineAux" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.55" steps="1214881"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="18.14"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.184.0.4.0.5" expl="VC for combineAux" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.53" steps="1214881"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="23.47"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.184.0.5" expl="VC for combineAux" proved="true">
    <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.20" steps="808383"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.184.0.6" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="7.77" steps="8225"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.184.0.7" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="16.19" steps="14375"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.184.0.8" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="16.85" steps="15451"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.184.0.9" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="16.84" steps="14662"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.184.0.10" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures11">
     <goal name="combineAux&#39;vc.184.0.10.0" expl="VC for combineAux" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="combineAux&#39;vc.184.0.10.0.0" expl="VC for combineAux" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="combineAux&#39;vc.184.0.10.0.0.0" expl="VC for combineAux" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="combineAux&#39;vc.184.0.10.0.0.0.0" expl="VC for combineAux" proved="true">
        <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="18.69"/></proof>
        </goal>
        <goal name="combineAux&#39;vc.184.0.10.0.0.0.1" expl="VC for combineAux" proved="true">
        <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="12.21"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.184.0.11" expl="VC for combineAux" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="1.58"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.184.0.12" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures11">
     <goal name="combineAux&#39;vc.184.0.12.0" expl="VC for combineAux" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="combineAux&#39;vc.184.0.12.0.0" expl="VC for combineAux" proved="true">
      <transf name="unfold" proved="true" arg1="strongDisjoint">
       <goal name="combineAux&#39;vc.184.0.12.0.0.0" expl="VC for combineAux" proved="true">
       <transf name="introduce_premises" proved="true" >
        <goal name="combineAux&#39;vc.184.0.12.0.0.0.0" expl="VC for combineAux" proved="true">
        <transf name="case" proved="true" arg1="(p = self)">
         <goal name="combineAux&#39;vc.184.0.12.0.0.0.0.0" expl="true case" proved="true">
         <proof prover="4" timelimit="45"><result status="valid" time="2.44" steps="180294"/></proof>
         <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="11.82"/></proof>
         </goal>
         <goal name="combineAux&#39;vc.184.0.12.0.0.0.0.1" expl="false case" proved="true">
         <proof prover="4" timelimit="45"><result status="valid" time="2.66" steps="192009"/></proof>
         <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="17.76"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.185" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="5.32" steps="1002"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.186" expl="result := trees.{0} ( index is in bounds)" proved="true">
  <proof prover="1"><result status="valid" time="4.88" steps="850"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.187" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="5.32" steps="1573"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.188" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="5.40" steps="1631"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.189" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="5.00" steps="859"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.190" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="5.86" steps="1962"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.191" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="5.56" steps="1948"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.192" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="5.73" steps="1950"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.193" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="5.70" steps="1957"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.194" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="5.76" steps="1943"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.195" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.84" steps="642"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.196" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.81" steps="642"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.197" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="5.10" steps="646"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.198" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.60" steps="453"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.199" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.68" steps="453"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.200" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.57" steps="454"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.201" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.59" steps="454"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.202" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.57" steps="446"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.203" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.67" steps="446"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.204" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.56" steps="447"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.205" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.55" steps="448"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.206" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="1.57" steps="448"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.207" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.76" steps="750"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.208" expl="fst := trees.{j - 2} ( index is in bounds)" proved="true">
  <proof prover="1"><result status="valid" time="2.53" steps="675"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.209" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.79" steps="804"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.210" expl="snd := trees.{j} ( index is in bounds)" proved="true">
  <proof prover="1"><result status="valid" time="2.48" steps="684"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.211" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="2.83" steps="812"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.212" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="2.39" steps="518"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.213" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="2.74" steps="1150"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.214" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="2.80" steps="1300"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.215" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="2.90" steps="851"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.216" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="3.04" steps="1426"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.217" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="2.40" steps="526"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.218" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="2.51" steps="626"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.219" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="2.39" steps="531"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.220" expl="tmp := link(self,fst,snd)" proved="true">
  <proof prover="1"><result status="valid" time="2.51" steps="531"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.221" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="11.18" steps="9665"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.222" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="4.00" steps="914"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.223" expl=" index is in bounds" proved="true">
  <proof prover="1"><result status="valid" time="3.69" steps="784"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.224" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="5.00" steps="637"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.225" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="5.21" steps="1306"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.226" expl="type invariant" proved="true">
  <transf name="case" proved="true" arg1="(p = trees)">
   <goal name="combineAux&#39;vc.226.0" expl="true case (type invariant)" proved="true">
   <proof prover="1"><result status="valid" time="5.07" steps="644"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.226.1" expl="false case (type invariant)" proved="true">
   <transf name="instantiate" proved="true" arg1="Ensures3" arg2="i">
    <goal name="combineAux&#39;vc.226.1.0" expl="false case (type invariant)" proved="true">
    <proof prover="1"><result status="valid" time="6.07" steps="2460"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.227" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="5.28" steps="1105"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.228" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="5.07" steps="957"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.229" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="6.20" steps="2296"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.230" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="5.32" steps="1306"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.231" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="5.62" steps="1857"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.232" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="combineAux&#39;vc.232.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="4.65" steps="5323"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.232.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="2.45" steps="623"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.232.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="3.12" steps="1775"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.232.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="2.46" steps="623"/></proof>
   </goal>
   <goal name="combineAux&#39;vc.232.4" expl="type invariant" proved="true">
   <transf name="case" proved="true" arg1="(p = trees)">
    <goal name="combineAux&#39;vc.232.4.0" expl="true case (type invariant)" proved="true">
    <proof prover="1"><result status="valid" time="40.81" steps="50354"/></proof>
    <transf name="instantiate" proved="true" arg1="Ensures3" arg2="i">
     <goal name="combineAux&#39;vc.232.4.0.0" expl="true case (type invariant)" proved="true">
     <proof prover="1"><result status="valid" time="5.79" steps="9071"/></proof>
     <proof prover="4" timelimit="45"><result status="valid" time="2.62" steps="233445"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.232.4.1" expl="false case (type invariant)" proved="true">
    <proof prover="1"><result status="valid" time="11.79" steps="14876"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.233" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="6.68" steps="3373"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.234" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="5.07" steps="643"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.235" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="15.97" steps="12601"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.236" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="22.85" steps="17971"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.237" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="5.85" steps="2339"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.238" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="6.98" steps="4107"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.239" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="4.85" steps="637"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.240" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="5.17" steps="638"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.241" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="4.80" steps="639"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.242" expl="loop invariant preservation" proved="true">
  <proof prover="4" timelimit="45"><result status="valid" time="3.63" steps="289274"/></proof>
  <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="23.79"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.243" expl="loop invariant preservation" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="combineAux&#39;vc.243.0" expl="VC for combineAux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="combineAux&#39;vc.243.0.0" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="10.20" steps="10684"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.243.0.1" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="8.73" steps="9286"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.243.0.2" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="3.26" steps="1844"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.243.0.3" expl="VC for combineAux" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="25.70"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.243.0.4" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="combineAux&#39;vc.243.0.4.0" expl="VC for combineAux" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="combineAux&#39;vc.243.0.4.0.0" expl="VC for combineAux" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.87" steps="1623673"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.243.0.4.0.1" expl="VC for combineAux" proved="true">
      <proof prover="1"><result status="valid" time="3.23" steps="1835"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.243.0.4.0.2" expl="VC for combineAux" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="1.19"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.243.0.4.0.3" expl="VC for combineAux" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.49" steps="1045661"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="40.17"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.243.0.4.0.4" expl="VC for combineAux" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="19.01"/></proof>
      </goal>
      <goal name="combineAux&#39;vc.243.0.4.0.5" expl="VC for combineAux" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="18.48"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.243.0.5" expl="VC for combineAux" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="1.02"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.243.0.6" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="9.42" steps="11262"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.243.0.7" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="8.91" steps="10210"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.243.0.8" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="9.84" steps="10535"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.243.0.9" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="8.46" steps="10055"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.243.0.10" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures11">
     <goal name="combineAux&#39;vc.243.0.10.0" expl="VC for combineAux" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="combineAux&#39;vc.243.0.10.0.0" expl="VC for combineAux" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="combineAux&#39;vc.243.0.10.0.0.0" expl="VC for combineAux" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="combineAux&#39;vc.243.0.10.0.0.0.0" expl="VC for combineAux" proved="true">
        <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="15.89"/></proof>
        </goal>
        <goal name="combineAux&#39;vc.243.0.10.0.0.0.1" expl="VC for combineAux" proved="true">
        <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="15.93"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="combineAux&#39;vc.243.0.11" expl="VC for combineAux" proved="true">
    <proof prover="1"><result status="valid" time="36.41" steps="37003"/></proof>
    </goal>
    <goal name="combineAux&#39;vc.243.0.12" expl="VC for combineAux" proved="true">
    <transf name="unfold" proved="true" arg1="strongDisjoint">
     <goal name="combineAux&#39;vc.243.0.12.0" expl="VC for combineAux" proved="true">
     <transf name="introduce_premises" proved="true" >
      <goal name="combineAux&#39;vc.243.0.12.0.0" expl="VC for combineAux" proved="true">
      <transf name="case" proved="true" arg1="(p = self)">
       <goal name="combineAux&#39;vc.243.0.12.0.0.0" expl="true case" proved="true">
       <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="2.57" steps="2559209"/></proof>
       <proof prover="4" timelimit="45"><result status="valid" time="13.11" steps="923786"/></proof>
       </goal>
       <goal name="combineAux&#39;vc.243.0.12.0.0.1" expl="false case" proved="true">
       <proof prover="4" timelimit="45"><result status="valid" time="14.50" steps="1033248"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="combineAux&#39;vc.244" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.71" steps="745"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.245" expl="result := trees.{0} ( index is in bounds)" proved="true">
  <proof prover="1"><result status="valid" time="2.44" steps="674"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.246" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.76" steps="1122"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.247" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.83" steps="1172"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.248" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="2.63" steps="687"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.249" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="2.99" steps="1462"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.250" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="2.99" steps="1466"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.251" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="2.97" steps="1446"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.252" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="2.91" steps="1448"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.253" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="2.99" steps="1439"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.254" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.40" steps="516"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.255" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.30" steps="516"/></proof>
  </goal>
  <goal name="combineAux&#39;vc.256" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.41" steps="519"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="combine&#39;vc" expl="VC for combine" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="combine&#39;vc.0" expl="tmp := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="47"/></proof>
  </goal>
  <goal name="combine&#39;vc.1" expl="sntl := self.sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="52"/></proof>
  </goal>
  <goal name="combine&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="38"/></proof>
  </goal>
  <goal name="combine&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="39"/></proof>
  </goal>
  <goal name="combine&#39;vc.4" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="42"/></proof>
  </goal>
  <goal name="combine&#39;vc.5" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="44"/></proof>
  </goal>
  <goal name="combine&#39;vc.6" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="46"/></proof>
  </goal>
  <goal name="combine&#39;vc.7" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="46"/></proof>
  </goal>
  <goal name="combine&#39;vc.8" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="46"/></proof>
  </goal>
  <goal name="combine&#39;vc.9" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="44"/></proof>
  </goal>
  <goal name="combine&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="40"/></proof>
  </goal>
  <goal name="combine&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="40"/></proof>
  </goal>
  <goal name="combine&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="40"/></proof>
  </goal>
  <goal name="combine&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="41"/></proof>
  </goal>
  <goal name="combine&#39;vc.14" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="36"/></proof>
  </goal>
  <goal name="combine&#39;vc.15" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="36"/></proof>
  </goal>
  <goal name="combine&#39;vc.16" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="36"/></proof>
  </goal>
  <goal name="combine&#39;vc.17" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="36"/></proof>
  </goal>
  <goal name="combine&#39;vc.18" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="36"/></proof>
  </goal>
  <goal name="combine&#39;vc.19" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="36"/></proof>
  </goal>
  <goal name="combine&#39;vc.20" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="36"/></proof>
  </goal>
  <goal name="combine&#39;vc.21" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="367"/></proof>
  </goal>
  <goal name="combine&#39;vc.22" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="39"/></proof>
  </goal>
  <goal name="combine&#39;vc.23" expl="result := combineAux(self,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="39"/></proof>
  </goal>
  <goal name="combine&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="90"/></proof>
  </goal>
  <goal name="combine&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="90"/></proof>
  </goal>
  <goal name="combine&#39;vc.26" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="93"/></proof>
  </goal>
  <goal name="combine&#39;vc.27" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="96"/></proof>
  </goal>
  <goal name="combine&#39;vc.28" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="98"/></proof>
  </goal>
  <goal name="combine&#39;vc.29" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="98"/></proof>
  </goal>
  <goal name="combine&#39;vc.30" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="98"/></proof>
  </goal>
  <goal name="combine&#39;vc.31" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="96"/></proof>
  </goal>
  <goal name="combine&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="90"/></proof>
  </goal>
  <goal name="combine&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="90"/></proof>
  </goal>
  <goal name="combine&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="90"/></proof>
  </goal>
  <goal name="combine&#39;vc.35" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="90"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="deleteMin&#39;vc" expl="VC for deleteMin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="deleteMin&#39;vc.0" expl="result := findMin(self)" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="18"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.1" expl="result := findMin(self)" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="18"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.2" expl="result := findMin(self)" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="18"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.3" expl="result := findMin(self)" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="30"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.4" expl="result := findMin(self)" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="20"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.5" expl="result := findMin(self)" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.6" expl="sntl := self.sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="44"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.7" expl="tmp := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="49"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.8" expl="tmp := tmp.child" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="54"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.9" expl="sz := self.size" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="123"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="144"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="214"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.23" steps="574"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="255"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="207"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="608"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.16" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="214"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.17" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="722"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="584"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.04" steps="3248"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="150"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="148"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.22" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="191"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.23" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="153"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.24" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.25" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.26" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.27" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.28" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.29" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.30" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.31" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="271"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.32" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.33" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.34" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.35" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.36" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.37" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.38" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.39" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="277"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.40" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.41" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.42" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.43" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.44" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.45" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.46" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.47" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.48" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.28" steps="694"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.83" steps="2027"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.50" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.51" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.52" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.07" steps="164"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.53" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="30.05" steps="59614"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.54" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="42"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.55" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="42"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.56" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="174"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.57" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="400"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.58" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="46"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.59" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="714"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.60" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="48"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.61" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="48"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.62" expl="tmp := combine(self,tmp)" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="48"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.63" expl="sz := self.size" proved="true">
  <proof prover="1"><result status="valid" time="0.20" steps="196"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.64" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.28" steps="199"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.65" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="322"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.66" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="727"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.67" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="328"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.68" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="276"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.69" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="727"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.70" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.33" steps="321"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.71" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="903"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.72" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="737"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.73" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.70" steps="7155"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.74" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="205"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.75" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="203"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.76" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.38" steps="444"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.77" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="273"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.78" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="214"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.79" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.80" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.81" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.82" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.83" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="214"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.84" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="214"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.85" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="331"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.86" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="214"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.87" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.88" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.89" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.90" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.91" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.92" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.93" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="0.42" steps="339"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.94" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.95" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="214"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.96" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.97" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.98" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.99" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.100" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.101" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.102" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="1157"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.103" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.60" steps="3801"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.104" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.28" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.105" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="212"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.106" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.15" steps="219"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.107" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="deleteMin&#39;vc.107.0" expl="VC for deleteMin" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="deleteMin&#39;vc.107.0.0" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="0.99" steps="2754"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.107.0.1" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="0.98" steps="2749"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.107.0.2" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="0.33" steps="593"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.107.0.3" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="25.69" steps="12408"/></proof>
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="4.62"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.107.0.4" expl="VC for deleteMin" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="10.28"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.107.0.5" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="28.89" steps="11040"/></proof>
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="8.92"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.107.0.6" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="18.03" steps="18328"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.107.0.7" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="23.06" steps="9105"/></proof>
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="6.27"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.107.0.8" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="1.15" steps="3431"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.107.0.9" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="1.64" steps="5074"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.107.0.10" expl="VC for deleteMin" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="17.11"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.107.0.11" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="1.25" steps="3604"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.107.0.12" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="3.11" steps="4681"/></proof>
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="14.93"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="decreaseKey&#39;vc" expl="VC for decreaseKey" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decreaseKey&#39;vc.0" expl="sntl := self.sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="51"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.1" expl="tmp := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="110"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.2" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="86"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.3" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="148"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="469"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="182"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.6" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="141"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.7" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="469"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="148"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="1565"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.20" steps="479"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="747"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="92"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.13" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.99" steps="3126"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.14" expl="tmp := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="136"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.15" expl="pos := handle.prev" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="146"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.16" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.20" steps="158"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.17" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="299"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.37" steps="789"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="297"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.22" steps="241"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.21" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.40" steps="789"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.28" steps="298"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.23" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="14.65" steps="33106"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.24" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.40" steps="799"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.25" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.25.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.17" steps="156"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.25.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.17" steps="156"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.25.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.18" steps="156"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.25.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.18" steps="156"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.25.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.20" steps="246"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.25.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.20" steps="246"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.25.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.24" steps="267"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.26" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.22" steps="164"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.27" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="3.98" steps="7824"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.28" expl="tmp := handle.prev" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="226"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.29" expl="pos := tmp.child" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="1342"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.30" expl="pos := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="248"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.31" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.38" steps="233"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.32" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="498"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.33" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="1181"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.34" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="493"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.35" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.36" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="1181"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.37" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="506"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.38" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="7.75" steps="18465"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.39" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.86" steps="1822"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.40" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.55" steps="3527"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.41" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.39" steps="239"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.42" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.35" steps="243"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.43" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.73" steps="389"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.44" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="290"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.45" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.84" steps="748"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.46" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.08" steps="1596"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.47" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="728"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.48" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.76" steps="437"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.49" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.13" steps="1596"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.50" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.86" steps="768"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.51" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.51.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.39" steps="284"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.51.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.38" steps="284"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.51.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.81" steps="1739"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.51.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.39" steps="284"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.51.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.39" steps="284"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.51.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="22.95" steps="47875"/></proof>
   <proof prover="4" timelimit="45"><result status="valid" time="2.11" steps="154324"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.51.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.43" steps="439"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.51.7" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.41" steps="443"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.52" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.12" steps="1606"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.53" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.49" steps="5224"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.54" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="296"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.55" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="296"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.56" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="296"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.57" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.89" steps="820"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.58" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="437"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.59" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.60" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="302"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.61" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="302"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.62" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="1.01" steps="1275"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.63" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="2.16" steps="3386"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.64" expl="tmp := link(self,pos,handle)" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.64.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.64.0.0" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.23" steps="2677"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.64.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.34" steps="2675"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.64.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.66" steps="1063"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.64.0.3" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="sntlOk">
     <goal name="decreaseKey&#39;vc.64.0.3.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.64.0.3.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="4.56" steps="6083"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.64.0.3.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="29.13" steps="12877"/></proof>
      <proof prover="4" timelimit="45"><result status="valid" time="16.68" steps="939826"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.64.0.3.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="29.81" steps="12461"/></proof>
      <proof prover="4" timelimit="45"><result status="valid" time="20.02" steps="1346781"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.64.0.3.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="35.57" steps="14567"/></proof>
      <proof prover="4" timelimit="45"><result status="valid" time="20.22" steps="1363637"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.64.0.3.0.4" expl="VC for decreaseKey" proved="true">
      <transf name="subst_all" proved="true" >
       <goal name="decreaseKey&#39;vc.64.0.3.0.4.0" expl="VC for decreaseKey" proved="true">
       <proof prover="1"><result status="valid" time="17.33" steps="12501"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.64.0.4" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="decreaseKey&#39;vc.64.0.4.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.64.0.4.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.37" steps="756246"/></proof>
      <proof prover="4" timelimit="45"><result status="valid" time="2.40" steps="154836"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="20.77"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.64.0.4.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="0.69" steps="1082"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.64.0.4.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.16" steps="459544"/></proof>
      <proof prover="4" timelimit="45"><result status="valid" time="1.26" steps="124088"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="0.39"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.64.0.4.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="3.48" steps="208705"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.64.0.4.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="3.24" steps="203426"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.64.0.4.0.5" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="3.49" steps="212274"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.64.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="34.45" steps="23187"/></proof>
    <proof prover="4" timelimit="45"><result status="valid" time="7.66" steps="591395"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.64.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.74" steps="1644"/></proof>
    <proof prover="4" timelimit="45"><result status="valid" time="1.41" steps="129396"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.64.0.7" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.32" steps="2671"/></proof>
    <proof prover="4" timelimit="45"><result status="valid" time="8.48" steps="817589"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.64.0.8" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.32" steps="2774"/></proof>
    <proof prover="4" timelimit="45"><result status="valid" time="14.35" steps="879949"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.64.0.9" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.26" steps="2774"/></proof>
    <proof prover="4" timelimit="45"><result status="valid" time="15.20" steps="1037976"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.64.0.10" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
     <goal name="decreaseKey&#39;vc.64.0.10.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="decreaseKey&#39;vc.64.0.10.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="decreaseKey&#39;vc.64.0.10.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.64.0.10.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="4" timelimit="45"><result status="valid" time="24.27" steps="2396231"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.64.0.10.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="4" timelimit="45"><result status="valid" time="24.36" steps="2393505"/></proof>
        <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="7.33"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.64.0.11" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.74" steps="4026"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.64.0.12" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="4.04" steps="5762"/></proof>
    <proof prover="4" timelimit="45"><result status="valid" time="3.34" steps="234779"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.65" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.73" steps="404"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.66" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.84" steps="797"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.67" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.52" steps="1693"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.68" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.77" steps="710"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.69" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.88" steps="611"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.70" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.43" steps="1693"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.71" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.87" steps="797"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.72" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.24" steps="1197"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.73" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.47" steps="1713"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.74" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.74.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.91" steps="394"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.74.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.90" steps="394"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.74.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.90" steps="394"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.74.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="2.64" steps="2665"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.74.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="15.11" steps="20027"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.74.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.92" steps="637"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.74.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.16" steps="701"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.75" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.75" steps="410"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.76" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.66" steps="406"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.77" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.69" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.78" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.75" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.79" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.67" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.80" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.67" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.81" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.71" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.82" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="2.34" steps="760"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.83" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="3.07" steps="3925"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.84" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="2.12" steps="723"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.85" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="3.05" steps="3941"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.86" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.77" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.87" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.62" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.88" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.65" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.89" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.64" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.90" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.91" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.65" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.92" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.64" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.93" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.77" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.94" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.63" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.95" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="2.19" steps="766"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.96" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.65" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.97" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.64" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.98" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.99" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.77" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.100" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.68" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.101" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="11.51" steps="9296"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.102" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.73" steps="412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.103" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.103.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.103.0.0" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.23" steps="4237"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.103.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.07" steps="4233"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.103.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.13" steps="1427"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.103.0.3" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="sntlOk">
     <goal name="decreaseKey&#39;vc.103.0.3.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.103.0.3.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="11.34" steps="10250"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.103.0.3.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="10.83" steps="9720"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.103.0.3.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="10.86" steps="9788"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.103.0.3.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="11.07" steps="9779"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.103.0.3.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="10.77" steps="9787"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.103.0.4" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="decreaseKey&#39;vc.103.0.4.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.103.0.4.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="26.71" steps="22169"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.103.0.4.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="1.22" steps="1427"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.103.0.4.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="13.19" steps="15680"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.103.0.4.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.38" steps="839437"/></proof>
      <proof prover="4" timelimit="45"><result status="valid" time="23.73" steps="1065202"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="34.93"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.103.0.4.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="8.28" steps="11250"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.103.0.4.0.5" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="8.40" steps="11246"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.103.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="11.23" steps="10803"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.103.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="5.51" steps="6952"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.103.0.7" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.04" steps="4227"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.103.0.8" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.45" steps="5540"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.103.0.9" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="5.26" steps="6704"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.103.0.10" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures32">
     <goal name="decreaseKey&#39;vc.103.0.10.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_right" proved="true" >
      <goal name="decreaseKey&#39;vc.103.0.10.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="37.89" steps="28774"/></proof>
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="decreaseKey&#39;vc.103.0.10.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.103.0.10.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="3.21" steps="5237"/></proof>
        <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="11.29"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.103.0.10.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="3.17" steps="5075"/></proof>
        <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="12.37"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.103.0.11" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="4.73" steps="5874"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.103.0.12" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="9.90" steps="8394"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.104" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="180"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.105" expl="pos := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.28" steps="248"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.106" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="939"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.107" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.42" steps="236"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.108" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="508"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.109" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="1191"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.110" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="503"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.111" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.112" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="1191"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.113" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="516"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.114" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="8.19" steps="15265"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.115" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.73" steps="1201"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.116" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.116.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.28" steps="232"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.116.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.29" steps="232"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.116.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.30" steps="232"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.116.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.29" steps="232"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.116.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.34" steps="360"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.116.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.33" steps="360"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.116.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.38" steps="396"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.117" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="242"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.118" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.86" steps="1885"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.119" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.85" steps="397"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.120" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="293"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.121" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.93" steps="766"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.122" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.13" steps="1617"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.123" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.85" steps="744"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.124" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.77" steps="444"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.125" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.17" steps="1617"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.126" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="789"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.127" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.127.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.44" steps="287"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.127.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.42" steps="287"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.127.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.08" steps="2298"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.127.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.42" steps="287"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.127.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.40" steps="287"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.127.5" expl="type invariant" proved="true">
   <proof prover="4" timelimit="45"><result status="valid" time="2.28" steps="161244"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.127.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.47" steps="455"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.127.7" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.46" steps="447"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.128" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.59" steps="2695"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.129" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.90" steps="5635"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.130" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.77" steps="299"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.131" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.77" steps="299"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.132" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="299"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.133" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="1.01" steps="828"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.134" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.85" steps="444"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.135" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.73" steps="419"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.136" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="305"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.137" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="305"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.138" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="1565"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.139" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="2.77" steps="4049"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.140" expl="tmp := link(self,pos,handle)" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.140.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.140.0.0" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.65" steps="3525"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.140.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.66" steps="3525"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.140.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.69" steps="1064"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.140.0.3" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
     <goal name="decreaseKey&#39;vc.140.0.3.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="decreaseKey&#39;vc.140.0.3.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="sntlOk">
       <goal name="decreaseKey&#39;vc.140.0.3.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.140.0.3.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="14.54" steps="15942"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.140.0.3.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="4" timelimit="45"><result status="valid" time="5.19" steps="319300"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.140.0.3.0.0.0.2" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="44.10" steps="51416"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.140.0.3.0.0.0.3" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="12.02" steps="13147"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.140.0.3.0.0.0.4" expl="VC for decreaseKey" proved="true">
        <proof prover="4" timelimit="45"><result status="valid" time="13.86" steps="993165"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.140.0.4" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="decreaseKey&#39;vc.140.0.4.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.140.0.4.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.36" steps="768752"/></proof>
      <proof prover="4" timelimit="45"><result status="valid" time="2.59" steps="166618"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="30.95"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.140.0.4.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="0.67" steps="1083"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.140.0.4.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="1.35" steps="130488"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="0.36"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.140.0.4.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="3.53" steps="198846"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="0.46"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.140.0.4.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="4.24" steps="235654"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.140.0.4.0.5" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="4.32" steps="239788"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.140.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="0.31"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.140.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.87" steps="2391"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.140.0.7" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.54" steps="3521"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.140.0.8" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.57" steps="3618"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.140.0.9" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.55" steps="3618"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.140.0.10" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
     <goal name="decreaseKey&#39;vc.140.0.10.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="decreaseKey&#39;vc.140.0.10.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="decreaseKey&#39;vc.140.0.10.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.140.0.10.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="4" timelimit="45"><result status="valid" time="26.90" steps="2615580"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.140.0.10.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="4" timelimit="45"><result status="valid" time="26.77" steps="2613373"/></proof>
        <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="9.01"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.140.0.11" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.65" steps="5496"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.140.0.12" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="42.69" steps="38490"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.141" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.73" steps="407"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.142" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.83" steps="810"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.143" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.69" steps="2035"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.144" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.84" steps="721"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.145" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.81" steps="619"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.146" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.59" steps="2035"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.147" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.86" steps="810"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.148" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.13" steps="1217"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.149" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.48" steps="2065"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.150" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.150.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.72" steps="397"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.150.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.72" steps="397"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.150.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.71" steps="397"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.150.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="2.31" steps="3388"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.150.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="20.06" steps="29870"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.150.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.78" steps="642"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.150.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.01" steps="706"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.151" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.79" steps="413"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.152" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.63" steps="409"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.153" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.65" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.154" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.63" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.155" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.63" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.156" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.62" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.157" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.62" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.158" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="3.42" steps="4828"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.159" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="2.27" steps="769"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.160" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="2.15" steps="731"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.161" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="1.76" steps="419"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.162" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.62" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.163" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.70" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.164" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.64" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.165" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.65" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.166" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.65" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.167" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.168" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.65" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.169" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.68" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.170" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.71" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.171" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="2.26" steps="774"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.172" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.77" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.173" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.68" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.174" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.70" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.175" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.68" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.176" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.69" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.177" expl="postcondition" proved="true">
  <proof prover="4" timelimit="45"><result status="valid" time="3.41" steps="278864"/></proof>
  <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="30.27"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.178" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.179" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.179.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.179.0.0" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.61" steps="5099"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.179.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.53" steps="5095"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.179.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.11" steps="1428"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.179.0.3" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="sntlOk">
     <goal name="decreaseKey&#39;vc.179.0.3.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.179.0.3.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="4.02"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.179.0.3.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="3.25"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.179.0.3.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="6.14" steps="6344"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.179.0.3.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="5.36" steps="6326"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.179.0.3.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="5.96" steps="6340"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.179.0.4" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="decreaseKey&#39;vc.179.0.4.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.179.0.4.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.45" steps="910962"/></proof>
      <proof prover="4" timelimit="45"><result status="valid" time="6.08" steps="344105"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.179.0.4.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="1.12" steps="1428"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.179.0.4.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="0.99"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.179.0.4.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.42" steps="853838"/></proof>
      <proof prover="4" timelimit="45"><result status="valid" time="23.75" steps="1096325"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="37.45"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.179.0.4.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="39.36" steps="44870"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.179.0.4.0.5" expl="VC for decreaseKey" proved="true">
      <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.37" steps="853848"/></proof>
      <proof prover="4" timelimit="45"><result status="valid" time="26.09" steps="1133025"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="37.82"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.179.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="4" timelimit="45"><result status="valid" time="13.74" steps="874899"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.179.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="17.04" steps="19966"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.179.0.7" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.53" steps="5089"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.179.0.8" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.83" steps="6018"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.179.0.9" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="14.67" steps="14709"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.179.0.10" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures32">
     <goal name="decreaseKey&#39;vc.179.0.10.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_right" proved="true" >
      <goal name="decreaseKey&#39;vc.179.0.10.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="decreaseKey&#39;vc.179.0.10.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.179.0.10.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="2.50" steps="8100"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.179.0.10.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="2.29" steps="6070"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.179.0.11" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="5.63" steps="6340"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.179.0.12" expl="VC for decreaseKey" proved="true">
    <proof prover="4" timelimit="45"><result status="valid" time="9.73" steps="664339"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.180" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="296"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.181" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.40" steps="225"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.182" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="490"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.183" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.73" steps="1153"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.184" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="487"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.185" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="341"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.186" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="1153"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.187" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="498"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.188" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="6.40" steps="13437"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.189" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="1163"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.190" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.60" steps="3457"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.191" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="231"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.192" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.39" steps="231"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.193" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.37" steps="231"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.194" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="650"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.195" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="344"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.196" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="320"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.197" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.40" steps="237"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.198" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.38" steps="237"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.199" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="1043"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.200" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="1.54" steps="2512"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.201" expl="tmp := link(self,pos,handle)" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.201.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.201.0.0" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.99" steps="2123"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.201.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.99" steps="2121"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.201.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.48" steps="856"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.201.0.3" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="sntlOk">
     <goal name="decreaseKey&#39;vc.201.0.3.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.201.0.3.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="2.57" steps="3561"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.201.0.3.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="24.84" steps="8452"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.201.0.3.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="24.55" steps="7618"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.201.0.3.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="2.47" steps="3561"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.201.0.3.0.4" expl="VC for decreaseKey" proved="true">
      <transf name="subst_all" proved="true" >
       <goal name="decreaseKey&#39;vc.201.0.3.0.4.0" expl="VC for decreaseKey" proved="true">
       <proof prover="1"><result status="valid" time="15.32" steps="10607"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.201.0.4" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="decreaseKey&#39;vc.201.0.4.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.201.0.4.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="1.43" steps="113958"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.201.0.4.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="0.48" steps="870"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.201.0.4.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="0.90" steps="104226"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.201.0.4.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="2.09" steps="142700"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.201.0.4.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="20.52" steps="9152"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.201.0.4.0.5" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="2.81" steps="180391"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.201.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="10.50" steps="3110"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.201.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.51" steps="1354"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.201.0.7" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.93" steps="2118"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.201.0.8" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.96" steps="2439"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.201.0.9" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.03" steps="2439"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.201.0.10" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
     <goal name="decreaseKey&#39;vc.201.0.10.0" expl="VC for decreaseKey" proved="true">
     <transf name="unfold" proved="true" arg1="nodeP">
      <goal name="decreaseKey&#39;vc.201.0.10.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="decreaseKey&#39;vc.201.0.10.0.0.0" expl="VC for decreaseKey" proved="true">
       <proof prover="4" timelimit="45"><result status="valid" time="7.20" steps="581472"/></proof>
       </goal>
       <goal name="decreaseKey&#39;vc.201.0.10.0.0.1" expl="VC for decreaseKey" proved="true">
       <proof prover="1"><result status="valid" time="16.79" steps="10503"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.201.0.11" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.06" steps="2630"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.201.0.12" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.42" steps="3695"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.202" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.10" steps="339"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.203" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.29" steps="666"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.204" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.61" steps="1430"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.205" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.20" steps="600"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.206" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.16" steps="514"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.207" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.64" steps="1430"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.208" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.31" steps="666"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.209" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.53" steps="1214"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.210" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.66" steps="1450"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.211" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="37.12" steps="50570"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.212" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.14" steps="345"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.213" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.04" steps="341"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.214" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.15" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.215" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.02" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.216" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.13" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.217" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.07" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.218" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.02" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.219" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="1.58" steps="642"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.220" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="2.14" steps="3405"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.221" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="1.53" steps="607"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.222" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="1.16" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.223" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.11" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.224" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.10" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.225" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.12" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.226" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.227" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.228" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.08" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.229" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.08" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.230" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.07" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.231" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.232" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="1.55" steps="649"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.233" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.07" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.234" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.11" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.235" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.07" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.236" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.237" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.11" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.238" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="15.20" steps="12434"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.239" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.12" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.240" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.240.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.240.0.0" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.45" steps="3757"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.240.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.44" steps="3753"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.240.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.87" steps="1211"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.240.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="16.32"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.240.0.4" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="decreaseKey&#39;vc.240.0.4.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.240.0.4.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="4.51" steps="298666"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.240.0.4.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="0.86" steps="1212"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.240.0.4.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="37.06" steps="18556"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.240.0.4.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="16.08" steps="745812"/></proof>
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="21.38"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.240.0.4.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="9.37" steps="14826"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.240.0.4.0.5" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="9.67" steps="14823"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.240.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="26.25" steps="14346"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.240.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.93" steps="4596"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.240.0.7" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.43" steps="3748"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.240.0.8" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.54" steps="4496"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.240.0.9" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="5.92" steps="8003"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.240.0.10" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures32">
     <goal name="decreaseKey&#39;vc.240.0.10.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_right" proved="true" >
      <goal name="decreaseKey&#39;vc.240.0.10.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="decreaseKey&#39;vc.240.0.10.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.240.0.10.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="1.65" steps="4654"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.240.0.10.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="1.60" steps="4492"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.240.0.11" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.43" steps="4703"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.240.0.12" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="14.18" steps="12108"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.241" expl="tmp := handle.prev" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="147"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.242" expl="pos := tmp.child" proved="true">
  <proof prover="1"><result status="valid" time="0.38" steps="910"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.243" expl="pos := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="167"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.244" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.20" steps="172"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.245" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="319"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.246" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.39" steps="827"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.247" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="315"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.248" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="258"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.249" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.40" steps="827"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.250" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="318"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.251" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="5.37" steps="15291"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.252" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="837"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.253" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.82" steps="1639"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.254" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.23" steps="178"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.255" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.20" steps="182"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.256" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="301"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.257" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.40" steps="229"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.258" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="495"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.259" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="1148"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.260" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="491"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.261" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="345"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.262" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="1148"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.263" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="503"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.264" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="13.24" steps="26242"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.265" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="1157"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.266" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.52" steps="3131"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.267" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="235"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.268" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="235"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.269" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.39" steps="235"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.270" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="637"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.271" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="336"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.272" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="324"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.273" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.38" steps="241"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.274" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.39" steps="241"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.275" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="1020"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.276" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="1.40" steps="2757"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.277" expl="tmp := link(self,pos,handle)" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.277.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.277.0.0" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.95" steps="2183"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.277.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.92" steps="2181"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.277.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.47" steps="850"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.277.0.3" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="sntlOk">
     <goal name="decreaseKey&#39;vc.277.0.3.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.277.0.3.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="2.93" steps="4903"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.277.0.3.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="27.27" steps="10181"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.277.0.3.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="3.09" steps="5544"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.277.0.3.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="28.91" steps="10183"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.277.0.3.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="2.89" steps="4945"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.277.0.4" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="decreaseKey&#39;vc.277.0.4.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.277.0.4.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="2.02" steps="140853"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.277.0.4.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="0.49" steps="864"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.277.0.4.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="1.13" steps="115116"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.277.0.4.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="2.34" steps="157170"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.277.0.4.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="27.45" steps="11246"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.277.0.4.0.5" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="26.27" steps="10599"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.277.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="29.13" steps="9275"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.277.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.53" steps="1318"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.277.0.7" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.92" steps="2178"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.277.0.8" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.89" steps="2260"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.277.0.9" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.91" steps="2260"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.277.0.10" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
     <goal name="decreaseKey&#39;vc.277.0.10.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="decreaseKey&#39;vc.277.0.10.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="decreaseKey&#39;vc.277.0.10.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.277.0.10.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="4" timelimit="45"><result status="valid" time="13.41" steps="1360818"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.277.0.10.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="34.95" steps="15794"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.277.0.11" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.23" steps="3302"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.277.0.12" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.66" steps="4316"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.278" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.11" steps="343"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.279" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.20" steps="670"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.280" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.68" steps="1411"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.281" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.16" steps="604"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.282" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.20" steps="519"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.283" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.61" steps="1411"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.284" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.18" steps="670"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.285" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.48" steps="1107"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.286" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.60" steps="1431"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.287" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="28.70" steps="38171"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.288" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.13" steps="349"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.289" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="345"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.290" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.02" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.291" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.292" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.07" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.293" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.01" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.294" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.295" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="1.57" steps="637"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.296" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="1.10" steps="355"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.297" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="1.52" steps="613"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.298" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="2.14" steps="3336"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.299" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.300" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.301" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.03" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.302" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.303" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.04" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.304" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.04" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.305" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.04" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.306" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.307" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.03" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.308" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="1.58" steps="643"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.309" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.03" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.310" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.311" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.04" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.312" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.313" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.10" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.314" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="7.15" steps="6906"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.315" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.316" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.316.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.316.0.0" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.13" steps="3572"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.316.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.29" steps="3568"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.316.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.84" steps="1205"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.316.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="28.51" steps="48643"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.316.0.4" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="decreaseKey&#39;vc.316.0.4.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.316.0.4.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="20.13" steps="17497"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.316.0.4.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="0.84" steps="1206"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.316.0.4.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="10.38" steps="14731"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.316.0.4.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="19.74"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.316.0.4.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="7.21" steps="11213"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.316.0.4.0.5" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="6.44" steps="10504"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.316.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="8.00" steps="9928"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.316.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.89" steps="5775"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.316.0.7" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.14" steps="3563"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.316.0.8" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.51" steps="4684"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.316.0.9" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.62" steps="5529"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.316.0.10" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures32">
     <goal name="decreaseKey&#39;vc.316.0.10.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_right" proved="true" >
      <goal name="decreaseKey&#39;vc.316.0.10.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="decreaseKey&#39;vc.316.0.10.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.316.0.10.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="1.48" steps="4492"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.316.0.10.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="1.45" steps="4332"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.316.0.11" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.96" steps="4983"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.316.0.12" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="7.28" steps="8115"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.317" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="120"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.318" expl="pos := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="167"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.319" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="171"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.320" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.21" steps="174"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.321" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="320"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.322" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.38" steps="820"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.323" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="316"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.324" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.23" steps="259"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.325" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.40" steps="820"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.326" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="319"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.327" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.51" steps="11092"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.328" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="830"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.329" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.329.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.17" steps="172"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.329.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.18" steps="172"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.329.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.18" steps="172"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.329.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.18" steps="172"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.329.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.21" steps="264"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.329.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.21" steps="264"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.329.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.24" steps="287"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.330" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="180"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.331" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="1202"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.332" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="304"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.333" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.40" steps="231"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.334" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="496"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.335" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="1139"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.336" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="492"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.337" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="348"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.338" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="1139"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.339" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="504"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.340" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.340.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.29" steps="227"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.340.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.28" steps="227"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.340.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.69" steps="1574"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.340.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.29" steps="227"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.340.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.28" steps="227"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.340.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="12.66" steps="27046"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.340.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.31" steps="356"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.340.7" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.30" steps="356"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.341" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="1149"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.342" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.51" steps="3114"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.343" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.42" steps="237"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.344" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.39" steps="237"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.345" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.37" steps="237"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.346" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="633"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.347" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="339"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.348" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="327"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.349" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.40" steps="243"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.350" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.37" steps="243"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.351" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="1026"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.352" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="1.42" steps="2743"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.353" expl="tmp := link(self,pos,handle)" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.353.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.353.0.0" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.99" steps="2340"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.353.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.93" steps="2338"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.353.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.45" steps="842"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.353.0.3" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
     <goal name="decreaseKey&#39;vc.353.0.3.0" expl="VC for decreaseKey" proved="true">
     <transf name="unfold" proved="true" arg1="sntlOk">
      <goal name="decreaseKey&#39;vc.353.0.3.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="decreaseKey&#39;vc.353.0.3.0.0.0" expl="VC for decreaseKey" proved="true">
       <proof prover="1"><result status="valid" time="5.70" steps="8630"/></proof>
       </goal>
       <goal name="decreaseKey&#39;vc.353.0.3.0.0.1" expl="VC for decreaseKey" proved="true">
       <proof prover="1"><result status="valid" time="13.59" steps="15931"/></proof>
       </goal>
       <goal name="decreaseKey&#39;vc.353.0.3.0.0.2" expl="VC for decreaseKey" proved="true">
       <proof prover="1"><result status="valid" time="17.36" steps="22100"/></proof>
       </goal>
       <goal name="decreaseKey&#39;vc.353.0.3.0.0.3" expl="VC for decreaseKey" proved="true">
       <proof prover="1"><result status="valid" time="4.76" steps="6628"/></proof>
       </goal>
       <goal name="decreaseKey&#39;vc.353.0.3.0.0.4" expl="VC for decreaseKey" proved="true">
       <proof prover="1"><result status="valid" time="4.85" steps="6629"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.353.0.4" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="decreaseKey&#39;vc.353.0.4.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.353.0.4.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="36.90" steps="16370"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.353.0.4.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="0.45" steps="856"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.353.0.4.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="38.06" steps="18140"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.353.0.4.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="2.46" steps="164300"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.353.0.4.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="3.20" steps="207966"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.353.0.4.0.5" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="26.86" steps="14400"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.353.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="0" timelimit="45" memlimit="10000"><result status="valid" time="0.19" steps="465825"/></proof>
    <proof prover="4" timelimit="45"><result status="valid" time="7.36" steps="545057"/></proof>
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="0.28"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.353.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.56" steps="1492"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.353.0.7" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.93" steps="2335"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.353.0.8" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.95" steps="2417"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.353.0.9" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.99" steps="2417"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.353.0.10" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
     <goal name="decreaseKey&#39;vc.353.0.10.0" expl="VC for decreaseKey" proved="true">
     <transf name="unfold" proved="true" arg1="nodeP">
      <goal name="decreaseKey&#39;vc.353.0.10.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="decreaseKey&#39;vc.353.0.10.0.0.0" expl="VC for decreaseKey" proved="true">
       <proof prover="1"><result status="valid" time="38.48" steps="23497"/></proof>
       </goal>
       <goal name="decreaseKey&#39;vc.353.0.10.0.0.1" expl="VC for decreaseKey" proved="true">
       <proof prover="1"><result status="valid" time="36.15" steps="15414"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.353.0.11" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.53" steps="4313"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.353.0.12" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.35" steps="6143"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.354" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.07" steps="345"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.355" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.21" steps="675"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.356" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.60" steps="1410"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.357" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.14" steps="608"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.358" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.12" steps="522"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.359" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.67" steps="1410"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.360" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.19" steps="675"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.361" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.48" steps="1220"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.362" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.65" steps="1430"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.363" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="35.28" steps="45181"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.364" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.14" steps="351"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.365" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="347"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.366" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.07" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.367" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.04" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.368" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.03" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.369" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.370" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.01" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.371" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="2.09" steps="3328"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.372" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="357"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.373" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="1.57" steps="616"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.374" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="1.13" steps="357"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.375" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.376" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.377" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.378" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.379" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.380" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.08" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.381" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.382" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.383" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.12" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.384" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="1.48" steps="646"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.385" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.386" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.12" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.387" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.10" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.388" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.389" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.390" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="7.00" steps="6809"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.391" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="353"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.392" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.392.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.392.0.0" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.44" steps="3835"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.392.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.27" steps="3831"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.392.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.84" steps="1196"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.392.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="36.16" steps="63388"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.392.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="36.04"/></proof>
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="decreaseKey&#39;vc.392.0.4.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.392.0.4.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="4.79" steps="287117"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.392.0.4.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="0.86" steps="1197"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.392.0.4.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="35.89" steps="18934"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.392.0.4.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="19.83" steps="974116"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.392.0.4.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="9.22" steps="16578"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.392.0.4.0.5" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="9.16" steps="16574"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.392.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="22.78" steps="13375"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.392.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="7.19" steps="10816"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.392.0.7" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.46" steps="3826"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.392.0.8" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.50" steps="5198"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.392.0.9" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="6.17" steps="8585"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.392.0.10" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures32">
     <goal name="decreaseKey&#39;vc.392.0.10.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_right" proved="true" >
      <goal name="decreaseKey&#39;vc.392.0.10.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="decreaseKey&#39;vc.392.0.10.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.392.0.10.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="1.59" steps="4801"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.392.0.10.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="2.12" steps="4655"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.392.0.11" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.49" steps="5602"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.392.0.12" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="12.97" steps="12859"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.393" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.23" steps="215"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.394" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.21" steps="165"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.395" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="310"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.396" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.37" steps="800"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.397" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="308"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.398" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.23" steps="252"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.399" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.40" steps="800"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.400" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="309"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.401" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.13" steps="7210"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.402" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="810"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.403" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.403.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.19" steps="163"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.403.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.19" steps="163"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.403.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.18" steps="163"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.403.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.19" steps="163"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.403.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.22" steps="256"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.403.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.21" steps="256"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.403.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.25" steps="277"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.404" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.23" steps="171"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.405" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.21" steps="171"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.406" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="171"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.407" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.33" steps="479"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.408" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="250"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.409" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.21" steps="239"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.410" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="177"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.411" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="177"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.412" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.39" steps="800"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.413" expl="tmp := link(self,pos,handle)" proved="true">
  <proof prover="1"><result status="valid" time="0.94" steps="1995"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.414" expl="tmp := link(self,pos,handle)" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.414.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.414.0.0" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.65" steps="1811"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.414.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.66" steps="1809"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.414.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.31" steps="653"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.414.0.3" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="sntlOk">
     <goal name="decreaseKey&#39;vc.414.0.3.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.414.0.3.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="1.93" steps="3139"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.414.0.3.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="23.31" steps="7601"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.414.0.3.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="23.24" steps="7601"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.414.0.3.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="1.92" steps="3139"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.414.0.3.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="1.93" steps="3154"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.414.0.4" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="repOk">
     <goal name="decreaseKey&#39;vc.414.0.4.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.414.0.4.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="8.25"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.414.0.4.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="0.30" steps="662"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.414.0.4.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="0.27"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.414.0.4.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="0.30"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.414.0.4.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="4" timelimit="45"><result status="valid" time="2.29" steps="144630"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.414.0.4.0.5" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="24.63" steps="7810"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.414.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="29.29" steps="7328"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.414.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.38" steps="1047"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.414.0.7" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.71" steps="1807"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.414.0.8" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.65" steps="1871"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.414.0.9" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.63" steps="1871"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.414.0.10" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Requires10">
     <goal name="decreaseKey&#39;vc.414.0.10.0" expl="VC for decreaseKey" proved="true">
     <transf name="unfold" proved="true" arg1="nodeP">
      <goal name="decreaseKey&#39;vc.414.0.10.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="decreaseKey&#39;vc.414.0.10.0.0.0" expl="VC for decreaseKey" proved="true">
       <proof prover="1"><result status="valid" time="31.73" steps="12092"/></proof>
       </goal>
       <goal name="decreaseKey&#39;vc.414.0.10.0.0.1" expl="VC for decreaseKey" proved="true">
       <proof prover="1"><result status="valid" time="6.84" steps="5149"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.414.0.11" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.96" steps="2746"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.414.0.12" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.77" steps="2615"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.415" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="279"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.416" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.79" steps="548"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.417" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="1162"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.418" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.76" steps="498"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.419" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.74" steps="425"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.420" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.11" steps="1162"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.421" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="549"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.422" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.04" steps="1020"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.423" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.12" steps="1182"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.424" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="29.69" steps="41287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.425" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="285"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.426" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="281"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.427" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.428" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.429" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.430" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.431" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.432" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.99" steps="526"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.433" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="291"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.434" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="504"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.435" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="291"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.436" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.437" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.438" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.439" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.440" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.441" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.442" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.443" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.444" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.445" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="533"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.446" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.447" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.448" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.449" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.450" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.451" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.64" steps="5239"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.452" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.453" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="pqueueI">
   <goal name="decreaseKey&#39;vc.453.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.453.0.0" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.64" steps="3080"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.453.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.68" steps="3076"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.453.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.64" steps="998"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.453.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="26.02" steps="52141"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.453.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="5" timelimit="45" memlimit="10000"><result status="valid" time="27.82"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.453.0.5" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="4.72" steps="6505"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.453.0.6" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.84" steps="4992"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.453.0.7" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.63" steps="3072"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.453.0.8" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.05" steps="4050"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.453.0.9" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.51" steps="4771"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.453.0.10" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="pqueueI" arg2="in" arg3="Ensures32">
     <goal name="decreaseKey&#39;vc.453.0.10.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_right" proved="true" >
      <goal name="decreaseKey&#39;vc.453.0.10.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="24.96" steps="18292"/></proof>
      <transf name="unfold" proved="true" arg1="nodeP">
       <goal name="decreaseKey&#39;vc.453.0.10.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="decreaseKey&#39;vc.453.0.10.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="1.93" steps="3925"/></proof>
        </goal>
        <goal name="decreaseKey&#39;vc.453.0.10.0.0.0.1" expl="VC for decreaseKey" proved="true">
        <proof prover="1"><result status="valid" time="1.85" steps="3765"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.453.0.11" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="2.19" steps="4294"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.453.0.12" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="3.68" steps="4800"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.454" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="96"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.455" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.456" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.457" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.458" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.459" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.460" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.461" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.462" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.463" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.464" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.465" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.466" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.467" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.468" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.469" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.470" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.471" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.472" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.473" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="0.20" steps="222"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.474" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.475" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.476" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.477" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.478" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.479" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.42" steps="1040"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.480" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="100"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.481" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="16.26" steps="36156"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="PQUEUE_REL" proved="true">
 <goal name="isEmpty&#39;vc" expl="VC for isEmpty" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="isEmpty&#39;vc.0" expl="sz := self.size" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.07" steps="110"/></proof>
  </goal>
  <goal name="isEmpty&#39;vc.1" expl="sz := self.size" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.06" steps="115"/></proof>
  </goal>
  <goal name="isEmpty&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="54"/></proof>
  </goal>
  <goal name="isEmpty&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="54"/></proof>
  </goal>
  <goal name="isEmpty&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.02" steps="54"/></proof>
  </goal>
  <goal name="isEmpty&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.03" steps="54"/></proof>
  </goal>
  <goal name="isEmpty&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.08" steps="468"/></proof>
  </goal>
  <goal name="isEmpty&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.12" steps="1167"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="findMin&#39;vc" expl="VC for findMin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="findMin&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.09" steps="305"/></proof>
  </goal>
  <goal name="findMin&#39;vc.1" expl="result := self.head" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="96"/></proof>
  </goal>
  <goal name="findMin&#39;vc.2" expl="result := self.head" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.06" steps="101"/></proof>
  </goal>
  <goal name="findMin&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="259"/></proof>
  </goal>
  <goal name="findMin&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.07" steps="292"/></proof>
  </goal>
  <goal name="findMin&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.03" steps="62"/></proof>
  </goal>
  <goal name="findMin&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.03" steps="62"/></proof>
  </goal>
  <goal name="findMin&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.02" steps="62"/></proof>
  </goal>
  <goal name="findMin&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.03" steps="62"/></proof>
  </goal>
  <goal name="findMin&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.10" steps="701"/></proof>
  </goal>
  <goal name="findMin&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="64"/></proof>
  </goal>
  <goal name="findMin&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.89" steps="5155"/></proof>
  </goal>
  <goal name="findMin&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.05" steps="162"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="insert&#39;vc" expl="VC for insert" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.06" steps="102"/></proof>
  </goal>
  <goal name="insert&#39;vc.1" expl="sntl := self.sntl" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.05" steps="112"/></proof>
  </goal>
  <goal name="insert&#39;vc.2" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="182"/></proof>
  </goal>
  <goal name="insert&#39;vc.3" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.05" steps="182"/></proof>
  </goal>
  <goal name="insert&#39;vc.4" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.05" steps="184"/></proof>
  </goal>
  <goal name="insert&#39;vc.5" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.06" steps="186"/></proof>
  </goal>
  <goal name="insert&#39;vc.6" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.04" steps="188"/></proof>
  </goal>
  <goal name="insert&#39;vc.7" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.18" steps="242"/></proof>
  </goal>
  <goal name="insert&#39;vc.8" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.18" steps="242"/></proof>
  </goal>
  <goal name="insert&#39;vc.9" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.23" steps="244"/></proof>
  </goal>
  <goal name="insert&#39;vc.10" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.23" steps="246"/></proof>
  </goal>
  <goal name="insert&#39;vc.11" expl="Node(result,k,t)" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.23" steps="248"/></proof>
  </goal>
  <goal name="insert&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.85" steps="446"/></proof>
  </goal>
  <goal name="insert&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.84" steps="446"/></proof>
  </goal>
  <goal name="insert&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.08" steps="740"/></proof>
  </goal>
  <goal name="insert&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.10" steps="750"/></proof>
  </goal>
  <goal name="insert&#39;vc.16" expl="assertion" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.85" steps="464"/></proof>
  </goal>
  <goal name="insert&#39;vc.17" expl="assertion" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.94" steps="465"/></proof>
  </goal>
  <goal name="insert&#39;vc.18" expl="rep := self.rep" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.15" steps="878"/></proof>
  </goal>
  <goal name="insert&#39;vc.19" expl="rep := self.rep" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.18" steps="890"/></proof>
  </goal>
  <goal name="insert&#39;vc.20" expl="hd := self.head" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.60" steps="1060"/></proof>
  </goal>
  <goal name="insert&#39;vc.21" expl="hd := self.head" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.63" steps="1077"/></proof>
  </goal>
  <goal name="insert&#39;vc.22" expl="assertion" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.30" steps="4788"/></proof>
  </goal>
  <goal name="insert&#39;vc.23" expl="guard agreement" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.28" steps="596"/></proof>
  </goal>
  <goal name="insert&#39;vc.24" expl="assertion" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.92" steps="697"/></proof>
  </goal>
  <goal name="insert&#39;vc.25" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.95" steps="699"/></proof>
  </goal>
  <goal name="insert&#39;vc.26" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.23" steps="1527"/></proof>
  </goal>
  <goal name="insert&#39;vc.27" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.61" steps="2740"/></proof>
  </goal>
  <goal name="insert&#39;vc.28" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.20" steps="1181"/></proof>
  </goal>
  <goal name="insert&#39;vc.29" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.18" steps="1022"/></proof>
  </goal>
  <goal name="insert&#39;vc.30" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.76" steps="2741"/></proof>
  </goal>
  <goal name="insert&#39;vc.31" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.27" steps="1526"/></proof>
  </goal>
  <goal name="insert&#39;vc.32" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.45" steps="2708"/></proof>
  </goal>
  <goal name="insert&#39;vc.33" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.76" steps="2753"/></proof>
  </goal>
  <goal name="insert&#39;vc.34" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="20.39" steps="42605"/></proof>
  </goal>
  <goal name="insert&#39;vc.35" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.01" steps="705"/></proof>
  </goal>
  <goal name="insert&#39;vc.36" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.94" steps="705"/></proof>
  </goal>
  <goal name="insert&#39;vc.37" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.35" steps="1538"/></proof>
  </goal>
  <goal name="insert&#39;vc.38" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.55" steps="2793"/></proof>
  </goal>
  <goal name="insert&#39;vc.39" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.30" steps="1192"/></proof>
  </goal>
  <goal name="insert&#39;vc.40" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.17" steps="1030"/></proof>
  </goal>
  <goal name="insert&#39;vc.41" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.90" steps="2794"/></proof>
  </goal>
  <goal name="insert&#39;vc.42" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.35" steps="1539"/></proof>
  </goal>
  <goal name="insert&#39;vc.43" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert&#39;vc.43.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.23" steps="677"/></proof>
   </goal>
   <goal name="insert&#39;vc.43.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.40" steps="4015"/></proof>
   </goal>
   <goal name="insert&#39;vc.43.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.42" steps="3997"/></proof>
   </goal>
   <goal name="insert&#39;vc.43.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.45" steps="4015"/></proof>
   </goal>
   <goal name="insert&#39;vc.43.4" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.23" steps="677"/></proof>
   </goal>
   <goal name="insert&#39;vc.43.5" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.96" steps="11339"/></proof>
   <proof prover="4" timelimit="25" memlimit="9000"><result status="valid" time="3.35" steps="188420"/></proof>
   </goal>
   <goal name="insert&#39;vc.43.6" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.91" steps="11339"/></proof>
   <proof prover="4" timelimit="25" memlimit="9000"><result status="valid" time="3.47" steps="188384"/></proof>
   </goal>
   <goal name="insert&#39;vc.43.7" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.02" steps="11339"/></proof>
   <proof prover="4" timelimit="25" memlimit="9000"><result status="valid" time="3.33" steps="188364"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.44" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.82" steps="2804"/></proof>
  </goal>
  <goal name="insert&#39;vc.45" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="19.42" steps="36940"/></proof>
  </goal>
  <goal name="insert&#39;vc.46" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.86" steps="711"/></proof>
  </goal>
  <goal name="insert&#39;vc.47" expl="assertion" proved="true">
  <transf name="case" proved="true" arg1="(l_pq = l_self /\ r_pq = r_self)">
   <goal name="insert&#39;vc.47.0" expl="true case (assertion)" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.73" steps="724"/></proof>
   </goal>
   <goal name="insert&#39;vc.47.1" expl="false case (assertion)" proved="true">
   <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires3">
    <goal name="insert&#39;vc.47.1.0" expl="false case (assertion)" proved="true">
    <transf name="split_premise_right" proved="true" >
     <goal name="insert&#39;vc.47.1.0.0" expl="false case (assertion)" proved="true">
     <transf name="instantiate" proved="true" arg1="Requires7" arg2="l_pq, r_pq">
      <goal name="insert&#39;vc.47.1.0.0.0" expl="false case (assertion)" proved="true">
      <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="10.04" steps="23959"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.48" expl="assertion" proved="true">
  <transf name="unfold" proved="true" arg1="coupling0">
   <goal name="insert&#39;vc.48.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.48.0.0" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.14" steps="681"/></proof>
    </goal>
    <goal name="insert&#39;vc.48.0.1" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.07" steps="676"/></proof>
    </goal>
    <goal name="insert&#39;vc.48.0.2" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(l_n = l_result /\ r_n = r_result)">
     <goal name="insert&#39;vc.48.0.2.0" expl="true case" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.13" steps="694"/></proof>
     </goal>
     <goal name="insert&#39;vc.48.0.2.1" expl="false case" proved="true">
     <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Assert5">
      <goal name="insert&#39;vc.48.0.2.1.0" expl="false case" proved="true">
      <transf name="split_premise_full" proved="true" >
       <goal name="insert&#39;vc.48.0.2.1.0.0" expl="false case" proved="true">
       <transf name="apply" proved="true" arg1="Assert27" arg2="with" arg3="l_n,r_n">
        <goal name="insert&#39;vc.48.0.2.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.18" steps="722"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.2.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.22" steps="722"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.2.1.0.0.2" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.20" steps="722"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.2.1.0.0.3" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.20" steps="722"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.2.1.0.0.4" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.08" steps="5855"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.2.1.0.0.5" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.37" steps="5946"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.2.1.0.0.6" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.15" steps="6073"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.2.1.0.0.7" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.96" steps="5323"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.2.1.0.0.8" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.89" steps="6754"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.2.1.0.0.9" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.66" steps="4712"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.2.1.0.0.10" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="12.43" steps="19188"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.2.1.0.0.11" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="7.76" steps="11257"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.2.1.0.0.12" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="10.86" steps="22772"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.48.0.3" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(l_n = l_result /\ r_n = r_result)">
     <goal name="insert&#39;vc.48.0.3.0" expl="true case" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.23" steps="694"/></proof>
     </goal>
     <goal name="insert&#39;vc.48.0.3.1" expl="false case" proved="true">
     <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Assert5">
      <goal name="insert&#39;vc.48.0.3.1.0" expl="false case" proved="true">
      <transf name="split_premise_full" proved="true" >
       <goal name="insert&#39;vc.48.0.3.1.0.0" expl="false case" proved="true">
       <transf name="apply" proved="true" arg1="Assert26" arg2="with" arg3="l_n,r_n">
        <goal name="insert&#39;vc.48.0.3.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.21" steps="722"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.3.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.27" steps="722"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.3.1.0.0.2" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.19" steps="722"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.3.1.0.0.3" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.25" steps="722"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.3.1.0.0.4" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.40" steps="5855"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.3.1.0.0.5" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.50" steps="5946"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.3.1.0.0.6" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.33" steps="6073"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.3.1.0.0.7" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.98" steps="5323"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.3.1.0.0.8" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.89" steps="6754"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.3.1.0.0.9" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.80" steps="4712"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.3.1.0.0.10" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="12.65" steps="19188"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.3.1.0.0.11" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="7.84" steps="11257"/></proof>
        </goal>
        <goal name="insert&#39;vc.48.0.3.1.0.0.12" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="10.73" steps="22772"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.48.0.4" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(l_n = l_result /\ r_n = r_result)">
     <goal name="insert&#39;vc.48.0.4.0" expl="true case" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.15" steps="694"/></proof>
     </goal>
     <goal name="insert&#39;vc.48.0.4.1" expl="false case" proved="true">
     <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Assert5">
      <goal name="insert&#39;vc.48.0.4.1.0" expl="false case" proved="true">
      <transf name="split_premise_right" proved="true" >
       <goal name="insert&#39;vc.48.0.4.1.0.0" expl="false case" proved="true">
       <transf name="subst_all" proved="true" >
        <goal name="insert&#39;vc.48.0.4.1.0.0.0" expl="false case" proved="true">
        <transf name="assert" proved="true" arg1="(idRef pi101 l_self r_self /\ idRef pi101 l_n r_n)">
         <goal name="insert&#39;vc.48.0.4.1.0.0.0.0" expl="asserted formula" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="8.80" steps="13862"/></proof>
         </goal>
         <goal name="insert&#39;vc.48.0.4.1.0.0.0.1" expl="false case" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="6.77" steps="18948"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.48.0.5" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(l_n = l_result /\ r_n = r_result)">
     <goal name="insert&#39;vc.48.0.5.0" expl="true case" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.15" steps="694"/></proof>
     </goal>
     <goal name="insert&#39;vc.48.0.5.1" expl="false case" proved="true">
     <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Assert5">
      <goal name="insert&#39;vc.48.0.5.1.0" expl="false case" proved="true">
      <transf name="split_premise_right" proved="true" >
       <goal name="insert&#39;vc.48.0.5.1.0.0" expl="false case" proved="true">
       <transf name="subst_all" proved="true" >
        <goal name="insert&#39;vc.48.0.5.1.0.0.0" expl="false case" proved="true">
        <transf name="assert" proved="true" arg1="(idRef pi101 l_self r_self /\ idRef pi101 l_n r_n)">
         <goal name="insert&#39;vc.48.0.5.1.0.0.0.0" expl="asserted formula" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="8.89" steps="13862"/></proof>
         </goal>
         <goal name="insert&#39;vc.48.0.5.1.0.0.0.1" expl="false case" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="24.58" steps="54776"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.48.0.6" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(l_n = l_result /\ r_n = r_result)">
     <goal name="insert&#39;vc.48.0.6.0" expl="true case" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.13" steps="694"/></proof>
     </goal>
     <goal name="insert&#39;vc.48.0.6.1" expl="false case" proved="true">
     <transf name="assert" proved="true" arg1="(idRef pi101 l_self r_self /\ idRef pi101 l_n r_n)">
      <goal name="insert&#39;vc.48.0.6.1.0" expl="asserted formula" proved="true">
      <proof prover="1" timelimit="90"><result status="valid" time="8.05" steps="12682"/></proof>
      </goal>
      <goal name="insert&#39;vc.48.0.6.1.1" expl="false case" proved="true">
      <proof prover="1" timelimit="90"><result status="valid" time="11.76" steps="28746"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.49" expl="sz := self.size" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.43" steps="1286"/></proof>
  </goal>
  <goal name="insert&#39;vc.50" expl="sz := self.size" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.45" steps="1296"/></proof>
  </goal>
  <goal name="insert&#39;vc.51" expl="assertion" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.12" steps="721"/></proof>
  </goal>
  <goal name="insert&#39;vc.52" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.00" steps="819"/></proof>
  </goal>
  <goal name="insert&#39;vc.53" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.24" steps="1744"/></proof>
  </goal>
  <goal name="insert&#39;vc.54" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.87" steps="3106"/></proof>
  </goal>
  <goal name="insert&#39;vc.55" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.10" steps="1360"/></proof>
  </goal>
  <goal name="insert&#39;vc.56" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.04" steps="1184"/></proof>
  </goal>
  <goal name="insert&#39;vc.57" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.75" steps="3106"/></proof>
  </goal>
  <goal name="insert&#39;vc.58" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.34" steps="1743"/></proof>
  </goal>
  <goal name="insert&#39;vc.59" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.63" steps="2713"/></proof>
  </goal>
  <goal name="insert&#39;vc.60" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.00" steps="3119"/></proof>
  </goal>
  <goal name="insert&#39;vc.61" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="8.91" steps="17996"/></proof>
  </goal>
  <goal name="insert&#39;vc.62" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.96" steps="825"/></proof>
  </goal>
  <goal name="insert&#39;vc.63" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.95" steps="825"/></proof>
  </goal>
  <goal name="insert&#39;vc.64" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.14" steps="1753"/></proof>
  </goal>
  <goal name="insert&#39;vc.65" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.93" steps="3160"/></proof>
  </goal>
  <goal name="insert&#39;vc.66" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.13" steps="1367"/></proof>
  </goal>
  <goal name="insert&#39;vc.67" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.05" steps="1189"/></proof>
  </goal>
  <goal name="insert&#39;vc.68" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.01" steps="3160"/></proof>
  </goal>
  <goal name="insert&#39;vc.69" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.31" steps="1752"/></proof>
  </goal>
  <goal name="insert&#39;vc.70" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.49" steps="2884"/></proof>
  </goal>
  <goal name="insert&#39;vc.71" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.84" steps="3167"/></proof>
  </goal>
  <goal name="insert&#39;vc.72" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert&#39;vc.72.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.29" steps="8295"/></proof>
   </goal>
   <goal name="insert&#39;vc.72.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.79" steps="793"/></proof>
   </goal>
   <goal name="insert&#39;vc.72.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.80" steps="793"/></proof>
   </goal>
   <goal name="insert&#39;vc.72.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.81" steps="793"/></proof>
   </goal>
   <goal name="insert&#39;vc.72.4" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.97" steps="1163"/></proof>
   </goal>
   <goal name="insert&#39;vc.72.5" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.91" steps="1171"/></proof>
   </goal>
   <goal name="insert&#39;vc.72.6" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.29" steps="1498"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.73" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.98" steps="831"/></proof>
  </goal>
  <goal name="insert&#39;vc.74" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.04" steps="1458"/></proof>
  </goal>
  <goal name="insert&#39;vc.75" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.11" steps="1464"/></proof>
  </goal>
  <goal name="insert&#39;vc.76" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.04" steps="1172"/></proof>
  </goal>
  <goal name="insert&#39;vc.77" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.82" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.78" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="2.81" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.79" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="2.80" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.80" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="2.80" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.81" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.91" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.82" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.55" steps="1565"/></proof>
  </goal>
  <goal name="insert&#39;vc.83" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.57" steps="1567"/></proof>
  </goal>
  <goal name="insert&#39;vc.84" expl="write frame head" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.52" steps="1530"/></proof>
  </goal>
  <goal name="insert&#39;vc.85" expl="write frame child" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.50" steps="1569"/></proof>
  </goal>
  <goal name="insert&#39;vc.86" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="2.92" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.87" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="2.93" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.88" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.54" steps="1545"/></proof>
  </goal>
  <goal name="insert&#39;vc.89" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="2.81" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.90" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.36" steps="5182"/></proof>
  </goal>
  <goal name="insert&#39;vc.91" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="2.80" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.92" expl="write frame size" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.58" steps="1534"/></proof>
  </goal>
  <goal name="insert&#39;vc.93" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="2.83" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.94" expl="write frame length" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.84" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.95" expl="write frame key" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.50" steps="5184"/></proof>
  </goal>
  <goal name="insert&#39;vc.96" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="2.83" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.97" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="2.92" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.98" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="2.92" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.99" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="2.94" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.100" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="2.83" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.101" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.10" steps="1172"/></proof>
  </goal>
  <goal name="insert&#39;vc.102" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.88" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.103" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="2.86" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.104" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="2.83" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.105" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="2.87" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.106" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.83" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.107" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.38" steps="9754"/></proof>
  </goal>
  <goal name="insert&#39;vc.108" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.98" steps="9767"/></proof>
  </goal>
  <goal name="insert&#39;vc.109" expl="write frame head" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.63" steps="1531"/></proof>
  </goal>
  <goal name="insert&#39;vc.110" expl="write frame child" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.43" steps="11796"/></proof>
  </goal>
  <goal name="insert&#39;vc.111" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="2.94" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.112" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="2.93" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.113" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.47" steps="1546"/></proof>
  </goal>
  <goal name="insert&#39;vc.114" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="2.80" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.115" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.65" steps="5864"/></proof>
  </goal>
  <goal name="insert&#39;vc.116" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="2.80" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.117" expl="write frame size" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.67" steps="1535"/></proof>
  </goal>
  <goal name="insert&#39;vc.118" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="2.96" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.119" expl="write frame length" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.90" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.120" expl="write frame key" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.59" steps="5866"/></proof>
  </goal>
  <goal name="insert&#39;vc.121" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="2.84" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.122" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="2.89" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.123" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="2.83" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.124" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="2.82" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.125" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="2.83" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.126" expl="postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="insert&#39;vc.126.0" expl="postcondition" proved="true">
   <transf name="unfold" proved="true" arg1="okRefperm">
    <goal name="insert&#39;vc.126.0.0" expl="VC for insert" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="insert&#39;vc.126.0.0.0" expl="VC for insert" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="9.04" steps="14187"/></proof>
     </goal>
     <goal name="insert&#39;vc.126.0.0.1" expl="VC for insert" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="8.56" steps="13216"/></proof>
     </goal>
     <goal name="insert&#39;vc.126.0.0.2" expl="VC for insert" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.29" steps="12539"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.127" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="14.49" steps="49718"/></proof>
  </goal>
  <goal name="insert&#39;vc.128" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="insert&#39;vc.128.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.128.0.0" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(l_pq = l_self /\ r_pq = r_self)">
     <goal name="insert&#39;vc.128.0.0.0" expl="true case" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="15.54" steps="22305"/></proof>
     </goal>
     <goal name="insert&#39;vc.128.0.0.1" expl="false case" proved="true">
     <transf name="unfold" proved="true" arg1="coupling0">
      <goal name="insert&#39;vc.128.0.0.1.0" expl="VC for insert" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="insert&#39;vc.128.0.0.1.0.0" expl="VC for insert" proved="true">
       <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires3">
        <goal name="insert&#39;vc.128.0.0.1.0.0.0" expl="VC for insert" proved="true">
        <transf name="split_premise_right" proved="true" >
         <goal name="insert&#39;vc.128.0.0.1.0.0.0.0" expl="VC for insert" proved="true">
         <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Requires7">
          <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0" expl="VC for insert" proved="true">
          <transf name="split_premise_full" proved="true" >
           <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0.0" expl="VC for insert" proved="true">
           <transf name="apply" proved="true" arg1="Requires29" arg2="with" arg3="l_pq,r_pq">
            <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.89" steps="822"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.60" steps="1519"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.82" steps="816"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0.0.3" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.83" steps="822"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0.0.4" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.60" steps="1519"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0.0.5" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.71" steps="816"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0.0.6" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="22.12" steps="27183"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0.0.7" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.58" steps="1519"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0.0.8" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.66" steps="1519"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0.0.9" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.66" steps="816"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0.0.10" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="22.51" steps="27183"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0.0.11" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="10.32" steps="14903"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.0.0.0.0.0.12" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.51" steps="3552"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert&#39;vc.128.0.0.1.0.1" expl="VC for insert" proved="true">
       <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.64" steps="4232"/></proof>
       </goal>
       <goal name="insert&#39;vc.128.0.0.1.0.2" expl="VC for insert" proved="true">
       <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires3">
        <goal name="insert&#39;vc.128.0.0.1.0.2.0" expl="VC for insert" proved="true">
        <transf name="split_premise_full" proved="true" >
         <goal name="insert&#39;vc.128.0.0.1.0.2.0.0" expl="VC for insert" proved="true">
         <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Requires7">
          <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0" expl="VC for insert" proved="true">
          <transf name="split_premise_full" proved="true" >
           <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0" expl="VC for insert" proved="true">
           <transf name="apply" proved="true" arg1="Requires26" arg2="with" arg3="l_pq,r_pq,l_n,r_n">
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.83" steps="836"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.67" steps="1563"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.65" steps="830"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.3" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.92" steps="836"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.4" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.76" steps="1563"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.5" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.65" steps="830"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.6" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="34.68" steps="51985"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.7" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.63" steps="1563"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.8" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.78" steps="1563"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.9" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.64" steps="830"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.10" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="34.66" steps="51985"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.11" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="23.64" steps="36756"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.12" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="19.32" steps="32164"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.13" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.57" steps="11110"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.14" expl="apply premises" proved="true">
            <transf name="subst_all" proved="true" >
             <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.14.0" expl="apply premises" proved="true">
             <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="13.60" steps="15060"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.15" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="45.49" steps="82585"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.16" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="11.93" steps="18129"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.17" expl="apply premises" proved="true">
            <transf name="assert" proved="true" arg1="(l_n &lt;&gt; l_result /\ r_n &lt;&gt; r_result)">
             <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.17.0" expl="asserted formula" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.17.0.0" expl="asserted formula" proved="true">
              <transf name="subst_all" proved="true" >
               <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.17.0.0.0" expl="asserted formula" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="20.90" steps="20688"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.17.0.1" expl="asserted formula" proved="true">
              <transf name="subst_all" proved="true" >
               <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.17.0.1.0" expl="asserted formula" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="17.14" steps="20111"/></proof>
               <proof prover="4" timelimit="25" memlimit="9000"><result status="valid" time="12.22" steps="639641"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.17.1" expl="apply premises" proved="true">
             <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="46.36" steps="60892"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.18" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="17.59" steps="26808"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.2.0.0.0.0.19" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="21.75" steps="31877"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert&#39;vc.128.0.0.1.0.3" expl="VC for insert" proved="true">
       <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires3">
        <goal name="insert&#39;vc.128.0.0.1.0.3.0" expl="VC for insert" proved="true">
        <transf name="split_premise_full" proved="true" >
         <goal name="insert&#39;vc.128.0.0.1.0.3.0.0" expl="VC for insert" proved="true">
         <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Requires7">
          <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0" expl="VC for insert" proved="true">
          <transf name="split_premise_full" proved="true" >
           <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0" expl="VC for insert" proved="true">
           <transf name="apply" proved="true" arg1="Requires25" arg2="with" arg3="l_pq,r_pq,l_n,r_n">
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.86" steps="836"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.55" steps="1563"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.70" steps="830"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.3" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.80" steps="836"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.4" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.65" steps="1563"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.5" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.61" steps="830"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.6" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="35.98" steps="51985"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.7" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.62" steps="1563"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.8" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.64" steps="1563"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.9" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.66" steps="830"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.10" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="35.93" steps="51985"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.11" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="25.44" steps="36756"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.12" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="19.26" steps="32164"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.13" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.59" steps="11110"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.14" expl="apply premises" proved="true">
            <transf name="subst_all" proved="true" >
             <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.14.0" expl="apply premises" proved="true">
             <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="14.03" steps="15060"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.15" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="43.67" steps="82585"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.16" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="11.93" steps="18129"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.17" expl="apply premises" proved="true">
            <transf name="assert" proved="true" arg1="(l_n &lt;&gt; l_result /\ r_n &lt;&gt; r_result)">
             <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.17.0" expl="asserted formula" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.17.0.0" expl="asserted formula" proved="true">
              <transf name="subst_all" proved="true" >
               <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.17.0.0.0" expl="asserted formula" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="20.50" steps="20688"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.17.0.1" expl="asserted formula" proved="true">
              <transf name="subst_all" proved="true" >
               <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.17.0.1.0" expl="asserted formula" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="16.70" steps="20111"/></proof>
               <proof prover="4" timelimit="25" memlimit="9000"><result status="valid" time="12.68" steps="639641"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.17.1" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="45.93" steps="60892"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.18" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="18.15" steps="26808"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.19" expl="apply premises" proved="true">
            <transf name="subst_all" proved="true" >
             <goal name="insert&#39;vc.128.0.0.1.0.3.0.0.0.0.19.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="30.21" steps="24854"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert&#39;vc.128.0.0.1.0.4" expl="VC for insert" proved="true">
       <transf name="assert" proved="true" arg1="(l_n &lt;&gt; l_result)">
        <goal name="insert&#39;vc.128.0.0.1.0.4.0" expl="asserted formula" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.96" steps="13498"/></proof>
        </goal>
        <goal name="insert&#39;vc.128.0.0.1.0.4.1" expl="VC for insert" proved="true">
        <transf name="assert" proved="true" arg1="(r_n &lt;&gt; r_result)">
         <goal name="insert&#39;vc.128.0.0.1.0.4.1.0" expl="asserted formula" proved="true">
         <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.82" steps="840"/></proof>
         </goal>
         <goal name="insert&#39;vc.128.0.0.1.0.4.1.1" expl="VC for insert" proved="true">
         <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires3">
          <goal name="insert&#39;vc.128.0.0.1.0.4.1.1.0" expl="VC for insert" proved="true">
          <transf name="split_premise_right" proved="true" >
           <goal name="insert&#39;vc.128.0.0.1.0.4.1.1.0.0" expl="VC for insert" proved="true">
           <transf name="assert" proved="true" arg1="(idRef pi101 l_pq r_pq /\ idRef pi101 l_n r_n)">
            <goal name="insert&#39;vc.128.0.0.1.0.4.1.1.0.0.0" expl="asserted formula" proved="true">
            <proof prover="1" timelimit="90"><result status="valid" time="16.65" steps="32970"/></proof>
            </goal>
            <goal name="insert&#39;vc.128.0.0.1.0.4.1.1.0.0.1" expl="VC for insert" proved="true">
            <transf name="instantiate" proved="true" arg1="Requires7" arg2="l_pq,r_pq">
             <goal name="insert&#39;vc.128.0.0.1.0.4.1.1.0.0.1.0" expl="VC for insert" proved="true">
             <proof prover="1" timelimit="90"><result status="valid" time="30.10" steps="79796"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert&#39;vc.128.0.0.1.0.5" expl="VC for insert" proved="true">
       <transf name="assert" proved="true" arg1="(l_n &lt;&gt; l_result /\ r_n &lt;&gt; r_result)">
        <goal name="insert&#39;vc.128.0.0.1.0.5.0" expl="asserted formula" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="10.90" steps="35414"/></proof>
        </goal>
        <goal name="insert&#39;vc.128.0.0.1.0.5.1" expl="VC for insert" proved="true">
        <transf name="assert" proved="true" arg1="(idRef pi101 l_pq r_pq /\ idRef pi101 l_n r_n)">
         <goal name="insert&#39;vc.128.0.0.1.0.5.1.0" expl="asserted formula" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="15.29" steps="31525"/></proof>
         </goal>
         <goal name="insert&#39;vc.128.0.0.1.0.5.1.1" expl="VC for insert" proved="true">
         <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires3">
          <goal name="insert&#39;vc.128.0.0.1.0.5.1.1.0" expl="VC for insert" proved="true">
          <transf name="split_premise_right" proved="true" >
           <goal name="insert&#39;vc.128.0.0.1.0.5.1.1.0.0" expl="VC for insert" proved="true">
           <transf name="instantiate" proved="true" arg1="Requires7" arg2="l_pq,r_pq">
            <goal name="insert&#39;vc.128.0.0.1.0.5.1.1.0.0.0" expl="VC for insert" proved="true">
            <proof prover="1" timelimit="90"><result status="valid" time="70.87" steps="183873"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert&#39;vc.128.0.0.1.0.6" expl="VC for insert" proved="true">
       <transf name="assert" proved="true" arg1="(l_n &lt;&gt; l_result /\ r_n &lt;&gt; r_result)">
        <goal name="insert&#39;vc.128.0.0.1.0.6.0" expl="asserted formula" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="11.05" steps="35414"/></proof>
        </goal>
        <goal name="insert&#39;vc.128.0.0.1.0.6.1" expl="VC for insert" proved="true">
        <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires3">
         <goal name="insert&#39;vc.128.0.0.1.0.6.1.0" expl="VC for insert" proved="true">
         <transf name="split_premise_right" proved="true" >
          <goal name="insert&#39;vc.128.0.0.1.0.6.1.0.0" expl="VC for insert" proved="true">
          <transf name="instantiate" proved="true" arg1="Requires7" arg2="l_pq,r_pq">
           <goal name="insert&#39;vc.128.0.0.1.0.6.1.0.0.0" expl="VC for insert" proved="true">
           <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Hinst">
            <goal name="insert&#39;vc.128.0.0.1.0.6.1.0.0.0.0" expl="VC for insert" proved="true">
            <transf name="assert" proved="true" arg1="(idRef pi101 l_pq r_pq /\ idRef pi101 l_n r_n)">
             <goal name="insert&#39;vc.128.0.0.1.0.6.1.0.0.0.0.0" expl="asserted formula" proved="true">
             <proof prover="1" timelimit="90"><result status="valid" time="19.89" steps="40411"/></proof>
             </goal>
             <goal name="insert&#39;vc.128.0.0.1.0.6.1.0.0.0.0.1" expl="VC for insert" proved="true">
             <proof prover="1" timelimit="90"><result status="valid" time="9.62" steps="33362"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.128.0.1" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.70" steps="800"/></proof>
    </goal>
    <goal name="insert&#39;vc.128.0.2" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.72" steps="800"/></proof>
    </goal>
    <goal name="insert&#39;vc.128.0.3" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.61" steps="800"/></proof>
    </goal>
    <goal name="insert&#39;vc.128.0.4" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.65" steps="800"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.129" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.78" steps="842"/></proof>
  </goal>
  <goal name="insert&#39;vc.130" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.82" steps="842"/></proof>
  </goal>
  <goal name="insert&#39;vc.131" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.84" steps="842"/></proof>
  </goal>
  <goal name="insert&#39;vc.132" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.80" steps="842"/></proof>
  </goal>
  <goal name="insert&#39;vc.133" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.80" steps="844"/></proof>
  </goal>
  <goal name="insert&#39;vc.134" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.10" steps="1021"/></proof>
  </goal>
  <goal name="insert&#39;vc.135" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.10" steps="1033"/></proof>
  </goal>
  <goal name="insert&#39;vc.136" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.45" steps="1527"/></proof>
  </goal>
  <goal name="insert&#39;vc.137" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.81" steps="858"/></proof>
  </goal>
  <goal name="insert&#39;vc.138" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.50" steps="601"/></proof>
  </goal>
  <goal name="insert&#39;vc.139" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.58" steps="1343"/></proof>
  </goal>
  <goal name="insert&#39;vc.140" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.13" steps="2462"/></proof>
  </goal>
  <goal name="insert&#39;vc.141" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.60" steps="1060"/></proof>
  </goal>
  <goal name="insert&#39;vc.142" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.55" steps="907"/></proof>
  </goal>
  <goal name="insert&#39;vc.143" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.04" steps="2462"/></proof>
  </goal>
  <goal name="insert&#39;vc.144" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.64" steps="1344"/></proof>
  </goal>
  <goal name="insert&#39;vc.145" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.96" steps="2416"/></proof>
  </goal>
  <goal name="insert&#39;vc.146" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.19" steps="2474"/></proof>
  </goal>
  <goal name="insert&#39;vc.147" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="20.18" steps="39768"/></proof>
  </goal>
  <goal name="insert&#39;vc.148" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.50" steps="607"/></proof>
  </goal>
  <goal name="insert&#39;vc.149" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.54" steps="607"/></proof>
  </goal>
  <goal name="insert&#39;vc.150" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.63" steps="1359"/></proof>
  </goal>
  <goal name="insert&#39;vc.151" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.15" steps="2510"/></proof>
  </goal>
  <goal name="insert&#39;vc.152" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.55" steps="1071"/></proof>
  </goal>
  <goal name="insert&#39;vc.153" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.57" steps="917"/></proof>
  </goal>
  <goal name="insert&#39;vc.154" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.21" steps="2511"/></proof>
  </goal>
  <goal name="insert&#39;vc.155" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.61" steps="1359"/></proof>
  </goal>
  <goal name="insert&#39;vc.156" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert&#39;vc.156.0" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.99" steps="579"/></proof>
   </goal>
   <goal name="insert&#39;vc.156.1" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.05" steps="3800"/></proof>
   </goal>
   <goal name="insert&#39;vc.156.2" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.05" steps="3783"/></proof>
   </goal>
   <goal name="insert&#39;vc.156.3" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.05" steps="3800"/></proof>
   </goal>
   <goal name="insert&#39;vc.156.4" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.95" steps="579"/></proof>
   </goal>
   <goal name="insert&#39;vc.156.5" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.45" steps="9696"/></proof>
   </goal>
   <goal name="insert&#39;vc.156.6" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.60" steps="9696"/></proof>
   </goal>
   <goal name="insert&#39;vc.156.7" expl="type invariant" proved="true">
   <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.34" steps="16374"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.157" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.11" steps="2522"/></proof>
  </goal>
  <goal name="insert&#39;vc.158" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="37.19" steps="56586"/></proof>
  </goal>
  <goal name="insert&#39;vc.159" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.57" steps="613"/></proof>
  </goal>
  <goal name="insert&#39;vc.160" expl="assertion" proved="true">
  <transf name="unfold" proved="true" arg1="coupling0">
   <goal name="insert&#39;vc.160.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.160.0.0" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.93" steps="583"/></proof>
    </goal>
    <goal name="insert&#39;vc.160.0.1" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.53" steps="2854"/></proof>
    </goal>
    <goal name="insert&#39;vc.160.0.2" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(l_n = l_result /\ r_n = r_result)">
     <goal name="insert&#39;vc.160.0.2.0" expl="true case" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.82" steps="596"/></proof>
     </goal>
     <goal name="insert&#39;vc.160.0.2.1" expl="false case" proved="true">
     <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Assert3">
      <goal name="insert&#39;vc.160.0.2.1.0" expl="false case" proved="true">
      <transf name="split_premise_full" proved="true" >
       <goal name="insert&#39;vc.160.0.2.1.0.0" expl="false case" proved="true">
       <transf name="apply" proved="true" arg1="Assert24" arg2="with" arg3="l_n,r_n">
        <goal name="insert&#39;vc.160.0.2.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.88" steps="624"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.2.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.84" steps="624"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.2.1.0.0.2" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.86" steps="624"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.2.1.0.0.3" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.86" steps="624"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.2.1.0.0.4" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.42" steps="13439"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.2.1.0.0.5" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.22" steps="13664"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.2.1.0.0.6" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.34" steps="12671"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.2.1.0.0.7" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.41" steps="12689"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.2.1.0.0.8" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.66" steps="14101"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.2.1.0.0.9" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.28" steps="12879"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.2.1.0.0.10" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="23.83" steps="45765"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.2.1.0.0.11" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="26.16" steps="73349"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.2.1.0.0.12" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="20.58" steps="52783"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.160.0.3" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(l_n = l_result /\ r_n = r_result)">
     <goal name="insert&#39;vc.160.0.3.0" expl="true case" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.80" steps="596"/></proof>
     </goal>
     <goal name="insert&#39;vc.160.0.3.1" expl="false case" proved="true">
     <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Assert3">
      <goal name="insert&#39;vc.160.0.3.1.0" expl="false case" proved="true">
      <transf name="split_premise_right" proved="true" >
       <goal name="insert&#39;vc.160.0.3.1.0.0" expl="false case" proved="true">
       <transf name="apply" proved="true" arg1="Assert8" arg2="with" arg3="l_n,r_n">
        <goal name="insert&#39;vc.160.0.3.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.82" steps="612"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.3.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.84" steps="612"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.3.1.0.0.2" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.83" steps="612"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.3.1.0.0.3" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.81" steps="612"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.3.1.0.0.4" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.42" steps="4739"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.3.1.0.0.5" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.58" steps="4815"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.3.1.0.0.6" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.28" steps="4724"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.3.1.0.0.7" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.19" steps="4606"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.3.1.0.0.8" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.45" steps="5404"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.3.1.0.0.9" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.20" steps="4552"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.3.1.0.0.10" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="11.07" steps="17734"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.3.1.0.0.11" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.11" steps="11911"/></proof>
        </goal>
        <goal name="insert&#39;vc.160.0.3.1.0.0.12" expl="apply premises" proved="true">
        <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.16" steps="17161"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.160.0.4" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(l_n = l_result /\ r_n = r_result)">
     <goal name="insert&#39;vc.160.0.4.0" expl="true case" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.80" steps="596"/></proof>
     </goal>
     <goal name="insert&#39;vc.160.0.4.1" expl="false case" proved="true">
     <transf name="assert" proved="true" arg1="(idRef pi101 l_self r_self /\ idRef pi101 l_n r_n)">
      <goal name="insert&#39;vc.160.0.4.1.0" expl="asserted formula" proved="true">
      <proof prover="1" timelimit="90"><result status="valid" time="6.84" steps="12838"/></proof>
      </goal>
      <goal name="insert&#39;vc.160.0.4.1.1" expl="false case" proved="true">
      <proof prover="1" timelimit="90"><result status="valid" time="6.71" steps="18113"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.160.0.5" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(l_n = l_result /\ r_n = r_result)">
     <goal name="insert&#39;vc.160.0.5.0" expl="true case" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.81" steps="596"/></proof>
     </goal>
     <goal name="insert&#39;vc.160.0.5.1" expl="false case" proved="true">
     <transf name="assert" proved="true" arg1="(idRef pi101 l_self r_self /\ idRef pi101 l_n r_n)">
      <goal name="insert&#39;vc.160.0.5.1.0" expl="asserted formula" proved="true">
      <proof prover="1" timelimit="90"><result status="valid" time="6.90" steps="12838"/></proof>
      </goal>
      <goal name="insert&#39;vc.160.0.5.1.1" expl="false case" proved="true">
      <proof prover="1" timelimit="90"><result status="valid" time="24.52" steps="52650"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.160.0.6" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(l_n = l_result /\ r_n = r_result)">
     <goal name="insert&#39;vc.160.0.6.0" expl="true case" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.83" steps="596"/></proof>
     </goal>
     <goal name="insert&#39;vc.160.0.6.1" expl="false case" proved="true">
     <transf name="assert" proved="true" arg1="(idRef pi101 l_self r_self /\ idRef pi101 l_n r_n)">
      <goal name="insert&#39;vc.160.0.6.1.0" expl="asserted formula" proved="true">
      <proof prover="1" timelimit="90"><result status="valid" time="6.86" steps="12838"/></proof>
      </goal>
      <goal name="insert&#39;vc.160.0.6.1.1" expl="false case" proved="true">
      <proof prover="1" timelimit="90"><result status="valid" time="6.58" steps="18115"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.161" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.82" steps="1128"/></proof>
  </goal>
  <goal name="insert&#39;vc.162" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.38" steps="620"/></proof>
  </goal>
  <goal name="insert&#39;vc.163" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.14" steps="2452"/></proof>
  </goal>
  <goal name="insert&#39;vc.164" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.35" steps="622"/></proof>
  </goal>
  <goal name="insert&#39;vc.165" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.62" steps="1136"/></proof>
  </goal>
  <goal name="insert&#39;vc.166" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.34" steps="624"/></proof>
  </goal>
  <goal name="insert&#39;vc.167" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.94" steps="1147"/></proof>
  </goal>
  <goal name="insert&#39;vc.168" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.36" steps="626"/></proof>
  </goal>
  <goal name="insert&#39;vc.169" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.41" steps="3351"/></proof>
  </goal>
  <goal name="insert&#39;vc.170" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.86" steps="1194"/></proof>
  </goal>
  <goal name="insert&#39;vc.171" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.58" steps="1157"/></proof>
  </goal>
  <goal name="insert&#39;vc.172" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.43" steps="632"/></proof>
  </goal>
  <goal name="insert&#39;vc.173" expl="precondition" proved="true">
  <transf name="unfold" proved="true" arg1="okRefperm">
   <goal name="insert&#39;vc.173.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.173.0.0" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.24" steps="7576"/></proof>
    </goal>
    <goal name="insert&#39;vc.173.0.1" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.16" steps="7578"/></proof>
    </goal>
    <goal name="insert&#39;vc.173.0.2" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.14" steps="6370"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.174" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.44" steps="634"/></proof>
  </goal>
  <goal name="insert&#39;vc.175" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.60" steps="3829"/></proof>
  </goal>
  <goal name="insert&#39;vc.176" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.97" steps="1209"/></proof>
  </goal>
  <goal name="insert&#39;vc.177" expl="precondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="insert&#39;vc.177.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.177.0.0" expl="VC for insert" proved="true">
    <transf name="case" proved="true" arg1="(l_pq = l_self /\ r_pq = r_self)">
     <goal name="insert&#39;vc.177.0.0.0" expl="true case" proved="true">
     <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.85" steps="620"/></proof>
     </goal>
     <goal name="insert&#39;vc.177.0.0.1" expl="false case" proved="true">
     <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires19">
      <goal name="insert&#39;vc.177.0.0.1.0" expl="false case" proved="true">
      <transf name="split_premise_full" proved="true" >
       <goal name="insert&#39;vc.177.0.0.1.0.0" expl="false case" proved="true">
       <transf name="unfold" proved="true" arg1="coupling0">
        <goal name="insert&#39;vc.177.0.0.1.0.0.0" expl="VC for insert" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="insert&#39;vc.177.0.0.1.0.0.0.0" expl="VC for insert" proved="true">
         <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Requires23">
          <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0" expl="VC for insert" proved="true">
          <transf name="split_premise_full" proved="true" >
           <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0.0" expl="VC for insert" proved="true">
           <transf name="apply" proved="true" arg1="Requires45" arg2="with" arg3="l_pq,r_pq">
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.01" steps="624"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.79" steps="1260"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.86" steps="618"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0.0.3" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.01" steps="624"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0.0.4" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.77" steps="1260"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0.0.5" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.84" steps="618"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0.0.6" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="13.91" steps="19474"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0.0.7" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.86" steps="1260"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0.0.8" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.77" steps="1260"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0.0.9" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.83" steps="618"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0.0.10" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="13.66" steps="19474"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0.0.11" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.87" steps="618"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.0.0.0.12" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.84" steps="618"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert&#39;vc.177.0.0.1.0.0.0.1" expl="VC for insert" proved="true">
         <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Requires23">
          <goal name="insert&#39;vc.177.0.0.1.0.0.0.1.0" expl="VC for insert" proved="true">
          <transf name="split_premise_full" proved="true" >
           <goal name="insert&#39;vc.177.0.0.1.0.0.0.1.0.0" expl="VC for insert" proved="true">
           <transf name="assert" proved="true" arg1="(idRef pi101 l_pq r_pq)">
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
            <proof prover="1" timelimit="90"><result status="valid" time="13.75" steps="19474"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.1.0.0.1" expl="VC for insert" proved="true">
            <proof prover="1" timelimit="90"><result status="valid" time="4.59" steps="10331"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert&#39;vc.177.0.0.1.0.0.0.2" expl="VC for insert" proved="true">
         <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Requires23">
          <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0" expl="VC for insert" proved="true">
          <transf name="split_premise_full" proved="true" >
           <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0" expl="VC for insert" proved="true">
           <transf name="apply" proved="true" arg1="Requires42" arg2="with" arg3="l_pq,r_pq,l_n,r_n">
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.96" steps="638"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.1" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.82" steps="1295"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.2" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.82" steps="632"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.3" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.95" steps="638"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.4" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.79" steps="1295"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.5" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.82" steps="632"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.6" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="17.09" steps="24333"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.7" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.78" steps="1295"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.8" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.81" steps="1295"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.9" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.81" steps="632"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.10" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="17.07" steps="24333"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.11" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.53" steps="10471"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.12" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.32" steps="11925"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.13" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.03" steps="6193"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.14" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.22" steps="8797"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.15" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.59" steps="10160"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.16" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.29" steps="6679"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.17" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="18.20" steps="27990"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.18" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="9.44" steps="19490"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.2.0.0.19" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="11.55" steps="23485"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert&#39;vc.177.0.0.1.0.0.0.3" expl="VC for insert" proved="true">
         <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Requires23">
          <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0" expl="VC for insert" proved="true">
          <transf name="split_premise_full" proved="true" >
           <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0" expl="VC for insert" proved="true">
           <transf name="apply" proved="true" arg1="Requires41" arg2="with" arg3="l_pq,r_pq,l_n,r_n">
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.0" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.97" steps="638"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.1" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.82" steps="1295"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.2" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.81" steps="632"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.3" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.95" steps="638"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.4" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.87" steps="1295"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.5" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.85" steps="632"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.6" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="17.12" steps="24333"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.7" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.80" steps="1295"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.8" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.81" steps="1295"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.9" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.81" steps="632"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.10" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="17.82" steps="24333"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.11" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.37" steps="10471"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.12" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.00" steps="11925"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.13" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.92" steps="6193"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.14" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.96" steps="8797"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.15" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.51" steps="10160"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.16" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.40" steps="6679"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.17" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="17.84" steps="27990"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.18" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="9.54" steps="19490"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.3.0.0.19" expl="apply premises" proved="true">
            <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="11.61" steps="23485"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert&#39;vc.177.0.0.1.0.0.0.4" expl="VC for insert" proved="true">
         <transf name="assert" proved="true" arg1="((idRef pi101 l_pre r_pre /\ not l_pre = null /\ not r_pre = r_sntl) \/ (l_pre = null /\ r_pre = r_sntl))">
          <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0" expl="asserted formula" proved="true">
          <transf name="instantiate" proved="true" arg1="Requires23" arg2="l_pq, r_pq">
           <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0" expl="asserted formula" proved="true">
           <transf name="assert" proved="true" arg1="(l_n &lt;&gt; l_result /\ r_n &lt;&gt; r_result)">
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.0" expl="asserted formula" proved="true">
            <proof prover="1" timelimit="90"><result status="valid" time="4.97" steps="10111"/></proof>
            </goal>
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1" expl="asserted formula" proved="true">
            <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Hinst">
             <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0" expl="asserted formula" proved="true">
             <transf name="split_premise_right" proved="true" >
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="Hinst2" arg2="with" arg3="l_n,r_n">
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="0.92" steps="642"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="1.91" steps="1299"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="0.82" steps="636"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.3" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="0.99" steps="642"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.4" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="1.72" steps="1299"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.5" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="0.87" steps="636"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.6" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="13.65" steps="20406"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.7" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="1.77" steps="1299"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.8" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="1.75" steps="1299"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.9" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="0.84" steps="636"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.10" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="13.42" steps="20406"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.11" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="5.81" steps="12950"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.12" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="6.94" steps="14419"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.13" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="2.03" steps="2712"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.14" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="5.83" steps="11302"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.15" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="9.20" steps="20563"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.16" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="4.44" steps="10797"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.17" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="15.35" steps="21539"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.18" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="6.04" steps="12592"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.19" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="7.18" steps="15443"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.0.0.1.0.0.20" expl="apply premises" proved="true">
               <proof prover="1" timelimit="90"><result status="valid" time="0.80" steps="636"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="insert&#39;vc.177.0.0.1.0.0.0.4.1" expl="VC for insert" proved="true">
          <proof prover="1" timelimit="90"><result status="valid" time="2.01" steps="1403"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="insert&#39;vc.177.0.0.1.0.0.0.5" expl="VC for insert" proved="true">
         <transf name="assert" proved="true" arg1="(idRef pi101 l_sib r_sib /\ not l_sib = null /\ not r_sib = r_sntl \/ l_sib = null /\ r_sib = r_sntl)">
          <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0" expl="asserted formula" proved="true">
          <transf name="instantiate" proved="true" arg1="Requires23" arg2="l_pq,r_pq">
           <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0" expl="asserted formula" proved="true">
           <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Hinst">
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0" expl="asserted formula" proved="true">
            <transf name="split_premise_right" proved="true" >
             <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="assert" proved="true" arg1="(l_n &lt;&gt; l_result /\ r_n &lt;&gt; r_result)">
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.0" expl="asserted formula" proved="true">
              <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.92" steps="15911"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="Hinst1" arg2="with" arg3="l_n,r_n">
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.95" steps="642"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.1" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.79" steps="1299"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.2" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.83" steps="636"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.3" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.02" steps="642"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.4" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.89" steps="1299"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.5" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.86" steps="636"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.6" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="13.54" steps="20406"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.7" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.88" steps="1299"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.8" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.77" steps="1299"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.9" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.86" steps="636"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.10" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="13.89" steps="20406"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.11" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.86" steps="12950"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.12" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.58" steps="14419"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.13" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.17" steps="2712"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.14" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.76" steps="11302"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.15" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="9.10" steps="20563"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.16" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.50" steps="10797"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.17" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="15.14" steps="21539"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.18" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="14.40" steps="22504"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.19" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="12.53" steps="30507"/></proof>
               </goal>
               <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.0.0.0.0.1.20" expl="apply premises" proved="true">
               <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.81" steps="636"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="insert&#39;vc.177.0.0.1.0.0.0.5.1" expl="VC for insert" proved="true">
          <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.00" steps="1403"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="insert&#39;vc.177.0.0.1.0.0.0.6" expl="VC for insert" proved="true">
         <transf name="assert" proved="true" arg1="((idRef pi101 l_chl r_chl /\ not l_chl = null /\ not r_chl = r_sntl) \/ (l_chl = null /\ r_chl = r_sntl))">
          <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0" expl="asserted formula" proved="true">
          <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Requires23">
           <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0" expl="asserted formula" proved="true">
           <transf name="split_premise_right" proved="true" >
            <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0" expl="asserted formula" proved="true">
            <transf name="instantiate" proved="true" arg1="Requires23" arg2="l_pq,r_pq">
             <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="apply" proved="true" arg1="Hinst" arg2="with" arg3="l_n,r_n">
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="0.91" steps="638"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.74" steps="1295"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="0.78" steps="632"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.3" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="0.91" steps="638"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.4" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.71" steps="1295"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.5" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="0.79" steps="632"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.6" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="19.52" steps="28888"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.7" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.71" steps="1295"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.8" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.72" steps="1295"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.9" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="0.79" steps="632"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.10" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="19.52" steps="28888"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.11" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="6.24" steps="14957"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.12" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="5.86" steps="12919"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.13" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.96" steps="2728"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.14" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="9.97" steps="25070"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.15" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="8.09" steps="19131"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.16" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.23" steps="7765"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.17" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="18.19" steps="34971"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.18" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="9.20" steps="23833"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.19" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="7.79" steps="17973"/></proof>
              </goal>
              <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.0.0.0.0.20" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="0.82" steps="632"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="insert&#39;vc.177.0.0.1.0.0.0.6.1" expl="VC for insert" proved="true">
          <proof prover="1"><result status="valid" time="1.14" steps="1403"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.177.0.1" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.79" steps="602"/></proof>
    </goal>
    <goal name="insert&#39;vc.177.0.2" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.81" steps="602"/></proof>
    </goal>
    <goal name="insert&#39;vc.177.0.3" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.80" steps="602"/></proof>
    </goal>
    <goal name="insert&#39;vc.177.0.4" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="0.79" steps="602"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.178" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.36" steps="640"/></proof>
  </goal>
  <goal name="insert&#39;vc.179" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.35" steps="640"/></proof>
  </goal>
  <goal name="insert&#39;vc.180" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.33" steps="10406"/></proof>
  </goal>
  <goal name="insert&#39;vc.181" expl="precondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="1.45" steps="648"/></proof>
  </goal>
  <goal name="insert&#39;vc.182" expl="sz := self.size" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.54" steps="1653"/></proof>
  </goal>
  <goal name="insert&#39;vc.183" expl="sz := self.size" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.57" steps="1663"/></proof>
  </goal>
  <goal name="insert&#39;vc.184" expl="assertion" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.11" steps="943"/></proof>
  </goal>
  <goal name="insert&#39;vc.185" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.22" steps="1041"/></proof>
  </goal>
  <goal name="insert&#39;vc.186" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.74" steps="2294"/></proof>
  </goal>
  <goal name="insert&#39;vc.187" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.61" steps="5439"/></proof>
  </goal>
  <goal name="insert&#39;vc.188" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.60" steps="1839"/></proof>
  </goal>
  <goal name="insert&#39;vc.189" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.32" steps="1576"/></proof>
  </goal>
  <goal name="insert&#39;vc.190" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="5.91" steps="5439"/></proof>
  </goal>
  <goal name="insert&#39;vc.191" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.52" steps="2294"/></proof>
  </goal>
  <goal name="insert&#39;vc.192" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.88" steps="3168"/></proof>
  </goal>
  <goal name="insert&#39;vc.193" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="5.91" steps="5455"/></proof>
  </goal>
  <goal name="insert&#39;vc.194" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="28.44" steps="58946"/></proof>
  </goal>
  <goal name="insert&#39;vc.195" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.46" steps="1047"/></proof>
  </goal>
  <goal name="insert&#39;vc.196" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.17" steps="1047"/></proof>
  </goal>
  <goal name="insert&#39;vc.197" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.64" steps="2305"/></proof>
  </goal>
  <goal name="insert&#39;vc.198" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.74" steps="5516"/></proof>
  </goal>
  <goal name="insert&#39;vc.199" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.39" steps="1849"/></proof>
  </goal>
  <goal name="insert&#39;vc.200" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.37" steps="1583"/></proof>
  </goal>
  <goal name="insert&#39;vc.201" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="6.14" steps="5513"/></proof>
  </goal>
  <goal name="insert&#39;vc.202" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.50" steps="2304"/></proof>
  </goal>
  <goal name="insert&#39;vc.203" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.78" steps="3185"/></proof>
  </goal>
  <goal name="insert&#39;vc.204" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="6.09" steps="5526"/></proof>
  </goal>
  <goal name="insert&#39;vc.205" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="35.29" steps="67434"/></proof>
  </goal>
  <goal name="insert&#39;vc.206" expl="type invariant" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.18" steps="1053"/></proof>
  </goal>
  <goal name="insert&#39;vc.207" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.27" steps="1826"/></proof>
  </goal>
  <goal name="insert&#39;vc.208" expl="postcondition" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.26" steps="1832"/></proof>
  </goal>
  <goal name="insert&#39;vc.209" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.31" steps="1549"/></proof>
  </goal>
  <goal name="insert&#39;vc.210" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="3.97" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.211" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="4.33" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.212" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="4.03" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.213" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="4.19" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.214" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.18" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.215" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.83" steps="1897"/></proof>
  </goal>
  <goal name="insert&#39;vc.216" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.01" steps="1899"/></proof>
  </goal>
  <goal name="insert&#39;vc.217" expl="write frame head" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.04" steps="1898"/></proof>
  </goal>
  <goal name="insert&#39;vc.218" expl="write frame child" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.05" steps="1901"/></proof>
  </goal>
  <goal name="insert&#39;vc.219" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="4.10" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.220" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="4.22" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.221" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.13" steps="1917"/></proof>
  </goal>
  <goal name="insert&#39;vc.222" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="4.00" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.223" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.00" steps="6226"/></proof>
  </goal>
  <goal name="insert&#39;vc.224" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="3.98" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.225" expl="write frame size" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.93" steps="1903"/></proof>
  </goal>
  <goal name="insert&#39;vc.226" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="4.24" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.227" expl="write frame length" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.09" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.228" expl="write frame key" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.12" steps="6233"/></proof>
  </goal>
  <goal name="insert&#39;vc.229" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="4.02" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.230" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="4.08" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.231" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="4.18" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.232" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="4.24" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.233" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="4.02" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.234" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.32" steps="1549"/></proof>
  </goal>
  <goal name="insert&#39;vc.235" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.13" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.236" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="4.01" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.237" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="4.07" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.238" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="4.02" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.239" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.13" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.240" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="9.10" steps="13680"/></proof>
  </goal>
  <goal name="insert&#39;vc.241" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="9.01" steps="13682"/></proof>
  </goal>
  <goal name="insert&#39;vc.242" expl="write frame head" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.95" steps="1900"/></proof>
  </goal>
  <goal name="insert&#39;vc.243" expl="write frame child" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="9.02" steps="13689"/></proof>
  </goal>
  <goal name="insert&#39;vc.244" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="4.27" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.245" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="4.41" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.246" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.99" steps="1919"/></proof>
  </goal>
  <goal name="insert&#39;vc.247" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="4.24" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.248" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="6.06" steps="6240"/></proof>
  </goal>
  <goal name="insert&#39;vc.249" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="4.02" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.250" expl="write frame size" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="5.13" steps="1905"/></proof>
  </goal>
  <goal name="insert&#39;vc.251" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="4.00" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.252" expl="write frame length" proved="true">
  <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="4.09" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.253" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="6.42" steps="6244"/></proof>
  </goal>
  <goal name="insert&#39;vc.254" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="4.01" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.255" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="4.33" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.256" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="4.02" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.257" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="4.02" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.258" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="4.12" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.259" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="13.36" steps="26148"/></proof>
  </goal>
  <goal name="insert&#39;vc.260" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert&#39;vc.260.0" expl="postcondition" proved="true">
   <proof prover="0" timelimit="90" memlimit="10000"><result status="highfailure" time="56.90" steps="3358626"/></proof>
   <proof prover="1" timelimit="90"><result status="valid" time="10.68" steps="29726"/></proof>
   <proof prover="4" timelimit="90"><result status="timeout" time="90.00" steps="5919054"/></proof>
   <proof prover="5" timelimit="90" memlimit="10000"><result status="timeout" time="90.00"/></proof>
   </goal>
   <goal name="insert&#39;vc.260.1" expl="postcondition" proved="true">
   <proof prover="0" timelimit="90" memlimit="10000"><result status="highfailure" time="57.41" steps="3358962"/></proof>
   <proof prover="1" timelimit="90"><result status="valid" time="10.77" steps="29726"/></proof>
   <proof prover="4" timelimit="90"><result status="timeout" time="90.00" steps="5917500"/></proof>
   <proof prover="5" timelimit="90" memlimit="10000"><result status="timeout" time="90.00"/></proof>
   </goal>
   <goal name="insert&#39;vc.260.2" expl="postcondition" proved="true">
   <proof prover="0" timelimit="90" memlimit="10000"><result status="highfailure" time="60.05" steps="8818282"/></proof>
   <proof prover="1" timelimit="90"><result status="valid" time="10.57" steps="28615"/></proof>
   <proof prover="4" timelimit="90"><result status="timeout" time="90.00" steps="5992589"/></proof>
   <proof prover="5" timelimit="90" memlimit="10000"><result status="timeout" time="90.00"/></proof>
   </goal>
   <goal name="insert&#39;vc.260.3" expl="postcondition" proved="true">
   <proof prover="0" timelimit="90" memlimit="10000"><result status="highfailure" time="60.65" steps="11302547"/></proof>
   <proof prover="1" timelimit="90"><result status="valid" time="10.62" steps="28615"/></proof>
   <proof prover="4" timelimit="90"><result status="timeout" time="90.00" steps="5991167"/></proof>
   <proof prover="5" timelimit="90" memlimit="10000"><result status="timeout" time="90.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.261" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="insert&#39;vc.261.0" expl="VC for insert" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="insert&#39;vc.261.0.0" expl="VC for insert" proved="true">
    <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Ensures112">
     <goal name="insert&#39;vc.261.0.0.0" expl="VC for insert" proved="true">
     <transf name="destruct" proved="true" arg1="Ensures112">
      <goal name="insert&#39;vc.261.0.0.0.0" expl="VC for insert" proved="true">
      <transf name="instantiate" proved="true" arg1="Ensures113" arg2="l_pq,r_pq">
       <goal name="insert&#39;vc.261.0.0.0.0.0" expl="VC for insert" proved="true">
       <transf name="assert" proved="true" arg1="(coupling0 l_s1 r_s1 pi10 l_pq r_pq)">
        <goal name="insert&#39;vc.261.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="2.44" steps="1557"/></proof>
        </goal>
        <goal name="insert&#39;vc.261.0.0.0.0.0.1" expl="VC for insert" proved="true">
        <transf name="unfold" proved="true" arg1="coupling0">
         <goal name="insert&#39;vc.261.0.0.0.0.0.1.0" expl="VC for insert" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="insert&#39;vc.261.0.0.0.0.0.1.0.0" expl="VC for insert" proved="true">
          <proof prover="1"><result status="valid" time="11.57" steps="27813"/></proof>
          </goal>
          <goal name="insert&#39;vc.261.0.0.0.0.0.1.0.1" expl="VC for insert" proved="true">
          <proof prover="1"><result status="valid" time="27.70" steps="63101"/></proof>
          </goal>
          <goal name="insert&#39;vc.261.0.0.0.0.0.1.0.2" expl="VC for insert" proved="true">
          <proof prover="1"><result status="valid" time="9.45" steps="17464"/></proof>
          </goal>
          <goal name="insert&#39;vc.261.0.0.0.0.0.1.0.3" expl="VC for insert" proved="true">
          <proof prover="1"><result status="valid" time="9.52" steps="17463"/></proof>
          </goal>
          <goal name="insert&#39;vc.261.0.0.0.0.0.1.0.4" expl="VC for insert" proved="true">
          <proof prover="1"><result status="valid" time="10.77" steps="29885"/></proof>
          </goal>
          <goal name="insert&#39;vc.261.0.0.0.0.0.1.0.5" expl="VC for insert" proved="true">
          <proof prover="1"><result status="valid" time="10.71" steps="29567"/></proof>
          </goal>
          <goal name="insert&#39;vc.261.0.0.0.0.0.1.0.6" expl="VC for insert" proved="true">
          <proof prover="1"><result status="valid" time="10.54" steps="29861"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert&#39;vc.261.0.1" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.16" steps="1016"/></proof>
    </goal>
    <goal name="insert&#39;vc.261.0.2" expl="VC for insert" proved="true">
    <proof prover="1" timelimit="25" memlimit="9000"><result status="valid" time="2.18" steps="1016"/></proof>
    </goal>
    <goal name="insert&#39;vc.261.0.3" expl="VC for insert" proved="true">
    <proof prover="1"><result status="valid" time="2.14" steps="1016"/></proof>
    </goal>
    <goal name="insert&#39;vc.261.0.4" expl="VC for insert" proved="true">
    <proof prover="1"><result status="valid" time="2.14" steps="1016"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.262" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.12" steps="1062"/></proof>
  </goal>
  <goal name="insert&#39;vc.263" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.08" steps="1062"/></proof>
  </goal>
  <goal name="insert&#39;vc.264" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.09" steps="1062"/></proof>
  </goal>
  <goal name="insert&#39;vc.265" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.16" steps="1062"/></proof>
  </goal>
  <goal name="insert&#39;vc.266" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.12" steps="1064"/></proof>
  </goal>
  <goal name="insert&#39;vc.267" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.32" steps="1317"/></proof>
  </goal>
  <goal name="insert&#39;vc.268" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.30" steps="1329"/></proof>
  </goal>
  <goal name="insert&#39;vc.269" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.54" steps="1903"/></proof>
  </goal>
  <goal name="insert&#39;vc.270" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.09" steps="1078"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="deleteMin&#39;vc" expl="VC for deleteMin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="deleteMin&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.04" steps="46"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.02" steps="46"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.04" steps="162"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.03" steps="50"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.11" expl="sntl := self.sntl" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.06" steps="334"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.12" expl="tmp := self.head" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.07" steps="339"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.13" expl="tmp := self.head" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.09" steps="344"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.14" expl="tmp := tmp.child" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.07" steps="349"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.15" expl="tmp := tmp.child" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.07" steps="354"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.16" expl="guard agreement" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.50" steps="2613"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.17" expl="sz := self.size" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.09" steps="489"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.18" expl="sz := self.size" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.11" steps="494"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.26" steps="392"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.21" expl="type invariant" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.45" steps="1596"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="771"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.23" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="621"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.24" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="1596"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.25" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.26" expl="type invariant" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.50" steps="1728"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.27" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="1607"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.28" expl="type invariant" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="1.70" steps="7953"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.29" expl="type invariant" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.28" steps="398"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.30" expl="type invariant" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.27" steps="398"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.31" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="637"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.32" expl="type invariant" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.52" steps="1690"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.33" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="782"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.34" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="630"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.35" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="1690"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.36" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="637"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.37" expl="type invariant" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.48" steps="1749"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.38" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="1691"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.39" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.20" steps="9910"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.40" expl="type invariant" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.24" steps="404"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.41" expl="postcondition" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.27" steps="639"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.42" expl="postcondition" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.26" steps="645"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.43" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.23" steps="412"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.44" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.23" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.45" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.46" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.47" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.48" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.23" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.49" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.23" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.50" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.22" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.51" expl="write frame head" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.46" steps="723"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.52" expl="write frame child" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.53" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.54" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.55" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.23" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.56" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.57" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.19" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.58" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.59" expl="write frame size" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.47" steps="728"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.60" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.61" expl="write frame length" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.23" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.62" expl="write frame key" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.23" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.63" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.64" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.65" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.66" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.67" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.68" expl="wr frame alloc" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.23" steps="412"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.69" expl="write frame slots" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.23" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.70" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.71" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.72" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.73" expl="write frame sntl" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.74" expl="write frame sibling" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.23" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.75" expl="write frame prev" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.23" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.76" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="725"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.77" expl="write frame child" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.78" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.79" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.80" expl="write frame rep" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.81" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.82" expl="write frame tag" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="0.24" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.83" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.84" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="730"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.85" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.86" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.87" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.88" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.89" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.90" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.91" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.92" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.93" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.11" steps="3253"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.94" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="412"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.95" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.42" steps="7195"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.96" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.18" steps="650"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.97" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="416"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.98" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="538"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.99" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="422"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.100" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="53.09" steps="186068"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.101" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="425"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.102" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="190"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.103" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="190"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.104" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="639"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.105" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="192"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.106" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="192"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.107" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="192"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.108" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="680"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.109" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="2424"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.110" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="196"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.111" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="196"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.112" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="2840"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.113" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="198"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.114" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="198"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.115" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="198"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.116" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="198"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.117" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.44" steps="5619"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.118" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="202"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.119" expl="sz := self.size" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="850"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.120" expl="sz := self.size" proved="true">
  <proof prover="1"><result status="valid" time="0.42" steps="856"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.121" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="604"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.122" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="978"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.123" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.89" steps="2355"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.124" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="1208"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.125" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="971"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.126" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.90" steps="2355"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.127" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="978"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.128" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.93" steps="2608"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.129" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.89" steps="2355"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.130" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="11.75" steps="34235"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.131" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="610"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.132" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="610"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.133" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="988"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.134" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="2390"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.135" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="1222"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.136" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="981"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.137" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.91" steps="2390"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.138" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="988"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.139" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="2642"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.140" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.94" steps="2390"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.141" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="17.48" steps="39124"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.142" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="616"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.143" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.78" steps="1405"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.144" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="1457"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.145" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="991"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.146" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="630"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.147" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.148" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.149" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.150" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.151" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="630"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.152" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="630"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.153" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="1073"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.154" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="630"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.155" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.156" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.157" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.158" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.159" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.160" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.161" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="0.86" steps="1080"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.162" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.163" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="630"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.164" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.165" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.166" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.167" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.168" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.169" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.170" expl="wr frame alloc" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="992"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.171" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="630"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.172" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.173" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.174" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.175" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.176" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="630"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.177" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="630"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.178" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="0.84" steps="1075"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.179" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="630"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.180" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.181" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.182" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.183" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.184" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.185" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.186" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="0.84" steps="1082"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.187" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.188" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="630"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.189" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.190" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.191" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.192" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.193" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.194" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.195" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.39" steps="6935"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.196" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="624"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.197" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="16.88" steps="24913"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="5.63" steps="463249"/></proof>
  <proof prover="5" timelimit="90" memlimit="10000"><result status="valid" time="65.95"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.198" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.35" steps="999"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.199" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="628"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.200" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="822"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.201" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="634"/></proof>
  </goal>
  <goal name="deleteMin&#39;vc.202" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="deleteMin&#39;vc.202.0" expl="VC for deleteMin" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="deleteMin&#39;vc.202.0.0" expl="VC for deleteMin" proved="true">
    <transf name="unfold" proved="true" arg1="coupling0">
     <goal name="deleteMin&#39;vc.202.0.0.0" expl="VC for deleteMin" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="deleteMin&#39;vc.202.0.0.0.0" expl="VC for deleteMin" proved="true">
      <proof prover="1"><result status="valid" time="2.63" steps="8434"/></proof>
      </goal>
      <goal name="deleteMin&#39;vc.202.0.0.0.1" expl="VC for deleteMin" proved="true">
      <proof prover="1"><result status="valid" time="4.38" steps="11568"/></proof>
      </goal>
      <goal name="deleteMin&#39;vc.202.0.0.0.2" expl="VC for deleteMin" proved="true">
      <proof prover="1"><result status="valid" time="4.54" steps="10273"/></proof>
      </goal>
      <goal name="deleteMin&#39;vc.202.0.0.0.3" expl="VC for deleteMin" proved="true">
      <proof prover="1"><result status="valid" time="4.48" steps="10273"/></proof>
      </goal>
      <goal name="deleteMin&#39;vc.202.0.0.0.4" expl="VC for deleteMin" proved="true">
      <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Ensures64">
       <goal name="deleteMin&#39;vc.202.0.0.0.4.0" expl="VC for deleteMin" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="deleteMin&#39;vc.202.0.0.0.4.0.0" expl="VC for deleteMin" proved="true">
        <transf name="instantiate" proved="true" arg1="Ensures70" arg2="l_pq,r_pq">
         <goal name="deleteMin&#39;vc.202.0.0.0.4.0.0.0" expl="VC for deleteMin" proved="true">
         <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Hinst">
          <goal name="deleteMin&#39;vc.202.0.0.0.4.0.0.0.0" expl="VC for deleteMin" proved="true">
          <proof prover="1"><result status="valid" time="1.18" steps="4273"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="deleteMin&#39;vc.202.0.0.0.5" expl="VC for deleteMin" proved="true">
      <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Ensures64">
       <goal name="deleteMin&#39;vc.202.0.0.0.5.0" expl="VC for deleteMin" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="deleteMin&#39;vc.202.0.0.0.5.0.0" expl="VC for deleteMin" proved="true">
        <transf name="instantiate" proved="true" arg1="Ensures70" arg2="l_pq,r_pq">
         <goal name="deleteMin&#39;vc.202.0.0.0.5.0.0.0" expl="VC for deleteMin" proved="true">
         <proof prover="1"><result status="valid" time="2.72" steps="11680"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="deleteMin&#39;vc.202.0.0.0.6" expl="VC for deleteMin" proved="true">
      <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Ensures64">
       <goal name="deleteMin&#39;vc.202.0.0.0.6.0" expl="VC for deleteMin" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="deleteMin&#39;vc.202.0.0.0.6.0.0" expl="VC for deleteMin" proved="true">
        <transf name="instantiate" proved="true" arg1="Ensures70" arg2="l_pq,r_pq">
         <goal name="deleteMin&#39;vc.202.0.0.0.6.0.0.0" expl="VC for deleteMin" proved="true">
         <proof prover="1"><result status="valid" time="2.72" steps="11677"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="deleteMin&#39;vc.202.0.1" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="0.37" steps="607"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.202.0.2" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="0.37" steps="607"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.202.0.3" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="0.39" steps="607"/></proof>
    </goal>
    <goal name="deleteMin&#39;vc.202.0.4" expl="VC for deleteMin" proved="true">
    <proof prover="1"><result status="valid" time="0.37" steps="607"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="deleteMin&#39;vc.203" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="637"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="decreaseKey&#39;vc" expl="VC for decreaseKey" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decreaseKey&#39;vc.0" expl="sntl := self.sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="135"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.1" expl="tmp := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="250"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.2" expl="tmp := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="255"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.3" expl="guard agreement" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="4832"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.4" expl="tmp := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="266"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.5" expl="tmp := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="271"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.6" expl="guard agreement" proved="true">
  <proof prover="1"><result status="valid" time="2.06" steps="8257"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.7" expl="pos := handle.prev" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="282"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.8" expl="pos := handle.prev" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.9" expl="tmp := handle.prev" proved="true">
  <proof prover="1"><result status="valid" time="0.28" steps="417"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.10" expl="tmp := handle.prev" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="422"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.11" expl="guard agreement" proved="true">
  <proof prover="1"><result status="valid" time="2.78" steps="11457"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.12" expl="pos := tmp.child" proved="true">
  <proof prover="1"><result status="valid" time="0.86" steps="3133"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.13" expl="pos := tmp.child" proved="true">
  <proof prover="1"><result status="valid" time="1.13" steps="4456"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.14" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.90" steps="3679"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.15" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="4.18" steps="15613"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.16" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="14.45" steps="22370"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.17" expl="guard agreement" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="802"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.18" expl="pos := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="524"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.19" expl="pos := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="527"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.20" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.74" steps="814"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.21" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.74" steps="817"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="548"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.23" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="926"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.24" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.88" steps="1603"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.25" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="784"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.26" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="701"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.27" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.89" steps="1602"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.28" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="926"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.29" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="16.24" steps="51695"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.30" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="1621"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.31" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="1983"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.32" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="554"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.33" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="554"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.34" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="942"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.35" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="1676"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.36" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="796"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.37" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.73" steps="711"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.38" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.94" steps="1678"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.39" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="941"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.40" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="34.13" steps="111501"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.40.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.17" steps="2727"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.40.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.20" steps="2742"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.40.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.18" steps="2634"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.40.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.97" steps="5426"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.40.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.65" steps="542"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.40.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="6.02" steps="18304"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.40.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="6.93" steps="19372"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.40.7" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="6.09" steps="19358"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.41" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="1688"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.42" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.14" steps="2096"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.94" steps="94800"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.43" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="560"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.44" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="568"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.45" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="565"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.46" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="1373"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.47" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.22" steps="3093"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.48" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="880"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.49" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="571"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.50" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="576"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.51" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="573"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.52" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="1495"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.53" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.83" steps="906"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.54" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="904"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.55" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="579"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.56" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.18" steps="6484"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.57" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="581"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.58" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.65" steps="6178"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.59" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="583"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.60" expl="precondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="decreaseKey&#39;vc.60.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.60.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="coupling0">
     <goal name="decreaseKey&#39;vc.60.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.60.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="1.71" steps="5261"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.60.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="2.61" steps="8416"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.60.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="23.23" steps="30908"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.60.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="13.44" steps="21277"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.60.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires19">
       <goal name="decreaseKey&#39;vc.60.0.0.0.4.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="decreaseKey&#39;vc.60.0.0.0.4.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="instantiate" proved="true" arg1="Requires23" arg2="l_pq,r_pq">
         <goal name="decreaseKey&#39;vc.60.0.0.0.4.0.0.0" expl="VC for decreaseKey" proved="true">
         <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Hinst">
          <goal name="decreaseKey&#39;vc.60.0.0.0.4.0.0.0.0" expl="VC for decreaseKey" proved="true">
          <transf name="split_premise_right" proved="true" >
           <goal name="decreaseKey&#39;vc.60.0.0.0.4.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
           <proof prover="4" timelimit="90"><result status="valid" time="20.96" steps="897359"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="decreaseKey&#39;vc.60.0.0.0.5" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="80.54" steps="167868"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.60.0.0.0.6" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires19">
       <goal name="decreaseKey&#39;vc.60.0.0.0.6.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="decreaseKey&#39;vc.60.0.0.0.6.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="instantiate" proved="true" arg1="Requires23" arg2="l_pq,r_pq">
         <goal name="decreaseKey&#39;vc.60.0.0.0.6.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="15.63" steps="102995"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.60.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.63" steps="563"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.60.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.63" steps="563"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.60.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.64" steps="563"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.60.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.63" steps="563"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.61" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="585"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.62" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="585"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.63" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.55" steps="3631"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.33" steps="134125"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.64" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="591"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.65" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.91" steps="882"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.66" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.95" steps="1690"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.67" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.63" steps="3064"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.68" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.91" steps="1424"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.69" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.01" steps="1241"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.70" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.49" steps="3064"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.71" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.10" steps="1690"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.72" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.19" steps="2307"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.73" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.49" steps="3074"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.74" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="24.41" steps="47632"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.75" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.83" steps="888"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.76" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.78" steps="888"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.77" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.94" steps="1708"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.78" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.91" steps="4862"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.79" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.02" steps="1436"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.80" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.89" steps="1251"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.81" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.72" steps="3153"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.82" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.98" steps="1711"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.83" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.21" steps="2330"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.84" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.74" steps="3162"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.85" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="29.02" steps="91125"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.85.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.42" steps="868"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.85.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.41" steps="868"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.85.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.43" steps="868"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.85.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="3.06" steps="6364"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.85.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="17.06" steps="67816"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.85.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.45" steps="1244"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.85.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.75" steps="1552"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.86" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.84" steps="894"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.06" steps="118888"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.87" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.83" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="63215"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.88" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.73" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.89" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.80" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.90" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.81" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.91" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="62835"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.92" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="2.50" steps="1651"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="2.45" steps="180897"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.93" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="14.53" steps="20296"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="14.05" steps="571156"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.94" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="2.48" steps="1637"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="15.37" steps="601585"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.95" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="14.71" steps="22014"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="15.81" steps="609971"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.96" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.97" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.71" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.98" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.24" steps="65202"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.99" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.85" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.100" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.77" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.23" steps="65508"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.101" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.75" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.102" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.73" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="65251"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.103" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.83" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.104" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.24" steps="65332"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.105" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="2.39" steps="1660"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.82" steps="167709"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.106" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.86" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.107" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.108" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.84" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.109" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.73" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.110" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.78" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.111" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="67112"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.112" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.76" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.113" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.82" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.114" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.115" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="66722"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.116" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="2.51" steps="1654"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="2.54" steps="185652"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.117" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="28.15" steps="61400"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="19.66" steps="861300"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.118" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="2.35" steps="1640"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="19.60" steps="766775"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.119" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="33.50" steps="76309"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="18.36" steps="826861"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.120" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.121" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.75" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.122" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="69220"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.123" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.71" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.124" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.27" steps="69325"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.125" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.84" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.126" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.27" steps="69030"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.127" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.78" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.128" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.75" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.28" steps="69035"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.129" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="2.55" steps="1663"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="2.58" steps="189438"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.130" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.131" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.75" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.132" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.78" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.133" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.77" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.134" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.135" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="11.34" steps="19727"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="2.63" steps="161820"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.136" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="decreaseKey&#39;vc.136.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.136.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="coupling0">
     <goal name="decreaseKey&#39;vc.136.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.136.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="5.27" steps="13474"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.136.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="25.69" steps="58550"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.136.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="44.95" steps="92329"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.136.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="11.27" steps="19976"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.136.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Ensures102">
       <goal name="decreaseKey&#39;vc.136.0.0.0.4.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="decreaseKey&#39;vc.136.0.0.0.4.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="instantiate" proved="true" arg1="Ensures106" arg2="l_pq,r_pq">
         <goal name="decreaseKey&#39;vc.136.0.0.0.4.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="3.94" steps="21615"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="decreaseKey&#39;vc.136.0.0.0.5" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Ensures102">
       <goal name="decreaseKey&#39;vc.136.0.0.0.5.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="decreaseKey&#39;vc.136.0.0.0.5.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="instantiate" proved="true" arg1="Ensures106" arg2="l_pq,r_pq">
         <goal name="decreaseKey&#39;vc.136.0.0.0.5.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="3.99" steps="21612"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="decreaseKey&#39;vc.136.0.0.0.6" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Ensures102">
       <goal name="decreaseKey&#39;vc.136.0.0.0.6.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="decreaseKey&#39;vc.136.0.0.0.6.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="instantiate" proved="true" arg1="Ensures106" arg2="l_pq,r_pq">
         <goal name="decreaseKey&#39;vc.136.0.0.0.6.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="3.92" steps="21594"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.136.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.40" steps="867"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.136.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.46" steps="867"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.136.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.38" steps="867"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.136.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.46" steps="867"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.137" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.75" steps="897"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.18" steps="64028"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.138" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.83" steps="897"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.18" steps="64039"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.139" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.93" steps="905"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="69995"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.140" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.73" steps="901"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.16" steps="64094"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.141" expl="pos := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="516"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.49" steps="72345"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.142" expl="pos := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.33" steps="519"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.50" steps="76593"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.143" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.78" steps="804"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.48" steps="78720"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.144" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.78" steps="807"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.61" steps="82981"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.145" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.74" steps="548"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.30" steps="71846"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.146" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.77" steps="922"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.147" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.94" steps="1575"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.148" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.79" steps="780"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.149" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.76" steps="697"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.150" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.99" steps="1575"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.151" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.79" steps="920"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.152" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="22.94" steps="64636"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.153" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="1593"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.154" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="1955"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.155" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.76" steps="554"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.67" steps="80917"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.156" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="554"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.33" steps="73352"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.157" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.78" steps="938"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.158" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.97" steps="1650"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.159" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="792"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.160" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="707"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.161" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.02" steps="1648"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.162" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="936"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.163" expl="type invariant" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="52.93" steps="127903"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.163.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.27" steps="2937"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.163.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="1.40" steps="2939"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.163.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="4.27" steps="11951"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.163.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.69" steps="542"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.163.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.75" steps="542"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.163.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="47.32" steps="94306"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.163.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.72" steps="687"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.163.7" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="14.11" steps="39261"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.164" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="1659"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.165" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.19" steps="2066"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.86" steps="95676"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.166" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="560"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.60" steps="85221"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.167" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="568"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.32" steps="74946"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.168" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="565"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.14" steps="51609"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.169" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.01" steps="1657"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.44" steps="79009"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.170" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="3218"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.18" steps="132817"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.171" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.74" steps="870"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.30" steps="75227"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.172" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="571"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.14" steps="51649"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.173" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="576"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.32" steps="75278"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.174" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="573"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.14" steps="51663"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.175" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.07" steps="1842"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.50" steps="81891"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.176" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.97" steps="886"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.27" steps="136286"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.177" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="894"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.32" steps="75571"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.178" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="579"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.15" steps="51703"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.179" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.42" steps="6759"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.66" steps="86837"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.180" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="581"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.15" steps="51722"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.181" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="3.83" steps="8568"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="2.13" steps="159905"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.182" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="583"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.15" steps="51739"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.183" expl="precondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="decreaseKey&#39;vc.183.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.183.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="coupling0">
     <goal name="decreaseKey&#39;vc.183.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.183.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="1.86" steps="5684"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.183.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="2.80" steps="8246"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.183.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="29.00" steps="49228"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.183.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="16.63" steps="27320"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.183.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires19">
       <goal name="decreaseKey&#39;vc.183.0.0.0.4.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="decreaseKey&#39;vc.183.0.0.0.4.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="instantiate" proved="true" arg1="Requires23" arg2="l_pq,r_pq">
         <goal name="decreaseKey&#39;vc.183.0.0.0.4.0.0.0" expl="VC for decreaseKey" proved="true">
         <transf name="unfold" proved="true" arg1="coupling0" arg2="in" arg3="Hinst">
          <goal name="decreaseKey&#39;vc.183.0.0.0.4.0.0.0.0" expl="VC for decreaseKey" proved="true">
          <transf name="split_premise_right" proved="true" >
           <goal name="decreaseKey&#39;vc.183.0.0.0.4.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
           <proof prover="4" timelimit="90"><result status="valid" time="17.81" steps="908816"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="decreaseKey&#39;vc.183.0.0.0.5" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="90"><result status="valid" time="69.25" steps="279094"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.183.0.0.0.6" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="65.52" steps="141806"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.183.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.64" steps="563"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.183.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.63" steps="563"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.183.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.63" steps="563"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.183.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.64" steps="563"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.184" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="585"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.22" steps="51769"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.185" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="585"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.24" steps="51780"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.186" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.50" steps="3984"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.33" steps="138127"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.187" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="591"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.23" steps="58765"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.188" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.82" steps="882"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.54" steps="94925"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.189" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.11" steps="1686"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.190" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.51" steps="3030"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.191" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.89" steps="1420"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.192" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.00" steps="1237"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.193" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.44" steps="3028"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.194" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.11" steps="1686"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.195" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.23" steps="2303"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.75" steps="133094"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.196" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.58" steps="3038"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.197" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="32.24" steps="65966"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.198" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.84" steps="888"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.14" steps="111772"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.199" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.91" steps="888"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.54" steps="96453"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.200" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.94" steps="1703"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.201" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.61" steps="3119"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.202" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.99" steps="1432"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.203" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.89" steps="1247"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.204" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.56" steps="3120"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.205" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.95" steps="1704"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.206" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.17" steps="2326"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.56" steps="129172"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.207" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.53" steps="3130"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.208" expl="type invariant" proved="true">
  <proof prover="1" timelimit="90"><result status="valid" time="32.71" steps="97549"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.209" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.80" steps="894"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.30" steps="118002"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.210" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.73" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.23" steps="63203"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.211" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.71" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.212" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.213" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.73" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.214" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.71" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="62823"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.215" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="28.68" steps="45956"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.216" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="22.18" steps="30121"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="15.20" steps="601232"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.217" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="2.31" steps="1627"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="16.61" steps="632883"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.218" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="1.84" steps="908"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.60" steps="107727"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.219" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.71" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.220" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.70" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.221" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.76" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.24" steps="65190"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.222" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.223" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.70" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="65496"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.224" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.71" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.225" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="65239"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.226" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.73" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.227" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="65320"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.228" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="2.45" steps="1638"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="2.29" steps="170226"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.229" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.230" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.79" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.231" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.73" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.232" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.84" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.233" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.82" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.234" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="67100"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.235" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.82" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.236" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.237" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.83" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.238" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="66710"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.239" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="47.24" steps="75429"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.240" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="14.36" steps="28791"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="19.30" steps="846734"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.241" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="2.47" steps="1630"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="20.82" steps="804756"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.242" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="1.87" steps="908"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.74" steps="124581"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.243" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.244" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.80" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.245" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.76" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="69208"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.246" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.75" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.247" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.75" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="69313"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.248" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.83" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.249" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="69018"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.250" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.86" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.251" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.87" steps="899"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="69023"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.252" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="2.44" steps="1641"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="2.58" steps="190273"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.253" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.84" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.254" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.75" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.255" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.74" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.256" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.85" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.257" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.82" steps="899"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.258" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="7.73" steps="15855"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="2.52" steps="161904"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.259" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="decreaseKey&#39;vc.259.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.259.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="coupling0">
     <goal name="decreaseKey&#39;vc.259.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.259.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="5.56" steps="14084"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.259.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="19.67" steps="45263"/></proof>
      <proof prover="4" timelimit="90"><result status="valid" time="53.22" steps="1720961"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.259.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="27.14" steps="55276"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.259.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1"><result status="valid" time="30.18" steps="57158"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.259.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Ensures102">
       <goal name="decreaseKey&#39;vc.259.0.0.0.4.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="decreaseKey&#39;vc.259.0.0.0.4.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="instantiate" proved="true" arg1="Ensures106" arg2="l_pq,r_pq">
         <goal name="decreaseKey&#39;vc.259.0.0.0.4.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="4.91" steps="27604"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="decreaseKey&#39;vc.259.0.0.0.5" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Ensures102">
       <goal name="decreaseKey&#39;vc.259.0.0.0.5.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="decreaseKey&#39;vc.259.0.0.0.5.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="instantiate" proved="true" arg1="Ensures106" arg2="l_pq,r_pq">
         <goal name="decreaseKey&#39;vc.259.0.0.0.5.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="4.61" steps="25050"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="decreaseKey&#39;vc.259.0.0.0.6" expl="VC for decreaseKey" proved="true">
      <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Ensures102">
       <goal name="decreaseKey&#39;vc.259.0.0.0.6.0" expl="VC for decreaseKey" proved="true">
       <transf name="split_premise_right" proved="true" >
        <goal name="decreaseKey&#39;vc.259.0.0.0.6.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="instantiate" proved="true" arg1="Ensures106" arg2="l_pq,r_pq">
         <goal name="decreaseKey&#39;vc.259.0.0.0.6.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="4.61" steps="25563"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.259.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.38" steps="867"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.259.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.37" steps="867"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.259.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.47" steps="867"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.259.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="1.38" steps="867"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.260" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.84" steps="897"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.19" steps="64010"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.261" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.75" steps="897"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.17" steps="64021"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.262" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.86" steps="905"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="69997"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.263" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.75" steps="901"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.18" steps="64076"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.264" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="555"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.57" steps="76496"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.265" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="558"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.52" steps="80091"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.266" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="419"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.32" steps="70531"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.267" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="550"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.268" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="1386"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.269" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="674"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.270" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="543"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.271" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="1386"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.272" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="550"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.273" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="4.44" steps="13817"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.274" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="1405"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.275" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.97" steps="2133"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.276" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="425"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.59" steps="78661"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.277" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="425"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.31" steps="72201"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.278" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="560"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.279" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="1442"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.280" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="677"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.281" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="553"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.282" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="1442"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.283" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="560"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.284" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="6.14" steps="14671"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.285" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.76" steps="1452"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.286" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.286.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.44" steps="413"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.286.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.46" steps="413"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.286.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.44" steps="413"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.286.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.47" steps="413"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.286.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.49" steps="533"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.286.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.48" steps="533"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.286.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.57" steps="589"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.287" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="431"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.51" steps="83046"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.288" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="439"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.46" steps="74066"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.289" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="439"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.14" steps="50372"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.290" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="1024"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.39" steps="77423"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.291" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="2541"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.77" steps="113531"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.292" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="611"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.33" steps="74391"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.293" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="445"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.16" steps="50412"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.294" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="447"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.31" steps="74444"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.295" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.42" steps="447"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.12" steps="50426"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.296" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="1140"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.60" steps="80313"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.297" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="633"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.02" steps="116277"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.298" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="629"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.31" steps="74779"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.299" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="453"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.14" steps="50466"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.300" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.86" steps="5572"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.54" steps="83390"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.301" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="455"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.13" steps="50485"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.302" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.79" steps="4148"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.56" steps="138388"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.303" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.42" steps="457"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.14" steps="50502"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.304" expl="precondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="decreaseKey&#39;vc.304.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.304.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires19">
     <goal name="decreaseKey&#39;vc.304.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_right" proved="true" >
      <goal name="decreaseKey&#39;vc.304.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="instantiate" proved="true" arg1="Requires23" arg2="l_pq,r_pq">
       <goal name="decreaseKey&#39;vc.304.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="unfold" proved="true" arg1="coupling0">
        <goal name="decreaseKey&#39;vc.304.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="decreaseKey&#39;vc.304.0.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="0.50" steps="979"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.304.0.0.0.0.0.0.1" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="0.51" steps="1138"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.304.0.0.0.0.0.0.2" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="19.14" steps="58968"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="6.52" steps="397991"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.304.0.0.0.0.0.0.3" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="1.36" steps="4795"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="1.08" steps="121189"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.304.0.0.0.0.0.0.4" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="53.06" steps="175790"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="9.24" steps="527987"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.304.0.0.0.0.0.0.5" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="3.70" steps="14583"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="8.35" steps="436243"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.304.0.0.0.0.0.0.6" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="1.68" steps="7116"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="1.48" steps="124615"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.304.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.40" steps="437"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.304.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.40" steps="437"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.304.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.41" steps="437"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.304.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.41" steps="437"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.305" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="459"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.24" steps="50532"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.306" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="459"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.24" steps="50543"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.307" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.21" steps="3042"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.15" steps="124256"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.308" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="465"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.24" steps="58836"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.309" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.41" steps="753"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.55" steps="94163"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.310" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.59" steps="1462"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.311" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.98" steps="2381"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.312" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.45" steps="1253"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.313" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.48" steps="1084"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.314" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.89" steps="2381"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.315" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.60" steps="1462"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.316" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.82" steps="2402"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.40" steps="126418"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.317" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.08" steps="2391"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.318" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="16.95" steps="37169"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.319" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.42" steps="759"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.91" steps="108223"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.320" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="759"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.38" steps="95794"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.321" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.53" steps="1478"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.322" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.11" steps="2447"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.323" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.55" steps="1264"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.324" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.41" steps="1093"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.325" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.12" steps="2447"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.326" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.56" steps="1478"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.327" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.80" steps="2427"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.35" steps="127153"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.328" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.07" steps="2457"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.329" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="21.84" steps="36267"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.330" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.35" steps="765"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.06" steps="115452"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.331" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.27" steps="773"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.22" steps="63226"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.332" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.27" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.333" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.334" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.24" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.335" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.33" steps="773"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.23" steps="62872"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.336" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="1.82" steps="1263"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.71" steps="151121"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.337" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="21.74" steps="51646"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="11.49" steps="486331"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.338" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="1.85" steps="1249"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="12.50" steps="563922"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.339" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="1.47" steps="779"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.61" steps="106321"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.340" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.35" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.341" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.342" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="773"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.23" steps="65203"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.343" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.344" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="773"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.26" steps="65326"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.345" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.25" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.346" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.37" steps="773"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.27" steps="65252"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.347" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.348" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="773"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.25" steps="65341"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.349" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="1.91" steps="1269"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.66" steps="153586"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.350" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.351" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.32" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.352" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.27" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.353" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.354" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.28" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.355" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.38" steps="773"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.26" steps="67122"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.356" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.357" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.358" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.28" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.359" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.29" steps="773"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.25" steps="66758"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.360" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="1.98" steps="1266"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="2.02" steps="168881"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.361" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="9.40" steps="19385"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="15.23" steps="755579"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.362" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="1.84" steps="1252"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="18.02" steps="761112"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.363" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="1.51" steps="779"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.67" steps="121330"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.364" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.365" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.27" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.366" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.37" steps="773"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.25" steps="69220"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.367" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.368" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.40" steps="773"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.25" steps="69142"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.369" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.31" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.370" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="773"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.28" steps="69030"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.371" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.37" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.372" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="773"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.27" steps="69043"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.373" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="1.93" steps="1272"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="2.11" steps="171550"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.374" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.38" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.375" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.33" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.376" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.30" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.377" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.35" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.378" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.38" steps="773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.379" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="18.02" steps="37575"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="2.05" steps="149447"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.380" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Ensures58">
   <goal name="decreaseKey&#39;vc.380.0" expl="postcondition" proved="true">
   <transf name="split_premise_right" proved="true" >
    <goal name="decreaseKey&#39;vc.380.0.0" expl="postcondition" proved="true">
    <transf name="unfold" proved="true" arg1="coupling">
     <goal name="decreaseKey&#39;vc.380.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="decreaseKey&#39;vc.380.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="instantiate" proved="true" arg1="Ensures112" arg2="l_pq,r_pq">
       <goal name="decreaseKey&#39;vc.380.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="unfold" proved="true" arg1="coupling0">
        <goal name="decreaseKey&#39;vc.380.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="decreaseKey&#39;vc.380.0.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="1.06" steps="1527"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.380.0.0.0.0.0.0.1" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="5.51" steps="18309"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.380.0.0.0.0.0.0.2" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="3.82" steps="10700"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.380.0.0.0.0.0.0.3" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="3.90" steps="11374"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.380.0.0.0.0.0.0.4" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="4.25" steps="15829"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.380.0.0.0.0.0.0.5" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="3.56" steps="12845"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.380.0.0.0.0.0.0.6" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="4.12" steps="18163"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="decreaseKey&#39;vc.380.0.0.0.1" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="90"><result status="valid" time="0.89" steps="739"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.380.0.0.0.2" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="90"><result status="valid" time="0.91" steps="739"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.380.0.0.0.3" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="90"><result status="valid" time="0.91" steps="739"/></proof>
      </goal>
      <goal name="decreaseKey&#39;vc.380.0.0.0.4" expl="VC for decreaseKey" proved="true">
      <proof prover="1" timelimit="90"><result status="valid" time="0.87" steps="739"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.381" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="771"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.16" steps="62773"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.382" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="771"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.17" steps="62784"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.383" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.37" steps="776"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.41" steps="70051"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.384" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.28" steps="775"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.16" steps="62839"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.385" expl="tmp := handle.prev" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="283"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.34" steps="68088"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.386" expl="tmp := handle.prev" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="288"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.44" steps="71418"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.387" expl="guard agreement" proved="true">
  <proof prover="1"><result status="valid" time="1.32" steps="4853"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="8.28" steps="815291"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.388" expl="pos := tmp.child" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="1755"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.35" steps="69624"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.389" expl="pos := tmp.child" proved="true">
  <proof prover="1"><result status="valid" time="0.42" steps="1919"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.56" steps="124008"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.390" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.36" steps="1830"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.08" steps="108440"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.391" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="1.12" steps="4397"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="12.61" steps="1345897"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.392" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="10.10" steps="11949"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="22.16" steps="1960996"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.393" expl="guard agreement" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="663"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.81" steps="98484"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="1.20"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.394" expl="pos := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="387"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.37" steps="71305"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.395" expl="pos := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="389"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.46" steps="75960"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.396" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="658"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.46" steps="78316"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.397" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="661"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.57" steps="82853"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.398" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="442"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.31" steps="71424"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.399" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="763"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.400" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="1384"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.401" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="659"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.402" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="583"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.403" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="1382"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.404" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="763"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.405" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="5.80" steps="19314"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.406" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="1392"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.407" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="1712"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.408" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="448"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.49" steps="80238"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.409" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="448"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.32" steps="73237"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.410" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="778"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.411" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.73" steps="1458"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.412" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="670"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.413" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="592"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.414" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="1457"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.415" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="778"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.416" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="18.92" steps="49421"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.417" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="1467"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.418" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.89" steps="1848"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.419" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="454"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.54" steps="85218"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.420" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="462"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.31" steps="74986"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.421" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="459"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.13" steps="50615"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.422" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="1182"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.53" steps="79172"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.423" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.02" steps="2799"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.79" steps="116460"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.424" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="724"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.32" steps="75312"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.425" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="465"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.13" steps="50655"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.426" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="470"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.44" steps="75340"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.427" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="467"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.13" steps="50669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.428" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="1295"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.50" steps="82951"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.429" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="752"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.84" steps="119877"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.430" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="748"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.33" steps="75672"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.431" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="473"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.14" steps="50709"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.432" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.94" steps="5957"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.57" steps="85039"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.433" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.42" steps="475"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.15" steps="50728"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.434" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.36" steps="5693"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.57" steps="143895"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.435" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.42" steps="477"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.14" steps="50745"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.436" expl="precondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="decreaseKey&#39;vc.436.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.436.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires19">
     <goal name="decreaseKey&#39;vc.436.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_right" proved="true" >
      <goal name="decreaseKey&#39;vc.436.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="instantiate" proved="true" arg1="Requires23" arg2="l_pq,r_pq">
       <goal name="decreaseKey&#39;vc.436.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="unfold" proved="true" arg1="coupling0">
        <goal name="decreaseKey&#39;vc.436.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="decreaseKey&#39;vc.436.0.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="0.48" steps="912"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="0.54" steps="98290"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.436.0.0.0.0.0.0.1" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="0.49" steps="1010"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="0.57" steps="98563"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.436.0.0.0.0.0.0.2" expl="VC for decreaseKey" proved="true">
         <proof prover="4" timelimit="90"><result status="valid" time="7.65" steps="446583"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.436.0.0.0.0.0.0.3" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="2.01" steps="7053"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="1.19" steps="122082"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.436.0.0.0.0.0.0.4" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="2.60" steps="10334"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="1.33" steps="125571"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.436.0.0.0.0.0.0.5" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="5.17" steps="19647"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="11.04" steps="527144"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.436.0.0.0.0.0.0.6" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="12.01" steps="35382"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="10.74" steps="529676"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.436.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.42" steps="457"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.436.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.42" steps="457"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.436.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.42" steps="457"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.436.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.40" steps="457"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.437" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="479"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.24" steps="50775"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.438" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="479"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.22" steps="50786"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.439" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.23" steps="3393"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.13" steps="128558"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.440" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="485"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="59240"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.441" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.39" steps="776"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.55" steps="94791"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.442" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.51" steps="1525"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.443" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.02" steps="2840"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.444" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.48" steps="1299"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.445" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.39" steps="1123"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.446" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.01" steps="3011"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.447" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.49" steps="1525"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.448" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.80" steps="2124"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.14" steps="127478"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.449" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.16" steps="2850"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.450" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="16.90" steps="37568"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.451" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="782"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.98" steps="112585"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.452" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.41" steps="782"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.40" steps="96536"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.453" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.47" steps="1541"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.454" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.16" steps="2919"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.455" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.55" steps="1310"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.456" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.43" steps="1132"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.457" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.10" steps="2917"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.458" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.59" steps="1541"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.459" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.84" steps="2149"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.32" steps="127466"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.460" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.12" steps="2927"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.461" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="34.59" steps="56696"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.462" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.37" steps="788"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.15" steps="118219"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.463" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="63630"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.464" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.465" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.25" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.466" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.28" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.467" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.33" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.24" steps="63268"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.468" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="1.92" steps="1493"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.37" steps="150368"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.469" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="1.43" steps="802"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.61" steps="104807"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.470" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="1.94" steps="1477"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="13.77" steps="560817"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.471" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="11.55" steps="16083"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="11.41" steps="544536"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.472" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.28" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.473" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.30" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.474" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.27" steps="65607"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.475" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.27" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.476" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.28" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="65730"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.477" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.25" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.478" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.33" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="65656"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.479" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.25" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.480" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="65745"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.481" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="1.87" steps="1502"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.79" steps="157176"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.482" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.29" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.483" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.25" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.484" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.485" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.27" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.486" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.31" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.487" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="67526"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.488" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.489" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.32" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.490" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.31" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.491" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.27" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="67154"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.492" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="1.89" steps="1496"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="2.11" steps="169232"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.493" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="1.39" steps="802"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.65" steps="118108"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.494" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="1.99" steps="1480"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="17.78" steps="734947"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.495" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="10.55" steps="21634"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="22.76" steps="1002824"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.496" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.29" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.497" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.29" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.498" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.35" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.27" steps="69624"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.499" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.28" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.500" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.29" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="69546"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.501" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.502" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.28" steps="69434"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.503" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.25" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.504" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.35" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="69447"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.505" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="1.95" steps="1505"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="2.08" steps="171884"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.506" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.507" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.30" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.508" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.37" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.509" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.510" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.30" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.511" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="10.99" steps="20630"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.97" steps="150260"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.512" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="decreaseKey&#39;vc.512.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.512.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Ensures102">
     <goal name="decreaseKey&#39;vc.512.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_right" proved="true" >
      <goal name="decreaseKey&#39;vc.512.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="instantiate" proved="true" arg1="Ensures106" arg2="l_pq,r_pq">
       <goal name="decreaseKey&#39;vc.512.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="unfold" proved="true" arg1="coupling0">
        <goal name="decreaseKey&#39;vc.512.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="decreaseKey&#39;vc.512.0.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="1.05" steps="1594"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.512.0.0.0.0.0.0.1" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="6.44" steps="19291"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.512.0.0.0.0.0.0.2" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="4.65" steps="13629"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.512.0.0.0.0.0.0.3" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="4.47" steps="13417"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.512.0.0.0.0.0.0.4" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="5.76" steps="17481"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.512.0.0.0.0.0.0.5" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="6.18" steps="19161"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.512.0.0.0.0.0.0.6" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="5.73" steps="19146"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.512.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.94" steps="761"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.512.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.95" steps="761"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.512.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.95" steps="761"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.512.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.95" steps="761"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.513" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.27" steps="791"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.17" steps="63016"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.514" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="791"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.18" steps="63027"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.515" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="799"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.27" steps="70465"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.516" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.37" steps="795"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.17" steps="63082"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.517" expl="pos := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="379"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.36" steps="71420"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.518" expl="pos := handle.sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="381"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.47" steps="76157"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.519" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="646"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.43" steps="78561"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.520" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="649"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.59" steps="83182"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.521" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="442"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.32" steps="71489"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.522" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="755"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.523" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="1346"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.524" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="652"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.525" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="576"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.526" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="1346"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.527" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="755"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.528" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="5.45" steps="15349"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.529" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="1356"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.530" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.78" steps="1674"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.531" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="448"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.48" steps="80411"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.532" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="448"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.30" steps="73326"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.533" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="770"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.534" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="1421"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.535" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="663"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.536" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="586"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.537" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="1421"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.538" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="770"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.539" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="15.97" steps="37490"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.540" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.77" steps="1431"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.541" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.90" steps="1787"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.542" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="454"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.57" steps="84949"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.543" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="462"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.30" steps="75047"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.544" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="459"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.14" steps="50597"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.545" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.78" steps="1447"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.41" steps="79637"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.546" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="2892"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.02" steps="122510"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.547" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="712"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.30" steps="75373"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.548" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="465"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.15" steps="50637"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.549" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="470"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.44" steps="75399"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.550" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="467"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.15" steps="50651"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.551" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.85" steps="1620"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.49" steps="83134"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.552" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="728"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.88" steps="125403"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.553" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="736"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.32" steps="75731"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.554" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="473"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.13" steps="50691"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.555" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.19" steps="6265"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.59" steps="85264"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.556" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="475"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.16" steps="50710"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.557" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.78" steps="7138"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.77" steps="152062"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.558" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="477"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.13" steps="50727"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.559" expl="precondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="decreaseKey&#39;vc.559.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.559.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires19">
     <goal name="decreaseKey&#39;vc.559.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_right" proved="true" >
      <goal name="decreaseKey&#39;vc.559.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="instantiate" proved="true" arg1="Requires23" arg2="l_pq,r_pq">
       <goal name="decreaseKey&#39;vc.559.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="unfold" proved="true" arg1="coupling0">
        <goal name="decreaseKey&#39;vc.559.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="decreaseKey&#39;vc.559.0.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="0.48" steps="901"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.559.0.0.0.0.0.0.1" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="0.50" steps="999"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.559.0.0.0.0.0.0.2" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="19.83" steps="55681"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="7.84" steps="459746"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.559.0.0.0.0.0.0.3" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="2.09" steps="7184"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.559.0.0.0.0.0.0.4" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="2.57" steps="10559"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.559.0.0.0.0.0.0.5" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="79.53" steps="333692"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.559.0.0.0.0.0.0.6" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="2.57" steps="10535"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.559.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.41" steps="457"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.559.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.43" steps="457"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.559.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.43" steps="457"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.559.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.42" steps="457"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.560" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="479"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.23" steps="50757"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.561" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.42" steps="479"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.22" steps="50768"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.562" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.23" steps="3659"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.19" steps="133069"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.563" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="485"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.24" steps="59228"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.564" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.41" steps="776"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.39" steps="95050"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.565" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.57" steps="1517"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.566" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.06" steps="2794"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.567" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.50" steps="1292"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.568" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.40" steps="1117"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.569" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.00" steps="2794"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.570" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.51" steps="1517"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.571" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.81" steps="2110"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.35" steps="130070"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.572" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.10" steps="2804"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.573" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="20.97" steps="47415"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.574" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.40" steps="782"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.83" steps="112492"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.575" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.35" steps="782"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.42" steps="96747"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.576" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.54" steps="1533"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.577" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.14" steps="2871"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.578" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.52" steps="1303"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.579" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.42" steps="1126"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.580" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.25" steps="2871"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.581" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.51" steps="1533"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.582" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.72" steps="2132"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.31" steps="126252"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.583" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.07" steps="2881"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.584" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="41.53" steps="69110"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.585" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="788"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.99" steps="117245"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.586" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="63618"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.587" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.32" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.588" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.30" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.589" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.590" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.28" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="63256"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.591" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="19.20" steps="30952"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.592" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="1.40" steps="802"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.57" steps="104934"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.593" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="1.94" steps="1465"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="14.06" steps="600568"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.594" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="1.50" steps="802"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.58" steps="105631"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.595" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.28" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.596" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.30" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.597" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="65595"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.598" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.35" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.599" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="65718"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.600" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.35" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.601" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.31" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.37" steps="65644"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.602" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.603" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.24" steps="65733"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.604" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="2.05" steps="1476"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.76" steps="156303"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.605" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.30" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.606" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.29" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.607" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.35" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.608" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.609" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.31" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.610" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="1.35" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="67514"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.611" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.612" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.33" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.613" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.614" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="67142"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.615" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="21.75" steps="34937"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.616" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="1.49" steps="802"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.65" steps="118242"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.617" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="1.92" steps="1468"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="18.41" steps="764759"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.618" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="1.43" steps="802"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.66" steps="119095"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.619" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="1.25" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.620" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="1.24" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.621" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="1.26" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="69612"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.622" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="1.27" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.623" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="1.32" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="69534"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.624" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.625" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="1.30" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="69422"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.626" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="1.32" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.627" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="1.33" steps="793"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="69435"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.628" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="1.88" steps="1479"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="2.02" steps="173058"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.629" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="1.29" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.630" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.631" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="1.28" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.632" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="1.28" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.633" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="1.27" steps="793"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.634" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="11.61" steps="23821"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.98" steps="150766"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.635" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="decreaseKey&#39;vc.635.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.635.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Ensures102">
     <goal name="decreaseKey&#39;vc.635.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_right" proved="true" >
      <goal name="decreaseKey&#39;vc.635.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="instantiate" proved="true" arg1="Ensures106" arg2="l_pq,r_pq">
       <goal name="decreaseKey&#39;vc.635.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="unfold" proved="true" arg1="coupling0">
        <goal name="decreaseKey&#39;vc.635.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="decreaseKey&#39;vc.635.0.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="1.05" steps="1583"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.635.0.0.0.0.0.0.1" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="9.15" steps="33922"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.635.0.0.0.0.0.0.2" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="4.81" steps="13945"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.635.0.0.0.0.0.0.3" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="4.82" steps="14522"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.635.0.0.0.0.0.0.4" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="7.00" steps="22210"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.635.0.0.0.0.0.0.5" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="7.01" steps="22311"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.635.0.0.0.0.0.0.6" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="6.64" steps="22196"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.635.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.96" steps="761"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.635.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.95" steps="761"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.635.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.97" steps="761"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.635.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.96" steps="761"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.636" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.25" steps="791"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.17" steps="62998"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.637" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.25" steps="791"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.17" steps="63009"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.638" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.35" steps="799"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="70459"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.639" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.28" steps="795"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.18" steps="63064"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.640" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="421"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.51" steps="72774"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.641" expl="pos := self.head" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="424"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.50" steps="75612"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.642" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="315"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.31" steps="67798"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.643" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="439"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.644" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="1136"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.645" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="527"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.646" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.28" steps="432"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.647" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="1136"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.648" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="439"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.649" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="2.43" steps="8101"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.650" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="1147"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.651" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.651.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.37" steps="305"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.651.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.37" steps="305"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.651.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.30" steps="305"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.651.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.26" steps="305"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.651.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.39" steps="415"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.651.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.31" steps="415"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.651.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.34" steps="447"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.652" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="321"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.44" steps="75457"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.653" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="321"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.32" steps="69467"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.654" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="447"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.655" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="1196"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.656" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="528"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.657" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="440"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.658" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="1196"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.659" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="447"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.660" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.03" steps="9677"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.661" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="1206"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.662" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="1503"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.663" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.28" steps="327"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.46" steps="79584"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.664" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="335"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.31" steps="71331"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.665" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="335"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.14" steps="49438"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.666" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="860"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.37" steps="74767"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.667" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.73" steps="2298"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.81" steps="102250"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.668" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="477"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.29" steps="71683"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.669" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="341"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.12" steps="49478"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.670" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.27" steps="343"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.30" steps="71709"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.671" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="343"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.14" steps="49492"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.672" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="967"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.42" steps="77102"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.673" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="499"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.62" steps="105383"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.674" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.28" steps="495"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.28" steps="72045"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.675" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="349"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.15" steps="49532"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.676" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.49" steps="5127"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.61" steps="78824"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.677" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="351"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.15" steps="49551"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.678" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.27" steps="3552"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.21" steps="122955"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.679" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="353"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.13" steps="49568"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.680" expl="precondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="decreaseKey&#39;vc.680.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.680.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Requires19">
     <goal name="decreaseKey&#39;vc.680.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_right" proved="true" >
      <goal name="decreaseKey&#39;vc.680.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="instantiate" proved="true" arg1="Requires23" arg2="l_pq,r_pq">
       <goal name="decreaseKey&#39;vc.680.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="inline_goal" proved="true" >
        <goal name="decreaseKey&#39;vc.680.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="decreaseKey&#39;vc.680.0.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="0.30" steps="788"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.680.0.0.0.0.0.0.1" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="0.32" steps="911"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.680.0.0.0.0.0.0.2" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="28.34" steps="109580"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="5.65" steps="361840"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.680.0.0.0.0.0.0.3" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="1.07" steps="4467"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.680.0.0.0.0.0.0.4" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="1.37" steps="6437"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="1.22" steps="118544"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.680.0.0.0.0.0.0.5" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="4.03" steps="15607"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="6.71" steps="400256"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.680.0.0.0.0.0.0.6" expl="VC for decreaseKey" proved="true">
         <proof prover="1"><result status="valid" time="1.36" steps="6431"/></proof>
         <proof prover="4" timelimit="90"><result status="valid" time="1.24" steps="118556"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.680.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.23" steps="333"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.680.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.23" steps="333"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.680.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.23" steps="333"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.680.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.23" steps="333"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.681" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="355"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.20" steps="49598"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.682" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.25" steps="355"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.24" steps="49609"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.683" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.90" steps="2820"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.94" steps="113800"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.684" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="361"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.22" steps="57559"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.685" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="649"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.39" steps="90443"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.686" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.18" steps="1315"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.687" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.52" steps="2187"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.688" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="1136"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.689" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.08" steps="973"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.690" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.52" steps="2187"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.691" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.11" steps="1315"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.692" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="2037"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.18" steps="120448"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.693" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.63" steps="2197"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.694" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="24.65" steps="50063"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.695" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="655"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.94" steps="104733"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.696" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="655"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.38" steps="92140"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.697" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.17" steps="1329"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.698" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.60" steps="2245"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.699" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.13" steps="1145"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.700" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.02" steps="980"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.701" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.73" steps="2245"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.702" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.13" steps="1329"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.703" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="2060"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.12" steps="118444"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.704" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.62" steps="2255"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.705" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="29.92" steps="56054"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.706" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="661"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.81" steps="108277"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.707" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="0.94" steps="669"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.24" steps="61949"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.708" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.89" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.709" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.91" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.710" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.89" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.711" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.90" steps="669"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.22" steps="61609"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.712" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="1.42" steps="1125"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.35" steps="134296"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.713" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="1.01" steps="675"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.56" steps="99898"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.714" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="1.43" steps="1111"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="7.84" steps="390814"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.715" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="675"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.59" steps="101083"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.716" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.91" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.717" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.88" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.718" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.90" steps="669"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.25" steps="63926"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.719" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.720" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="0.90" steps="669"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.24" steps="64047"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.721" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.90" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.722" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="0.88" steps="669"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.25" steps="63975"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.723" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.94" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.724" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="669"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.23" steps="64062"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.725" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="1.55" steps="1131"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.45" steps="141300"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.726" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.93" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.727" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.91" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.728" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.729" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.90" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.730" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.731" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="669"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.23" steps="65845"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.732" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.733" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.91" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.734" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.94" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.735" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.89" steps="669"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.23" steps="65495"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.736" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="1.44" steps="1128"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.54" steps="150731"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.737" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="675"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.67" steps="111943"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.738" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="1.48" steps="1114"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="9.21" steps="490128"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.739" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="1.03" steps="675"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.63" steps="112538"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.740" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.97" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.741" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.742" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="669"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.26" steps="67943"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.743" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.744" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="0.97" steps="669"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.25" steps="67863"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.745" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.746" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="669"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.38" steps="67753"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.747" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.93" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.748" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="669"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.25" steps="67764"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.749" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="1.47" steps="1134"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.64" steps="155092"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.750" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.96" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.751" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.96" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.752" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.753" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.754" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="669"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.755" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="6.86" steps="12636"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="1.46" steps="135093"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.756" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="coupling">
   <goal name="decreaseKey&#39;vc.756.0" expl="VC for decreaseKey" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="decreaseKey&#39;vc.756.0.0" expl="VC for decreaseKey" proved="true">
    <transf name="unfold" proved="true" arg1="coupling" arg2="in" arg3="Ensures102">
     <goal name="decreaseKey&#39;vc.756.0.0.0" expl="VC for decreaseKey" proved="true">
     <transf name="split_premise_right" proved="true" >
      <goal name="decreaseKey&#39;vc.756.0.0.0.0" expl="VC for decreaseKey" proved="true">
      <transf name="instantiate" proved="true" arg1="Ensures106" arg2="l_pq,r_pq">
       <goal name="decreaseKey&#39;vc.756.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
       <transf name="unfold" proved="true" arg1="coupling0">
        <goal name="decreaseKey&#39;vc.756.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="decreaseKey&#39;vc.756.0.0.0.0.0.0.0" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="0.73" steps="1396"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.756.0.0.0.0.0.0.1" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="5.03" steps="17241"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.756.0.0.0.0.0.0.2" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="3.20" steps="9469"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.756.0.0.0.0.0.0.3" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="3.01" steps="8821"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.756.0.0.0.0.0.0.4" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="3.45" steps="12981"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.756.0.0.0.0.0.0.5" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="4.16" steps="17125"/></proof>
         </goal>
         <goal name="decreaseKey&#39;vc.756.0.0.0.0.0.0.6" expl="VC for decreaseKey" proved="true">
         <proof prover="1" timelimit="90"><result status="valid" time="3.21" steps="12975"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="decreaseKey&#39;vc.756.0.1" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.64" steps="637"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.756.0.2" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.65" steps="637"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.756.0.3" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.65" steps="637"/></proof>
    </goal>
    <goal name="decreaseKey&#39;vc.756.0.4" expl="VC for decreaseKey" proved="true">
    <proof prover="1"><result status="valid" time="0.68" steps="637"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.757" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.93" steps="667"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.19" steps="61839"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.758" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="667"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.16" steps="61850"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.759" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.99" steps="672"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.27" steps="68770"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.760" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="671"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.17" steps="61905"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.761" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="185"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.27" steps="62692"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.762" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="294"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.763" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="892"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.764" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="358"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.765" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="287"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.766" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="892"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.767" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="294"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.768" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="3538"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.769" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="902"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.770" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="1230"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.771" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="191"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.34" steps="69027"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.772" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="191"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.26" steps="64319"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.773" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="304"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.774" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="968"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.775" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="367"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.776" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="297"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.777" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.35" steps="968"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.778" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="304"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.779" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="1.12" steps="3280"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.780" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.37" steps="978"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.781" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decreaseKey&#39;vc.781.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.23" steps="179"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.781.1" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.25" steps="179"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.781.2" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.25" steps="179"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.781.3" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.15" steps="179"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.781.4" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.28" steps="278"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.781.5" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.17" steps="278"/></proof>
   </goal>
   <goal name="decreaseKey&#39;vc.781.6" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.24" steps="296"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decreaseKey&#39;vc.782" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="197"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.42" steps="71896"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.783" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.22" steps="52963"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.784" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.785" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.786" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.787" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.20" steps="52839"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.788" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.21" steps="53265"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.789" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.20" steps="53442"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.790" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.22" steps="53294"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.791" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.20" steps="53758"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.792" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.793" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.794" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.20" steps="54956"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.795" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.796" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.21" steps="55010"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.797" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.798" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.20" steps="54991"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.799" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.800" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.20" steps="55062"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.801" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="0.33" steps="386"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.66" steps="88028"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.802" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.803" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.804" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.805" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.806" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.807" expl="write frame slots" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.20" steps="56857"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.808" expl="write frame eSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.809" expl="write frame bSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.810" expl="write frame dSlots" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.811" expl="write frame sntl" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.21" steps="56723"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.812" expl="write frame sibling" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.21" steps="57187"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.813" expl="write frame prev" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.23" steps="57364"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.814" expl="write frame head" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.21" steps="57178"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.815" expl="write frame child" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.22" steps="57680"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.816" expl="write frame bagEdges" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.817" expl="write frame adjList" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.818" expl="write frame rep" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.22" steps="58971"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.819" expl="write frame wght" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.820" expl="write frame tag" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.22" steps="58826"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.821" expl="write frame strv" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.822" expl="write frame size" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.21" steps="58769"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.823" expl="write frame numVerts" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.824" expl="write frame length" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="209"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.22" steps="58764"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.825" expl="write frame key" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="390"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.79" steps="98992"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.826" expl="write frame endv" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.827" expl="write frame eLength" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.828" expl="write frame dLength" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.829" expl="write frame bagNode" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.830" expl="write frame bLength" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="209"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.831" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="3178"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.69" steps="88288"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.832" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="14.57" steps="27044"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.833" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="207"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.15" steps="55974"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.834" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="207"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.15" steps="55985"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.835" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="208"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.21" steps="59650"/></proof>
  </goal>
  <goal name="decreaseKey&#39;vc.836" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="211"/></proof>
  <proof prover="4" timelimit="90"><result status="valid" time="0.15" steps="56040"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Client">
 <goal name="dijkstra_NODEC&#39;vc" expl="VC for dijkstra_NODEC">
 <transf name="split_vc" >
  <goal name="dijkstra_NODEC&#39;vc.0" expl="numVs := g.numVerts" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.06" steps="44"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.1" expl="Pqueue(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.07" steps="82"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.2" expl="Pqueue(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.06" steps="82"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.3" expl="Pqueue(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.09" steps="83"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.4" expl="Pqueue(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.17" steps="353"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.5" expl="Pqueue(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.09" steps="92"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.6" expl="array size" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.22" steps="206"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.7" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.33" steps="256"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.40" steps="416"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.63" steps="1329"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.50" steps="4014"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.38" steps="409"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="1343"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.13" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.41" steps="416"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.14" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.54" steps="924"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.68" steps="1343"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.16" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.77" steps="1389"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.17" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.36" steps="262"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.18" expl="initDistances(dist,100)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.36" steps="410"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.19" expl="initDistances(dist,100)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.32" steps="262"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.20" expl="assertion" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.58" steps="318"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.21" expl="ins := insert(queue,0,source)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.73" steps="474"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.22" expl="ins := insert(queue,0,source)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.52" steps="314"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.23" expl="ins := insert(queue,0,source)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.52" steps="314"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.24" expl="ins := insert(queue,0,source)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.56" steps="317"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.25" expl="ins := insert(queue,0,source)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.56" steps="317"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.26" expl="ins := insert(queue,0,source)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.50" steps="2611"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.27" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.78" steps="520"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.28" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.54" steps="336"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.29" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.55" steps="336"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.30" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.53" steps="337"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.31" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.55" steps="338"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.32" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.54" steps="338"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.33" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.55" steps="338"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.34" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="5.73" steps="9674"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.35" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.44" steps="1951"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.36" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.48" steps="2032"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.37" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.54" steps="342"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.38" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.59" steps="2069"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.39" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="2.13" steps="3112"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.40" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="2.80" steps="3769"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.41" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.87" steps="858"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.42" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="2.27" steps="3790"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.43" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.88" steps="887"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.44" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.80" steps="576"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.45" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.55" steps="353"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.46" expl="min := deleteMin(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.60" steps="1967"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.47" expl="min := deleteMin(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.52" steps="370"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.48" expl="min := deleteMin(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.52" steps="370"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.49" expl="min := deleteMin(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.55" steps="371"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.50" expl="min := deleteMin(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.55" steps="371"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.51" expl="assertion" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.94" steps="1058"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.52" expl="minTag := min.tag" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.84" steps="640"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.53" expl="assertion" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="4.25" steps="8364"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.54" expl="minKey := min.key" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.88" steps="656"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.55" expl="precondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.92" steps="6963"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.56" expl="i := dist.{minTag} ( index is in bounds)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.92" steps="7092"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.57" expl="precondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="4.10" steps="7051"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.58" expl=" index is in bounds" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.94" steps="7140"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.59" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.64" steps="464"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.60" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.71" steps="1017"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.61" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.11" steps="1663"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.62" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="5.80" steps="11651"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.63" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.69" steps="714"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.64" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.16" steps="1663"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.65" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.75" steps="1017"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.66" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.90" steps="1454"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.67" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.16" steps="1695"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.68" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.40" steps="2391"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.69" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.68" steps="470"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.70" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="2.98" steps="4759"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.71" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.59" steps="468"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.72" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.60" steps="468"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.73" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="2.95" steps="5337"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.74" expl="edges := getEdges(g)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="8.37" steps="13857"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.75" expl="edges := getEdges(g)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.60" steps="472"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.76" expl="edges := getEdges(g)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.57" steps="472"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.77" expl="eLen := edges.eLength" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.06" steps="813"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.78" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.57" steps="494"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.79" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.58" steps="494"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.80" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.61" steps="494"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.81" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.65" steps="502"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.82" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="9.94" steps="17436"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.83" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="7.87" steps="12978"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.84" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.62" steps="501"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.85" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.59" steps="501"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.86" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="5.00" steps="7651"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.87" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="9.93" steps="14885"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.88" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.65" steps="504"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.89" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.43" steps="1694"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.90" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.47" steps="2057"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.91" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.67" steps="5325"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.92" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.70" steps="2482"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.93" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="4.42" steps="5978"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.94" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="2.24" steps="3716"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.95" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.34" steps="1442"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.96" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.11" steps="873"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.97" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="9.47" steps="14860"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.98" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.62" steps="517"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.99" expl="precondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="9.36" steps="14267"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.100" expl="edge := edges.{i} ( index is in bounds)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="6.73" steps="10976"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.101" expl="startVertex := edge.strv" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="7.41" steps="12021"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.102" expl="endVertex := edge.endv" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="7.40" steps="11622"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.103" expl="weight := edge.wght" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="7.01" steps="11674"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.104" expl="assertion" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="12.02" steps="21845"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.105" expl="precondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.14" steps="4108"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.106" expl="d := dist.{startVertex} ( index is in bounds)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="18.36" steps="26756"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.107" expl="precondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.11" steps="4155"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.108" expl="d := dist.{endVertex} ( index is in bounds)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="18.77" steps="27352"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.109" expl="assertion" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="12.92" steps="21134"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.110" expl="assertion" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="12.88" steps="21178"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.111" expl="assertion" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.68" steps="570"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.112" expl="assertion" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="18.21" steps="28790"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.113" expl="assertion" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="9.14" steps="13512"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.114" expl="ins := insert(queue,candidateDist,endVertex)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.35" steps="4623"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.115" expl="ins := insert(queue,candidateDist,endVertex)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="576"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.47"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.116" expl="ins := insert(queue,candidateDist,endVertex)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="576"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.45"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.117" expl="ins := insert(queue,candidateDist,endVertex)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.65" steps="576"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.47"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.118" expl="ins := insert(queue,candidateDist,endVertex)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="576"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.34"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.119" expl="ins := insert(queue,candidateDist,endVertex)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="577"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.46"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.120" expl="assertion" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.54" steps="596"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.121" expl="assertion" proved="true">
  <transf name="unfold" proved="true" arg1="edgesInRange">
   <goal name="dijkstra_NODEC&#39;vc.121.0" expl="VC for dijkstra_NODEC" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="dijkstra_NODEC&#39;vc.121.0.0" expl="VC for dijkstra_NODEC" proved="true">
    <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="15.39" steps="3166810"/></proof>
    <proof prover="1" timelimit="30"><result status="valid" time="37.01" steps="66821"/></proof>
    <proof prover="4" timelimit="30" obsolete="true"><result status="timeout" time="30.00" steps="1337488"/></proof>
    <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.122" expl="precondition" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.75" steps="1399143"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="8.93" steps="13288"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="timeout" time="30.00" steps="1311617"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.123" expl=" index is in bounds" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="15.88" steps="3004299"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="15.39" steps="23880"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="timeout" time="30.00" steps="1287858"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.124" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.77" steps="662"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.63"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.125" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.01" steps="1472"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.56"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.126" expl="type invariant" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="16.51" steps="3343722"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="1.71" steps="2420"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.127" expl="type invariant" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="16.24" steps="3403684"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="24.20" steps="40243"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="timeout" time="30.00" steps="1495197"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.128" expl="type invariant" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.83" steps="1017"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.58"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.129" expl="type invariant" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="15.21" steps="3349757"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="2.41" steps="3978"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.130" expl="type invariant" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="16.44" steps="3288968"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="1.03" steps="1472"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.54"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.131" expl="type invariant" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="19.52" steps="3295234"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="1.26" steps="2059"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.53"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.132" expl="type invariant" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="18.56" steps="3357223"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="1.76" steps="2430"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="timeout" time="30.00" steps="1566249"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.133" expl="type invariant" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="16.11" steps="3510366"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="2.13" steps="3374"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="1.50" steps="140288"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="21.50"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.134" expl="type invariant" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.31" steps="797640"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="0.78" steps="668"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="3.16" steps="192106"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.63"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.135" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.71" steps="1167832"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="5.40" steps="8280"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="timeout" time="30.00" steps="1373930"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.136" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.71" steps="662"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.62"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.137" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.10" steps="319963"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="0.67" steps="662"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.43" steps="78921"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.138" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="18.81" steps="3915652"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="6.83" steps="11738"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="timeout" time="30.00" steps="1536399"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.139" expl="assertion" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="17.07" steps="2979678"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="18.38" steps="29891"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="timeout" time="30.00" steps="1490745"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.140" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.06" steps="146112"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="0.70" steps="666"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.41" steps="76246"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.55"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.141" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="17.84" steps="2971824"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="12.88" steps="18204"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="timeout" time="30.00" steps="1517666"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.142" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.64" steps="668"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.64"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.143" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.67" steps="669"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.64"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.144" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.05" steps="36916"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="670"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="68774"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.54"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.145" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="16.30" steps="2972260"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="18.26" steps="28230"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="timeout" time="30.00" steps="1518090"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.146" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.06" steps="38138"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="0.68" steps="672"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="69795"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.59"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.147" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="15.59" steps="3094936"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="29.65" steps="39698"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="timeout" time="30.00" steps="1415194"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.148" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.04" steps="38148"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="0.68" steps="674"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.25" steps="69812"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.63"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.149" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="16.29" steps="3018985"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="19.74" steps="32712"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="timeout" time="30.00" steps="1410920"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.150" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.20" steps="678150"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="0.80" steps="684"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.43" steps="80344"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.151" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="40"><result status="valid" time="6.50" steps="9365"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.152" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="40"><result status="valid" time="7.00" steps="11475"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.153" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000" obsolete="true"><result status="highfailure" time="17.43" steps="4447022"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="24.13" steps="32728"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="timeout" time="30.00" steps="1430383"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.154" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.48" steps="1054800"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="2.96" steps="4392"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="19.39" steps="612381"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="22.55"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.155" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.53" steps="1055405"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="4.26" steps="6190"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="18.26" steps="627292"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="21.07"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.156" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.55" steps="1056777"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="3.16" steps="5806"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="20.00" steps="627892"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="19.95"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.157" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.52" steps="1051946"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="3.04" steps="5039"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="18.12" steps="628196"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="19.98"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.158" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="1.42" steps="1989368"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="4.12" steps="6005"/></proof>
  <proof prover="4" timelimit="30" obsolete="true"><result status="timeout" time="30.00" steps="1399606"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.159" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="dijkstra_NODEC&#39;vc.159.0" expl="loop invariant preservation" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="8.76" steps="17674"/></proof>
   </goal>
   <goal name="dijkstra_NODEC&#39;vc.159.1" expl="loop invariant preservation" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="8.32" steps="16546"/></proof>
   </goal>
   <goal name="dijkstra_NODEC&#39;vc.159.2" expl="loop invariant preservation" proved="true">
   <proof prover="1" timelimit="30"><result status="valid" time="19.45" steps="44899"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.160" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.68" steps="688"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.50"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.161" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.44" steps="4603"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.162" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.05" steps="33960"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="0.63" steps="570"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="64394"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.58"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.163" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.64" steps="570"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.34"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.164" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.65" steps="571"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.47"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.165" expl="assertion" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.60" steps="568"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.166" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.64" steps="568"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.167" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.64" steps="568"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.168" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.17" steps="528083"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="568"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.39" steps="71129"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.56"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.169" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.17" steps="528178"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="569"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.40" steps="71153"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.57"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.170" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.64" steps="570"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.171" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.63" steps="570"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.48"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.172" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.68" steps="570"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.47"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.173" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.64" steps="570"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.47"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.174" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.63" steps="570"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.45"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.175" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.77" steps="583"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.48"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.176" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.64" steps="570"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.177" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.73" steps="585"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.178" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.73" steps="584"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.179" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.64" steps="570"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.46"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.180" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.62" steps="570"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.50"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.181" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.65" steps="570"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.46"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.182" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="570"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.46"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.183" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="570"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.48"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.184" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.74" steps="579"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.45"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.185" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.73" steps="584"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.50"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.186" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="10000"><result status="valid" time="0.05" steps="34471"/></proof>
  <proof prover="1" timelimit="30"><result status="valid" time="0.71" steps="572"/></proof>
  <proof prover="4" timelimit="30"><result status="valid" time="0.26" steps="64993"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.61"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.187" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="3.09" steps="4308"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.188" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.65" steps="534"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.189" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="534"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.32"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.190" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="535"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.191" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.64" steps="532"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.192" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.64" steps="532"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.41"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.193" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.65" steps="532"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.41"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.194" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.65" steps="532"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.40"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.195" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="532"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.40"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.196" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.70" steps="545"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.197" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="532"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.198" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.73" steps="547"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.43"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.199" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.73" steps="546"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.43"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.200" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.64" steps="532"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.201" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.65" steps="532"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.202" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="532"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.40"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.203" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.65" steps="532"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.40"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.204" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.21" steps="910"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.205" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.66" steps="534"/></proof>
  <proof prover="5" timelimit="30" memlimit="10000"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.206" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="2.66" steps="4080"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.207" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.57" steps="410"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.208" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.61" steps="410"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.209" expl="isEmp := isEmpty(queue)" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.59" steps="411"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.210" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.62" steps="410"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.211" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.58" steps="410"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.212" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.61" steps="410"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.213" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="10.34" steps="17398"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.214" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="4.72" steps="8071"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.215" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="4.74" steps="8573"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.216" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.59" steps="414"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.217" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.10" steps="1174"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.218" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.08" steps="1440"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.219" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.09" steps="1147"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.220" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.24" steps="1560"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.221" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="2.00" steps="2479"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.222" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.54" steps="2255"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.223" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.62" steps="422"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.224" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.61" steps="422"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.225" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="0.59" steps="370"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.226" expl="postcondition" proved="true">
  <proof prover="1" timelimit="30"><result status="valid" time="1.56" steps="1815"/></proof>
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.227" expl="wr frame alloc">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.228" expl="write frame slots">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.229" expl="write frame eSlots">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.230" expl="write frame bSlots">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.231" expl="write frame dSlots">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.232" expl="write frame sntl">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.233" expl="write frame sibling">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.234" expl="write frame prev">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.235" expl="write frame head">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.236" expl="write frame child">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.237" expl="write frame bagEdges">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.238" expl="write frame adjList">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.239" expl="write frame rep">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.240" expl="write frame wght">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.241" expl="write frame tag">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.242" expl="write frame strv">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.243" expl="write frame size">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.244" expl="write frame numVerts">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.245" expl="write frame length">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.246" expl="write frame key">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.247" expl="write frame endv">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.248" expl="write frame eLength">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.249" expl="write frame dLength">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.250" expl="write frame bagNode">
  </goal>
  <goal name="dijkstra_NODEC&#39;vc.251" expl="write frame bLength">
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
